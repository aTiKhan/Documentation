### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter
  commentId: T:Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter
  id: SimpleMessageConverter
  parent: Steeltoe.Messaging.RabbitMQ.Support.Converter
  children:
  - Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.#ctor(Microsoft.Extensions.Logging.ILogger{Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter})
  - Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.CreateMessage(System.Object,Steeltoe.Messaging.IMessageHeaders,System.Object)
  - Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.DEFAULT_SERVICE_NAME
  - Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.DefaultCharset
  - Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.FromMessage(Steeltoe.Messaging.IMessage,System.Type,System.Object)
  - Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.ServiceName
  langs:
  - csharp
  - vb
  name: SimpleMessageConverter
  nameWithType: SimpleMessageConverter
  fullName: Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/Converter/SimpleMessageConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SimpleMessageConverter
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/Converter/SimpleMessageConverter.cs
    startLine: 15
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support.Converter
  syntax:
    content: 'public class SimpleMessageConverter : AbstractMessageConverter, ISmartMessageConverter, IMessageConverter, IServiceNameAware'
    content.vb: >-
      Public Class SimpleMessageConverter

          Inherits AbstractMessageConverter

          Implements ISmartMessageConverter, IMessageConverter, IServiceNameAware
  inheritance:
  - System.Object
  - Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter
  implements:
  - Steeltoe.Messaging.Converter.ISmartMessageConverter
  - Steeltoe.Messaging.Converter.IMessageConverter
  - IServiceNameAware
  inheritedMembers:
  - Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter._logger
  - Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.CreateMessageIds
  - Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.FromMessage``1(Steeltoe.Messaging.IMessage,System.Object)
  - Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.FromMessage(Steeltoe.Messaging.IMessage,System.Type)
  - Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.FromMessage``1(Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.ToMessage(System.Object,Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.ToMessage(System.Object,Steeltoe.Messaging.IMessageHeaders,System.Object)
  - Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.CreateMessage(System.Object,Steeltoe.Messaging.IMessageHeaders)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.DEFAULT_SERVICE_NAME
  commentId: F:Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.DEFAULT_SERVICE_NAME
  id: DEFAULT_SERVICE_NAME
  parent: Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter
  langs:
  - csharp
  - vb
  name: DEFAULT_SERVICE_NAME
  nameWithType: SimpleMessageConverter.DEFAULT_SERVICE_NAME
  fullName: Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.DEFAULT_SERVICE_NAME
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/Converter/SimpleMessageConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DEFAULT_SERVICE_NAME
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/Converter/SimpleMessageConverter.cs
    startLine: 17
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support.Converter
  syntax:
    content: public const string DEFAULT_SERVICE_NAME = "SimpleMessageConverter"
    return:
      type: System.String
    content.vb: Public Const DEFAULT_SERVICE_NAME As String = "SimpleMessageConverter"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.DefaultCharset
  commentId: P:Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.DefaultCharset
  id: DefaultCharset
  parent: Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter
  langs:
  - csharp
  - vb
  name: DefaultCharset
  nameWithType: SimpleMessageConverter.DefaultCharset
  fullName: Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.DefaultCharset
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/Converter/SimpleMessageConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DefaultCharset
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/Converter/SimpleMessageConverter.cs
    startLine: 19
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support.Converter
  syntax:
    content: public string DefaultCharset { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DefaultCharset As String
  overload: Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.DefaultCharset*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.ServiceName
  commentId: P:Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.ServiceName
  id: ServiceName
  parent: Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter
  langs:
  - csharp
  - vb
  name: ServiceName
  nameWithType: SimpleMessageConverter.ServiceName
  fullName: Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.ServiceName
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/Converter/SimpleMessageConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ServiceName
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/Converter/SimpleMessageConverter.cs
    startLine: 21
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support.Converter
  syntax:
    content: public override string ServiceName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides Property ServiceName As String
  overridden: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.ServiceName
  overload: Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.ServiceName*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.#ctor(Microsoft.Extensions.Logging.ILogger{Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.#ctor(Microsoft.Extensions.Logging.ILogger{Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter})
  id: '#ctor(Microsoft.Extensions.Logging.ILogger{Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter})'
  parent: Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter
  langs:
  - csharp
  - vb
  name: SimpleMessageConverter(ILogger<SimpleMessageConverter>)
  nameWithType: SimpleMessageConverter.SimpleMessageConverter(ILogger<SimpleMessageConverter>)
  fullName: Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.SimpleMessageConverter(Microsoft.Extensions.Logging.ILogger<Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter>)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/Converter/SimpleMessageConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/Converter/SimpleMessageConverter.cs
    startLine: 23
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support.Converter
  syntax:
    content: public SimpleMessageConverter(ILogger<SimpleMessageConverter> logger = null)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger{Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter}
    content.vb: Public Sub New(logger As ILogger(Of SimpleMessageConverter) = Nothing)
  overload: Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.#ctor*
  nameWithType.vb: SimpleMessageConverter.SimpleMessageConverter(ILogger(Of SimpleMessageConverter))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.SimpleMessageConverter(Microsoft.Extensions.Logging.ILogger(Of Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter))
  name.vb: SimpleMessageConverter(ILogger(Of SimpleMessageConverter))
- uid: Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.FromMessage(Steeltoe.Messaging.IMessage,System.Type,System.Object)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.FromMessage(Steeltoe.Messaging.IMessage,System.Type,System.Object)
  id: FromMessage(Steeltoe.Messaging.IMessage,System.Type,System.Object)
  parent: Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter
  langs:
  - csharp
  - vb
  name: FromMessage(IMessage, Type, Object)
  nameWithType: SimpleMessageConverter.FromMessage(IMessage, Type, Object)
  fullName: Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.FromMessage(Steeltoe.Messaging.IMessage, System.Type, System.Object)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/Converter/SimpleMessageConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: FromMessage
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/Converter/SimpleMessageConverter.cs
    startLine: 28
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support.Converter
  syntax:
    content: public override object FromMessage(IMessage from, Type targetType, object convertionsHint)
    parameters:
    - id: from
      type: Steeltoe.Messaging.IMessage
    - id: targetType
      type: System.Type
    - id: convertionsHint
      type: System.Object
    return:
      type: System.Object
    content.vb: Public Overrides Function FromMessage(from As IMessage, targetType As Type, convertionsHint As Object) As Object
  overridden: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.FromMessage(Steeltoe.Messaging.IMessage,System.Type,System.Object)
  overload: Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.FromMessage*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.CreateMessage(System.Object,Steeltoe.Messaging.IMessageHeaders,System.Object)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.CreateMessage(System.Object,Steeltoe.Messaging.IMessageHeaders,System.Object)
  id: CreateMessage(System.Object,Steeltoe.Messaging.IMessageHeaders,System.Object)
  parent: Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter
  langs:
  - csharp
  - vb
  name: CreateMessage(Object, IMessageHeaders, Object)
  nameWithType: SimpleMessageConverter.CreateMessage(Object, IMessageHeaders, Object)
  fullName: Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.CreateMessage(System.Object, Steeltoe.Messaging.IMessageHeaders, System.Object)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/Converter/SimpleMessageConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CreateMessage
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/Converter/SimpleMessageConverter.cs
    startLine: 94
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support.Converter
  syntax:
    content: protected override IMessage CreateMessage(object payload, IMessageHeaders messageProperties, object conversionHint)
    parameters:
    - id: payload
      type: System.Object
    - id: messageProperties
      type: Steeltoe.Messaging.IMessageHeaders
    - id: conversionHint
      type: System.Object
    return:
      type: Steeltoe.Messaging.IMessage
    content.vb: Protected Overrides Function CreateMessage(payload As Object, messageProperties As IMessageHeaders, conversionHint As Object) As IMessage
  overridden: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.CreateMessage(System.Object,Steeltoe.Messaging.IMessageHeaders,System.Object)
  overload: Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.CreateMessage*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Steeltoe.Messaging.RabbitMQ.Support.Converter
  commentId: N:Steeltoe.Messaging.RabbitMQ.Support.Converter
  name: Steeltoe.Messaging.RabbitMQ.Support.Converter
  nameWithType: Steeltoe.Messaging.RabbitMQ.Support.Converter
  fullName: Steeltoe.Messaging.RabbitMQ.Support.Converter
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter
  commentId: T:Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter
  parent: Steeltoe.Messaging.RabbitMQ.Support.Converter
  name: AbstractMessageConverter
  nameWithType: AbstractMessageConverter
  fullName: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter
- uid: Steeltoe.Messaging.Converter.ISmartMessageConverter
  commentId: T:Steeltoe.Messaging.Converter.ISmartMessageConverter
  parent: Steeltoe.Messaging.Converter
  name: ISmartMessageConverter
  nameWithType: ISmartMessageConverter
  fullName: Steeltoe.Messaging.Converter.ISmartMessageConverter
- uid: Steeltoe.Messaging.Converter.IMessageConverter
  commentId: T:Steeltoe.Messaging.Converter.IMessageConverter
  parent: Steeltoe.Messaging.Converter
  name: IMessageConverter
  nameWithType: IMessageConverter
  fullName: Steeltoe.Messaging.Converter.IMessageConverter
- uid: IServiceNameAware
  isExternal: true
  name: IServiceNameAware
  nameWithType: IServiceNameAware
  fullName: IServiceNameAware
- uid: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter._logger
  commentId: F:Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter._logger
  parent: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter
  name: _logger
  nameWithType: AbstractMessageConverter._logger
  fullName: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter._logger
- uid: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.CreateMessageIds
  commentId: P:Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.CreateMessageIds
  parent: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter
  name: CreateMessageIds
  nameWithType: AbstractMessageConverter.CreateMessageIds
  fullName: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.CreateMessageIds
- uid: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.FromMessage``1(Steeltoe.Messaging.IMessage,System.Object)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.FromMessage``1(Steeltoe.Messaging.IMessage,System.Object)
  parent: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter
  isExternal: true
  name: FromMessage<T>(IMessage, Object)
  nameWithType: AbstractMessageConverter.FromMessage<T>(IMessage, Object)
  fullName: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.FromMessage<T>(Steeltoe.Messaging.IMessage, System.Object)
  nameWithType.vb: AbstractMessageConverter.FromMessage(Of T)(IMessage, Object)
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.FromMessage(Of T)(Steeltoe.Messaging.IMessage, System.Object)
  name.vb: FromMessage(Of T)(IMessage, Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.FromMessage``1(Steeltoe.Messaging.IMessage,System.Object)
    name: FromMessage<T>
    nameWithType: AbstractMessageConverter.FromMessage<T>
    fullName: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.FromMessage<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.FromMessage``1(Steeltoe.Messaging.IMessage,System.Object)
    name: FromMessage(Of T)
    nameWithType: AbstractMessageConverter.FromMessage(Of T)
    fullName: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.FromMessage(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.FromMessage(Steeltoe.Messaging.IMessage,System.Type)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.FromMessage(Steeltoe.Messaging.IMessage,System.Type)
  parent: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter
  isExternal: true
  name: FromMessage(IMessage, Type)
  nameWithType: AbstractMessageConverter.FromMessage(IMessage, Type)
  fullName: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.FromMessage(Steeltoe.Messaging.IMessage, System.Type)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.FromMessage(Steeltoe.Messaging.IMessage,System.Type)
    name: FromMessage
    nameWithType: AbstractMessageConverter.FromMessage
    fullName: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.FromMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.FromMessage(Steeltoe.Messaging.IMessage,System.Type)
    name: FromMessage
    nameWithType: AbstractMessageConverter.FromMessage
    fullName: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.FromMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.FromMessage``1(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.FromMessage``1(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter
  name: FromMessage<T>(IMessage)
  nameWithType: AbstractMessageConverter.FromMessage<T>(IMessage)
  fullName: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.FromMessage<T>(Steeltoe.Messaging.IMessage)
  nameWithType.vb: AbstractMessageConverter.FromMessage(Of T)(IMessage)
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.FromMessage(Of T)(Steeltoe.Messaging.IMessage)
  name.vb: FromMessage(Of T)(IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.FromMessage``1(Steeltoe.Messaging.IMessage)
    name: FromMessage<T>
    nameWithType: AbstractMessageConverter.FromMessage<T>
    fullName: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.FromMessage<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.FromMessage``1(Steeltoe.Messaging.IMessage)
    name: FromMessage(Of T)
    nameWithType: AbstractMessageConverter.FromMessage(Of T)
    fullName: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.FromMessage(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.ToMessage(System.Object,Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.ToMessage(System.Object,Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter
  isExternal: true
  name: ToMessage(Object, IMessageHeaders)
  nameWithType: AbstractMessageConverter.ToMessage(Object, IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.ToMessage(System.Object, Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.ToMessage(System.Object,Steeltoe.Messaging.IMessageHeaders)
    name: ToMessage
    nameWithType: AbstractMessageConverter.ToMessage
    fullName: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.ToMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.ToMessage(System.Object,Steeltoe.Messaging.IMessageHeaders)
    name: ToMessage
    nameWithType: AbstractMessageConverter.ToMessage
    fullName: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.ToMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.ToMessage(System.Object,Steeltoe.Messaging.IMessageHeaders,System.Object)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.ToMessage(System.Object,Steeltoe.Messaging.IMessageHeaders,System.Object)
  parent: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter
  isExternal: true
  name: ToMessage(Object, IMessageHeaders, Object)
  nameWithType: AbstractMessageConverter.ToMessage(Object, IMessageHeaders, Object)
  fullName: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.ToMessage(System.Object, Steeltoe.Messaging.IMessageHeaders, System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.ToMessage(System.Object,Steeltoe.Messaging.IMessageHeaders,System.Object)
    name: ToMessage
    nameWithType: AbstractMessageConverter.ToMessage
    fullName: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.ToMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.ToMessage(System.Object,Steeltoe.Messaging.IMessageHeaders,System.Object)
    name: ToMessage
    nameWithType: AbstractMessageConverter.ToMessage
    fullName: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.ToMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.CreateMessage(System.Object,Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.CreateMessage(System.Object,Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter
  isExternal: true
  name: CreateMessage(Object, IMessageHeaders)
  nameWithType: AbstractMessageConverter.CreateMessage(Object, IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.CreateMessage(System.Object, Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.CreateMessage(System.Object,Steeltoe.Messaging.IMessageHeaders)
    name: CreateMessage
    nameWithType: AbstractMessageConverter.CreateMessage
    fullName: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.CreateMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.CreateMessage(System.Object,Steeltoe.Messaging.IMessageHeaders)
    name: CreateMessage
    nameWithType: AbstractMessageConverter.CreateMessage
    fullName: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.CreateMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.Converter
  commentId: N:Steeltoe.Messaging.Converter
  name: Steeltoe.Messaging.Converter
  nameWithType: Steeltoe.Messaging.Converter
  fullName: Steeltoe.Messaging.Converter
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.DefaultCharset*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.DefaultCharset
  name: DefaultCharset
  nameWithType: SimpleMessageConverter.DefaultCharset
  fullName: Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.DefaultCharset
- uid: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.ServiceName
  commentId: P:Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.ServiceName
  parent: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter
  name: ServiceName
  nameWithType: AbstractMessageConverter.ServiceName
  fullName: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.ServiceName
- uid: Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.ServiceName*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.ServiceName
  name: ServiceName
  nameWithType: SimpleMessageConverter.ServiceName
  fullName: Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.ServiceName
- uid: Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.#ctor*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.#ctor
  name: SimpleMessageConverter
  nameWithType: SimpleMessageConverter.SimpleMessageConverter
  fullName: Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.SimpleMessageConverter
- uid: Microsoft.Extensions.Logging.ILogger{Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter}
  commentId: T:Microsoft.Extensions.Logging.ILogger{Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter}
  parent: Microsoft.Extensions.Logging
  definition: Microsoft.Extensions.Logging.ILogger`1
  name: ILogger<SimpleMessageConverter>
  nameWithType: ILogger<SimpleMessageConverter>
  fullName: Microsoft.Extensions.Logging.ILogger<Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter>
  nameWithType.vb: ILogger(Of SimpleMessageConverter)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter)
  name.vb: ILogger(Of SimpleMessageConverter)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter
    name: SimpleMessageConverter
    nameWithType: SimpleMessageConverter
    fullName: Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter
    name: SimpleMessageConverter
    nameWithType: SimpleMessageConverter
    fullName: Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILogger`1
  commentId: T:Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  name: ILogger<TCategoryName>
  nameWithType: ILogger<TCategoryName>
  fullName: Microsoft.Extensions.Logging.ILogger<TCategoryName>
  nameWithType.vb: ILogger(Of TCategoryName)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of TCategoryName)
  name.vb: ILogger(Of TCategoryName)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCategoryName
    nameWithType: TCategoryName
    fullName: TCategoryName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCategoryName
    nameWithType: TCategoryName
    fullName: TCategoryName
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.FromMessage(Steeltoe.Messaging.IMessage,System.Type,System.Object)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.FromMessage(Steeltoe.Messaging.IMessage,System.Type,System.Object)
  parent: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter
  isExternal: true
  name: FromMessage(IMessage, Type, Object)
  nameWithType: AbstractMessageConverter.FromMessage(IMessage, Type, Object)
  fullName: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.FromMessage(Steeltoe.Messaging.IMessage, System.Type, System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.FromMessage(Steeltoe.Messaging.IMessage,System.Type,System.Object)
    name: FromMessage
    nameWithType: AbstractMessageConverter.FromMessage
    fullName: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.FromMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.FromMessage(Steeltoe.Messaging.IMessage,System.Type,System.Object)
    name: FromMessage
    nameWithType: AbstractMessageConverter.FromMessage
    fullName: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.FromMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.FromMessage*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.FromMessage
  name: FromMessage
  nameWithType: SimpleMessageConverter.FromMessage
  fullName: Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.FromMessage
- uid: Steeltoe.Messaging.IMessage
  commentId: T:Steeltoe.Messaging.IMessage
  parent: Steeltoe.Messaging
  name: IMessage
  nameWithType: IMessage
  fullName: Steeltoe.Messaging.IMessage
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.CreateMessage(System.Object,Steeltoe.Messaging.IMessageHeaders,System.Object)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.CreateMessage(System.Object,Steeltoe.Messaging.IMessageHeaders,System.Object)
  parent: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter
  isExternal: true
  name: CreateMessage(Object, IMessageHeaders, Object)
  nameWithType: AbstractMessageConverter.CreateMessage(Object, IMessageHeaders, Object)
  fullName: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.CreateMessage(System.Object, Steeltoe.Messaging.IMessageHeaders, System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.CreateMessage(System.Object,Steeltoe.Messaging.IMessageHeaders,System.Object)
    name: CreateMessage
    nameWithType: AbstractMessageConverter.CreateMessage
    fullName: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.CreateMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.CreateMessage(System.Object,Steeltoe.Messaging.IMessageHeaders,System.Object)
    name: CreateMessage
    nameWithType: AbstractMessageConverter.CreateMessage
    fullName: Steeltoe.Messaging.RabbitMQ.Support.Converter.AbstractMessageConverter.CreateMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.CreateMessage*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.CreateMessage
  name: CreateMessage
  nameWithType: SimpleMessageConverter.CreateMessage
  fullName: Steeltoe.Messaging.RabbitMQ.Support.Converter.SimpleMessageConverter.CreateMessage
- uid: Steeltoe.Messaging.IMessageHeaders
  commentId: T:Steeltoe.Messaging.IMessageHeaders
  parent: Steeltoe.Messaging
  name: IMessageHeaders
  nameWithType: IMessageHeaders
  fullName: Steeltoe.Messaging.IMessageHeaders
