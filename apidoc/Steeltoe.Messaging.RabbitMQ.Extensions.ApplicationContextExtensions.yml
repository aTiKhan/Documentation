### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions
  commentId: T:Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions
  id: ApplicationContextExtensions
  parent: Steeltoe.Messaging.RabbitMQ.Extensions
  children:
  - Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitAdmin(Steeltoe.Common.Contexts.IApplicationContext,System.String)
  - Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitBinding(Steeltoe.Common.Contexts.IApplicationContext,System.String)
  - Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitBindings(Steeltoe.Common.Contexts.IApplicationContext)
  - Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitExchange(Steeltoe.Common.Contexts.IApplicationContext,System.String)
  - Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitExchanges(Steeltoe.Common.Contexts.IApplicationContext)
  - Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitQueue(Steeltoe.Common.Contexts.IApplicationContext,System.String)
  - Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitQueues(Steeltoe.Common.Contexts.IApplicationContext)
  - Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitTemplate(Steeltoe.Common.Contexts.IApplicationContext,System.String)
  langs:
  - csharp
  - vb
  name: ApplicationContextExtensions
  nameWithType: ApplicationContextExtensions
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/ApplicationContextExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ApplicationContextExtensions
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/ApplicationContextExtensions.cs
    startLine: 11
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static class ApplicationContextExtensions
    content.vb: Public Module ApplicationContextExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitTemplate(Steeltoe.Common.Contexts.IApplicationContext,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitTemplate(Steeltoe.Common.Contexts.IApplicationContext,System.String)
  id: GetRabbitTemplate(Steeltoe.Common.Contexts.IApplicationContext,System.String)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions
  langs:
  - csharp
  - vb
  name: GetRabbitTemplate(IApplicationContext, String)
  nameWithType: ApplicationContextExtensions.GetRabbitTemplate(IApplicationContext, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitTemplate(Steeltoe.Common.Contexts.IApplicationContext, System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/ApplicationContextExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetRabbitTemplate
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/ApplicationContextExtensions.cs
    startLine: 13
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static RabbitTemplate GetRabbitTemplate(this IApplicationContext context, string name = null)
    parameters:
    - id: context
      type: Steeltoe.Common.Contexts.IApplicationContext
    - id: name
      type: System.String
    return:
      type: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetRabbitTemplate(context As IApplicationContext, name As String = Nothing) As RabbitTemplate
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitTemplate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitAdmin(Steeltoe.Common.Contexts.IApplicationContext,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitAdmin(Steeltoe.Common.Contexts.IApplicationContext,System.String)
  id: GetRabbitAdmin(Steeltoe.Common.Contexts.IApplicationContext,System.String)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions
  langs:
  - csharp
  - vb
  name: GetRabbitAdmin(IApplicationContext, String)
  nameWithType: ApplicationContextExtensions.GetRabbitAdmin(IApplicationContext, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitAdmin(Steeltoe.Common.Contexts.IApplicationContext, System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/ApplicationContextExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetRabbitAdmin
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/ApplicationContextExtensions.cs
    startLine: 18
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static IRabbitAdmin GetRabbitAdmin(this IApplicationContext context, string name = null)
    parameters:
    - id: context
      type: Steeltoe.Common.Contexts.IApplicationContext
    - id: name
      type: System.String
    return:
      type: Steeltoe.Messaging.RabbitMQ.Core.IRabbitAdmin
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetRabbitAdmin(context As IApplicationContext, name As String = Nothing) As IRabbitAdmin
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitAdmin*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitQueue(Steeltoe.Common.Contexts.IApplicationContext,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitQueue(Steeltoe.Common.Contexts.IApplicationContext,System.String)
  id: GetRabbitQueue(Steeltoe.Common.Contexts.IApplicationContext,System.String)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions
  langs:
  - csharp
  - vb
  name: GetRabbitQueue(IApplicationContext, String)
  nameWithType: ApplicationContextExtensions.GetRabbitQueue(IApplicationContext, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitQueue(Steeltoe.Common.Contexts.IApplicationContext, System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/ApplicationContextExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetRabbitQueue
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/ApplicationContextExtensions.cs
    startLine: 23
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static IQueue GetRabbitQueue(this IApplicationContext context, string name)
    parameters:
    - id: context
      type: Steeltoe.Common.Contexts.IApplicationContext
    - id: name
      type: System.String
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.IQueue
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetRabbitQueue(context As IApplicationContext, name As String) As IQueue
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitQueue*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitExchange(Steeltoe.Common.Contexts.IApplicationContext,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitExchange(Steeltoe.Common.Contexts.IApplicationContext,System.String)
  id: GetRabbitExchange(Steeltoe.Common.Contexts.IApplicationContext,System.String)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions
  langs:
  - csharp
  - vb
  name: GetRabbitExchange(IApplicationContext, String)
  nameWithType: ApplicationContextExtensions.GetRabbitExchange(IApplicationContext, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitExchange(Steeltoe.Common.Contexts.IApplicationContext, System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/ApplicationContextExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetRabbitExchange
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/ApplicationContextExtensions.cs
    startLine: 28
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static IExchange GetRabbitExchange(this IApplicationContext context, string name)
    parameters:
    - id: context
      type: Steeltoe.Common.Contexts.IApplicationContext
    - id: name
      type: System.String
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.IExchange
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetRabbitExchange(context As IApplicationContext, name As String) As IExchange
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitExchange*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitBinding(Steeltoe.Common.Contexts.IApplicationContext,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitBinding(Steeltoe.Common.Contexts.IApplicationContext,System.String)
  id: GetRabbitBinding(Steeltoe.Common.Contexts.IApplicationContext,System.String)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions
  langs:
  - csharp
  - vb
  name: GetRabbitBinding(IApplicationContext, String)
  nameWithType: ApplicationContextExtensions.GetRabbitBinding(IApplicationContext, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitBinding(Steeltoe.Common.Contexts.IApplicationContext, System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/ApplicationContextExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetRabbitBinding
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/ApplicationContextExtensions.cs
    startLine: 33
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static IBinding GetRabbitBinding(this IApplicationContext context, string name)
    parameters:
    - id: context
      type: Steeltoe.Common.Contexts.IApplicationContext
    - id: name
      type: System.String
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.IBinding
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetRabbitBinding(context As IApplicationContext, name As String) As IBinding
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitBinding*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitQueues(Steeltoe.Common.Contexts.IApplicationContext)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitQueues(Steeltoe.Common.Contexts.IApplicationContext)
  id: GetRabbitQueues(Steeltoe.Common.Contexts.IApplicationContext)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions
  langs:
  - csharp
  - vb
  name: GetRabbitQueues(IApplicationContext)
  nameWithType: ApplicationContextExtensions.GetRabbitQueues(IApplicationContext)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitQueues(Steeltoe.Common.Contexts.IApplicationContext)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/ApplicationContextExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetRabbitQueues
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/ApplicationContextExtensions.cs
    startLine: 38
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static IEnumerable<IQueue> GetRabbitQueues(this IApplicationContext context)
    parameters:
    - id: context
      type: Steeltoe.Common.Contexts.IApplicationContext
    return:
      type: System.Collections.Generic.IEnumerable{Steeltoe.Messaging.RabbitMQ.Config.IQueue}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetRabbitQueues(context As IApplicationContext) As IEnumerable(Of IQueue)
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitQueues*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitExchanges(Steeltoe.Common.Contexts.IApplicationContext)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitExchanges(Steeltoe.Common.Contexts.IApplicationContext)
  id: GetRabbitExchanges(Steeltoe.Common.Contexts.IApplicationContext)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions
  langs:
  - csharp
  - vb
  name: GetRabbitExchanges(IApplicationContext)
  nameWithType: ApplicationContextExtensions.GetRabbitExchanges(IApplicationContext)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitExchanges(Steeltoe.Common.Contexts.IApplicationContext)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/ApplicationContextExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetRabbitExchanges
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/ApplicationContextExtensions.cs
    startLine: 43
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static IEnumerable<IExchange> GetRabbitExchanges(this IApplicationContext context)
    parameters:
    - id: context
      type: Steeltoe.Common.Contexts.IApplicationContext
    return:
      type: System.Collections.Generic.IEnumerable{Steeltoe.Messaging.RabbitMQ.Config.IExchange}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetRabbitExchanges(context As IApplicationContext) As IEnumerable(Of IExchange)
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitExchanges*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitBindings(Steeltoe.Common.Contexts.IApplicationContext)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitBindings(Steeltoe.Common.Contexts.IApplicationContext)
  id: GetRabbitBindings(Steeltoe.Common.Contexts.IApplicationContext)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions
  langs:
  - csharp
  - vb
  name: GetRabbitBindings(IApplicationContext)
  nameWithType: ApplicationContextExtensions.GetRabbitBindings(IApplicationContext)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitBindings(Steeltoe.Common.Contexts.IApplicationContext)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/ApplicationContextExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetRabbitBindings
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/ApplicationContextExtensions.cs
    startLine: 48
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static IEnumerable<IBinding> GetRabbitBindings(this IApplicationContext context)
    parameters:
    - id: context
      type: Steeltoe.Common.Contexts.IApplicationContext
    return:
      type: System.Collections.Generic.IEnumerable{Steeltoe.Messaging.RabbitMQ.Config.IBinding}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetRabbitBindings(context As IApplicationContext) As IEnumerable(Of IBinding)
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitBindings*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Steeltoe.Messaging.RabbitMQ.Extensions
  commentId: N:Steeltoe.Messaging.RabbitMQ.Extensions
  name: Steeltoe.Messaging.RabbitMQ.Extensions
  nameWithType: Steeltoe.Messaging.RabbitMQ.Extensions
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitTemplate*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitTemplate
  name: GetRabbitTemplate
  nameWithType: ApplicationContextExtensions.GetRabbitTemplate
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitTemplate
- uid: Steeltoe.Common.Contexts.IApplicationContext
  commentId: T:Steeltoe.Common.Contexts.IApplicationContext
  parent: Steeltoe.Common.Contexts
  name: IApplicationContext
  nameWithType: IApplicationContext
  fullName: Steeltoe.Common.Contexts.IApplicationContext
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  commentId: T:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  parent: Steeltoe.Messaging.RabbitMQ.Core
  name: RabbitTemplate
  nameWithType: RabbitTemplate
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
- uid: Steeltoe.Common.Contexts
  commentId: N:Steeltoe.Common.Contexts
  name: Steeltoe.Common.Contexts
  nameWithType: Steeltoe.Common.Contexts
  fullName: Steeltoe.Common.Contexts
- uid: Steeltoe.Messaging.RabbitMQ.Core
  commentId: N:Steeltoe.Messaging.RabbitMQ.Core
  name: Steeltoe.Messaging.RabbitMQ.Core
  nameWithType: Steeltoe.Messaging.RabbitMQ.Core
  fullName: Steeltoe.Messaging.RabbitMQ.Core
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitAdmin*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitAdmin
  name: GetRabbitAdmin
  nameWithType: ApplicationContextExtensions.GetRabbitAdmin
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitAdmin
- uid: Steeltoe.Messaging.RabbitMQ.Core.IRabbitAdmin
  commentId: T:Steeltoe.Messaging.RabbitMQ.Core.IRabbitAdmin
  parent: Steeltoe.Messaging.RabbitMQ.Core
  name: IRabbitAdmin
  nameWithType: IRabbitAdmin
  fullName: Steeltoe.Messaging.RabbitMQ.Core.IRabbitAdmin
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitQueue*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitQueue
  name: GetRabbitQueue
  nameWithType: ApplicationContextExtensions.GetRabbitQueue
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitQueue
- uid: Steeltoe.Messaging.RabbitMQ.Config.IQueue
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.IQueue
  parent: Steeltoe.Messaging.RabbitMQ.Config
  name: IQueue
  nameWithType: IQueue
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IQueue
- uid: Steeltoe.Messaging.RabbitMQ.Config
  commentId: N:Steeltoe.Messaging.RabbitMQ.Config
  name: Steeltoe.Messaging.RabbitMQ.Config
  nameWithType: Steeltoe.Messaging.RabbitMQ.Config
  fullName: Steeltoe.Messaging.RabbitMQ.Config
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitExchange*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitExchange
  name: GetRabbitExchange
  nameWithType: ApplicationContextExtensions.GetRabbitExchange
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitExchange
- uid: Steeltoe.Messaging.RabbitMQ.Config.IExchange
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.IExchange
  parent: Steeltoe.Messaging.RabbitMQ.Config
  name: IExchange
  nameWithType: IExchange
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IExchange
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitBinding*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitBinding
  name: GetRabbitBinding
  nameWithType: ApplicationContextExtensions.GetRabbitBinding
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitBinding
- uid: Steeltoe.Messaging.RabbitMQ.Config.IBinding
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.IBinding
  parent: Steeltoe.Messaging.RabbitMQ.Config
  name: IBinding
  nameWithType: IBinding
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IBinding
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitQueues*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitQueues
  name: GetRabbitQueues
  nameWithType: ApplicationContextExtensions.GetRabbitQueues
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitQueues
- uid: System.Collections.Generic.IEnumerable{Steeltoe.Messaging.RabbitMQ.Config.IQueue}
  commentId: T:System.Collections.Generic.IEnumerable{Steeltoe.Messaging.RabbitMQ.Config.IQueue}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IQueue>
  nameWithType: IEnumerable<IQueue>
  fullName: System.Collections.Generic.IEnumerable<Steeltoe.Messaging.RabbitMQ.Config.IQueue>
  nameWithType.vb: IEnumerable(Of IQueue)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Steeltoe.Messaging.RabbitMQ.Config.IQueue)
  name.vb: IEnumerable(Of IQueue)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.RabbitMQ.Config.IQueue
    name: IQueue
    nameWithType: IQueue
    fullName: Steeltoe.Messaging.RabbitMQ.Config.IQueue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.RabbitMQ.Config.IQueue
    name: IQueue
    nameWithType: IQueue
    fullName: Steeltoe.Messaging.RabbitMQ.Config.IQueue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitExchanges*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitExchanges
  name: GetRabbitExchanges
  nameWithType: ApplicationContextExtensions.GetRabbitExchanges
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitExchanges
- uid: System.Collections.Generic.IEnumerable{Steeltoe.Messaging.RabbitMQ.Config.IExchange}
  commentId: T:System.Collections.Generic.IEnumerable{Steeltoe.Messaging.RabbitMQ.Config.IExchange}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IExchange>
  nameWithType: IEnumerable<IExchange>
  fullName: System.Collections.Generic.IEnumerable<Steeltoe.Messaging.RabbitMQ.Config.IExchange>
  nameWithType.vb: IEnumerable(Of IExchange)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Steeltoe.Messaging.RabbitMQ.Config.IExchange)
  name.vb: IEnumerable(Of IExchange)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.RabbitMQ.Config.IExchange
    name: IExchange
    nameWithType: IExchange
    fullName: Steeltoe.Messaging.RabbitMQ.Config.IExchange
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.RabbitMQ.Config.IExchange
    name: IExchange
    nameWithType: IExchange
    fullName: Steeltoe.Messaging.RabbitMQ.Config.IExchange
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitBindings*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitBindings
  name: GetRabbitBindings
  nameWithType: ApplicationContextExtensions.GetRabbitBindings
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.ApplicationContextExtensions.GetRabbitBindings
- uid: System.Collections.Generic.IEnumerable{Steeltoe.Messaging.RabbitMQ.Config.IBinding}
  commentId: T:System.Collections.Generic.IEnumerable{Steeltoe.Messaging.RabbitMQ.Config.IBinding}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IBinding>
  nameWithType: IEnumerable<IBinding>
  fullName: System.Collections.Generic.IEnumerable<Steeltoe.Messaging.RabbitMQ.Config.IBinding>
  nameWithType.vb: IEnumerable(Of IBinding)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Steeltoe.Messaging.RabbitMQ.Config.IBinding)
  name.vb: IEnumerable(Of IBinding)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.RabbitMQ.Config.IBinding
    name: IBinding
    nameWithType: IBinding
    fullName: Steeltoe.Messaging.RabbitMQ.Config.IBinding
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.RabbitMQ.Config.IBinding
    name: IBinding
    nameWithType: IBinding
    fullName: Steeltoe.Messaging.RabbitMQ.Config.IBinding
  - name: )
    nameWithType: )
    fullName: )
