### YamlMime:ManagedReference
items:
- uid: Steeltoe.Connector.OAuth.OAuthServiceOptions
  commentId: T:Steeltoe.Connector.OAuth.OAuthServiceOptions
  id: OAuthServiceOptions
  parent: Steeltoe.Connector.OAuth
  children:
  - Steeltoe.Connector.OAuth.OAuthServiceOptions.AccessTokenUrl
  - Steeltoe.Connector.OAuth.OAuthServiceOptions.ClientId
  - Steeltoe.Connector.OAuth.OAuthServiceOptions.ClientSecret
  - Steeltoe.Connector.OAuth.OAuthServiceOptions.JwtKeyUrl
  - Steeltoe.Connector.OAuth.OAuthServiceOptions.Scope
  - Steeltoe.Connector.OAuth.OAuthServiceOptions.TokenInfoUrl
  - Steeltoe.Connector.OAuth.OAuthServiceOptions.UserAuthorizationUrl
  - Steeltoe.Connector.OAuth.OAuthServiceOptions.UserInfoUrl
  - Steeltoe.Connector.OAuth.OAuthServiceOptions.ValidateCertificates
  langs:
  - csharp
  - vb
  name: OAuthServiceOptions
  nameWithType: OAuthServiceOptions
  fullName: Steeltoe.Connector.OAuth.OAuthServiceOptions
  type: Class
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/OAuth/OAuthServiceOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: OAuthServiceOptions
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/OAuth/OAuthServiceOptions.cs
    startLine: 8
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.OAuth
  syntax:
    content: public class OAuthServiceOptions
    content.vb: Public Class OAuthServiceOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Connector.OAuth.OAuthServiceOptions.ClientId
  commentId: P:Steeltoe.Connector.OAuth.OAuthServiceOptions.ClientId
  id: ClientId
  parent: Steeltoe.Connector.OAuth.OAuthServiceOptions
  langs:
  - csharp
  - vb
  name: ClientId
  nameWithType: OAuthServiceOptions.ClientId
  fullName: Steeltoe.Connector.OAuth.OAuthServiceOptions.ClientId
  type: Property
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/OAuth/OAuthServiceOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ClientId
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/OAuth/OAuthServiceOptions.cs
    startLine: 10
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.OAuth
  syntax:
    content: public string ClientId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ClientId As String
  overload: Steeltoe.Connector.OAuth.OAuthServiceOptions.ClientId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Connector.OAuth.OAuthServiceOptions.ClientSecret
  commentId: P:Steeltoe.Connector.OAuth.OAuthServiceOptions.ClientSecret
  id: ClientSecret
  parent: Steeltoe.Connector.OAuth.OAuthServiceOptions
  langs:
  - csharp
  - vb
  name: ClientSecret
  nameWithType: OAuthServiceOptions.ClientSecret
  fullName: Steeltoe.Connector.OAuth.OAuthServiceOptions.ClientSecret
  type: Property
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/OAuth/OAuthServiceOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ClientSecret
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/OAuth/OAuthServiceOptions.cs
    startLine: 12
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.OAuth
  syntax:
    content: public string ClientSecret { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ClientSecret As String
  overload: Steeltoe.Connector.OAuth.OAuthServiceOptions.ClientSecret*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Connector.OAuth.OAuthServiceOptions.UserAuthorizationUrl
  commentId: P:Steeltoe.Connector.OAuth.OAuthServiceOptions.UserAuthorizationUrl
  id: UserAuthorizationUrl
  parent: Steeltoe.Connector.OAuth.OAuthServiceOptions
  langs:
  - csharp
  - vb
  name: UserAuthorizationUrl
  nameWithType: OAuthServiceOptions.UserAuthorizationUrl
  fullName: Steeltoe.Connector.OAuth.OAuthServiceOptions.UserAuthorizationUrl
  type: Property
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/OAuth/OAuthServiceOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: UserAuthorizationUrl
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/OAuth/OAuthServiceOptions.cs
    startLine: 14
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.OAuth
  syntax:
    content: public string UserAuthorizationUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property UserAuthorizationUrl As String
  overload: Steeltoe.Connector.OAuth.OAuthServiceOptions.UserAuthorizationUrl*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Connector.OAuth.OAuthServiceOptions.AccessTokenUrl
  commentId: P:Steeltoe.Connector.OAuth.OAuthServiceOptions.AccessTokenUrl
  id: AccessTokenUrl
  parent: Steeltoe.Connector.OAuth.OAuthServiceOptions
  langs:
  - csharp
  - vb
  name: AccessTokenUrl
  nameWithType: OAuthServiceOptions.AccessTokenUrl
  fullName: Steeltoe.Connector.OAuth.OAuthServiceOptions.AccessTokenUrl
  type: Property
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/OAuth/OAuthServiceOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AccessTokenUrl
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/OAuth/OAuthServiceOptions.cs
    startLine: 16
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.OAuth
  syntax:
    content: public string AccessTokenUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AccessTokenUrl As String
  overload: Steeltoe.Connector.OAuth.OAuthServiceOptions.AccessTokenUrl*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Connector.OAuth.OAuthServiceOptions.UserInfoUrl
  commentId: P:Steeltoe.Connector.OAuth.OAuthServiceOptions.UserInfoUrl
  id: UserInfoUrl
  parent: Steeltoe.Connector.OAuth.OAuthServiceOptions
  langs:
  - csharp
  - vb
  name: UserInfoUrl
  nameWithType: OAuthServiceOptions.UserInfoUrl
  fullName: Steeltoe.Connector.OAuth.OAuthServiceOptions.UserInfoUrl
  type: Property
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/OAuth/OAuthServiceOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: UserInfoUrl
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/OAuth/OAuthServiceOptions.cs
    startLine: 18
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.OAuth
  syntax:
    content: public string UserInfoUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property UserInfoUrl As String
  overload: Steeltoe.Connector.OAuth.OAuthServiceOptions.UserInfoUrl*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Connector.OAuth.OAuthServiceOptions.TokenInfoUrl
  commentId: P:Steeltoe.Connector.OAuth.OAuthServiceOptions.TokenInfoUrl
  id: TokenInfoUrl
  parent: Steeltoe.Connector.OAuth.OAuthServiceOptions
  langs:
  - csharp
  - vb
  name: TokenInfoUrl
  nameWithType: OAuthServiceOptions.TokenInfoUrl
  fullName: Steeltoe.Connector.OAuth.OAuthServiceOptions.TokenInfoUrl
  type: Property
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/OAuth/OAuthServiceOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: TokenInfoUrl
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/OAuth/OAuthServiceOptions.cs
    startLine: 20
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.OAuth
  syntax:
    content: public string TokenInfoUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TokenInfoUrl As String
  overload: Steeltoe.Connector.OAuth.OAuthServiceOptions.TokenInfoUrl*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Connector.OAuth.OAuthServiceOptions.JwtKeyUrl
  commentId: P:Steeltoe.Connector.OAuth.OAuthServiceOptions.JwtKeyUrl
  id: JwtKeyUrl
  parent: Steeltoe.Connector.OAuth.OAuthServiceOptions
  langs:
  - csharp
  - vb
  name: JwtKeyUrl
  nameWithType: OAuthServiceOptions.JwtKeyUrl
  fullName: Steeltoe.Connector.OAuth.OAuthServiceOptions.JwtKeyUrl
  type: Property
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/OAuth/OAuthServiceOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: JwtKeyUrl
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/OAuth/OAuthServiceOptions.cs
    startLine: 22
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.OAuth
  syntax:
    content: public string JwtKeyUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property JwtKeyUrl As String
  overload: Steeltoe.Connector.OAuth.OAuthServiceOptions.JwtKeyUrl*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Connector.OAuth.OAuthServiceOptions.Scope
  commentId: P:Steeltoe.Connector.OAuth.OAuthServiceOptions.Scope
  id: Scope
  parent: Steeltoe.Connector.OAuth.OAuthServiceOptions
  langs:
  - csharp
  - vb
  name: Scope
  nameWithType: OAuthServiceOptions.Scope
  fullName: Steeltoe.Connector.OAuth.OAuthServiceOptions.Scope
  type: Property
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/OAuth/OAuthServiceOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Scope
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/OAuth/OAuthServiceOptions.cs
    startLine: 24
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.OAuth
  syntax:
    content: public ICollection<string> Scope { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: Public Property Scope As ICollection(Of String)
  overload: Steeltoe.Connector.OAuth.OAuthServiceOptions.Scope*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Connector.OAuth.OAuthServiceOptions.ValidateCertificates
  commentId: P:Steeltoe.Connector.OAuth.OAuthServiceOptions.ValidateCertificates
  id: ValidateCertificates
  parent: Steeltoe.Connector.OAuth.OAuthServiceOptions
  langs:
  - csharp
  - vb
  name: ValidateCertificates
  nameWithType: OAuthServiceOptions.ValidateCertificates
  fullName: Steeltoe.Connector.OAuth.OAuthServiceOptions.ValidateCertificates
  type: Property
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/OAuth/OAuthServiceOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ValidateCertificates
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/OAuth/OAuthServiceOptions.cs
    startLine: 26
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.OAuth
  syntax:
    content: public bool ValidateCertificates { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ValidateCertificates As Boolean
  overload: Steeltoe.Connector.OAuth.OAuthServiceOptions.ValidateCertificates*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Connector.OAuth
  commentId: N:Steeltoe.Connector.OAuth
  name: Steeltoe.Connector.OAuth
  nameWithType: Steeltoe.Connector.OAuth
  fullName: Steeltoe.Connector.OAuth
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Connector.OAuth.OAuthServiceOptions.ClientId*
  commentId: Overload:Steeltoe.Connector.OAuth.OAuthServiceOptions.ClientId
  name: ClientId
  nameWithType: OAuthServiceOptions.ClientId
  fullName: Steeltoe.Connector.OAuth.OAuthServiceOptions.ClientId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Connector.OAuth.OAuthServiceOptions.ClientSecret*
  commentId: Overload:Steeltoe.Connector.OAuth.OAuthServiceOptions.ClientSecret
  name: ClientSecret
  nameWithType: OAuthServiceOptions.ClientSecret
  fullName: Steeltoe.Connector.OAuth.OAuthServiceOptions.ClientSecret
- uid: Steeltoe.Connector.OAuth.OAuthServiceOptions.UserAuthorizationUrl*
  commentId: Overload:Steeltoe.Connector.OAuth.OAuthServiceOptions.UserAuthorizationUrl
  name: UserAuthorizationUrl
  nameWithType: OAuthServiceOptions.UserAuthorizationUrl
  fullName: Steeltoe.Connector.OAuth.OAuthServiceOptions.UserAuthorizationUrl
- uid: Steeltoe.Connector.OAuth.OAuthServiceOptions.AccessTokenUrl*
  commentId: Overload:Steeltoe.Connector.OAuth.OAuthServiceOptions.AccessTokenUrl
  name: AccessTokenUrl
  nameWithType: OAuthServiceOptions.AccessTokenUrl
  fullName: Steeltoe.Connector.OAuth.OAuthServiceOptions.AccessTokenUrl
- uid: Steeltoe.Connector.OAuth.OAuthServiceOptions.UserInfoUrl*
  commentId: Overload:Steeltoe.Connector.OAuth.OAuthServiceOptions.UserInfoUrl
  name: UserInfoUrl
  nameWithType: OAuthServiceOptions.UserInfoUrl
  fullName: Steeltoe.Connector.OAuth.OAuthServiceOptions.UserInfoUrl
- uid: Steeltoe.Connector.OAuth.OAuthServiceOptions.TokenInfoUrl*
  commentId: Overload:Steeltoe.Connector.OAuth.OAuthServiceOptions.TokenInfoUrl
  name: TokenInfoUrl
  nameWithType: OAuthServiceOptions.TokenInfoUrl
  fullName: Steeltoe.Connector.OAuth.OAuthServiceOptions.TokenInfoUrl
- uid: Steeltoe.Connector.OAuth.OAuthServiceOptions.JwtKeyUrl*
  commentId: Overload:Steeltoe.Connector.OAuth.OAuthServiceOptions.JwtKeyUrl
  name: JwtKeyUrl
  nameWithType: OAuthServiceOptions.JwtKeyUrl
  fullName: Steeltoe.Connector.OAuth.OAuthServiceOptions.JwtKeyUrl
- uid: Steeltoe.Connector.OAuth.OAuthServiceOptions.Scope*
  commentId: Overload:Steeltoe.Connector.OAuth.OAuthServiceOptions.Scope
  name: Scope
  nameWithType: OAuthServiceOptions.Scope
  fullName: Steeltoe.Connector.OAuth.OAuthServiceOptions.Scope
- uid: System.Collections.Generic.ICollection{System.String}
  commentId: T:System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<String>
  nameWithType: ICollection<String>
  fullName: System.Collections.Generic.ICollection<System.String>
  nameWithType.vb: ICollection(Of String)
  fullName.vb: System.Collections.Generic.ICollection(Of System.String)
  name.vb: ICollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Connector.OAuth.OAuthServiceOptions.ValidateCertificates*
  commentId: Overload:Steeltoe.Connector.OAuth.OAuthServiceOptions.ValidateCertificates
  name: ValidateCertificates
  nameWithType: OAuthServiceOptions.ValidateCertificates
  fullName: Steeltoe.Connector.OAuth.OAuthServiceOptions.ValidateCertificates
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
