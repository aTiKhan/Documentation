### YamlMime:ManagedReference
items:
- uid: Steeltoe.Management.Endpoint.Health.HealthEndpoint
  commentId: T:Steeltoe.Management.Endpoint.Health.HealthEndpoint
  id: HealthEndpoint
  parent: Steeltoe.Management.Endpoint.Health
  children:
  - Steeltoe.Management.Endpoint.Health.HealthEndpoint.#ctor(Steeltoe.Management.Endpoint.Health.IHealthOptions,Steeltoe.Common.HealthChecks.IHealthAggregator,System.Collections.Generic.IEnumerable{Steeltoe.Common.HealthChecks.IHealthContributor},ILogger{Steeltoe.Management.Endpoint.Health.HealthEndpoint})
  - Steeltoe.Management.Endpoint.Health.HealthEndpoint.BuildHealth(Steeltoe.Management.Endpoint.Security.ISecurityContext)
  - Steeltoe.Management.Endpoint.Health.HealthEndpoint.GetFilteredContributorList(System.String,System.Collections.Generic.IList{Steeltoe.Common.HealthChecks.IHealthContributor})
  - Steeltoe.Management.Endpoint.Health.HealthEndpoint.GetRequestedHealthGroup(Steeltoe.Management.Endpoint.Security.ISecurityContext)
  - Steeltoe.Management.Endpoint.Health.HealthEndpoint.GetStatusCode(Steeltoe.Common.HealthChecks.HealthCheckResult)
  - Steeltoe.Management.Endpoint.Health.HealthEndpoint.Invoke(Steeltoe.Management.Endpoint.Security.ISecurityContext)
  - Steeltoe.Management.Endpoint.Health.HealthEndpoint.Options
  langs:
  - csharp
  - vb
  name: HealthEndpoint
  nameWithType: HealthEndpoint
  fullName: Steeltoe.Management.Endpoint.Health.HealthEndpoint
  type: Class
  source:
    remote:
      path: src/Management/src/EndpointBase/Health/HealthEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HealthEndpoint
    path: ../Steeltoe/src/Management/src/EndpointBase/Health/HealthEndpoint.cs
    startLine: 16
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Health
  syntax:
    content: 'public class HealthEndpoint : AbstractEndpoint<HealthEndpointResponse, ISecurityContext>, IEndpoint<HealthEndpointResponse, ISecurityContext>, IEndpoint'
    content.vb: >-
      Public Class HealthEndpoint

          Inherits AbstractEndpoint(Of HealthEndpointResponse, ISecurityContext)

          Implements IEndpoint(Of HealthEndpointResponse, ISecurityContext), IEndpoint
  inheritance:
  - System.Object
  - Steeltoe.Management.AbstractEndpoint
  - Steeltoe.Management.AbstractEndpoint{Steeltoe.Management.Endpoint.Health.HealthEndpointResponse,Steeltoe.Management.Endpoint.Security.ISecurityContext}
  derivedClasses:
  - Steeltoe.Management.Endpoint.Health.HealthEndpointCore
  implements:
  - Steeltoe.Management.IEndpoint{Steeltoe.Management.Endpoint.Health.HealthEndpointResponse,Steeltoe.Management.Endpoint.Security.ISecurityContext}
  - Steeltoe.Management.IEndpoint
  inheritedMembers:
  - Steeltoe.Management.AbstractEndpoint{Steeltoe.Management.Endpoint.Health.HealthEndpointResponse,Steeltoe.Management.Endpoint.Security.ISecurityContext}.Invoke(Steeltoe.Management.Endpoint.Security.ISecurityContext)
  - Steeltoe.Management.AbstractEndpoint.options
  - Steeltoe.Management.AbstractEndpoint.Id
  - Steeltoe.Management.AbstractEndpoint.Enabled
  - Steeltoe.Management.AbstractEndpoint.Path
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Steeltoe.Management.IEndpoint.Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IManagementOptions)
  - Steeltoe.Management.IEndpoint.Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IManagementOptions)
  - Steeltoe.Management.IEndpoint.Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IManagementOptions,ILogger)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Management.Endpoint.Health.HealthEndpoint.#ctor(Steeltoe.Management.Endpoint.Health.IHealthOptions,Steeltoe.Common.HealthChecks.IHealthAggregator,System.Collections.Generic.IEnumerable{Steeltoe.Common.HealthChecks.IHealthContributor},ILogger{Steeltoe.Management.Endpoint.Health.HealthEndpoint})
  commentId: M:Steeltoe.Management.Endpoint.Health.HealthEndpoint.#ctor(Steeltoe.Management.Endpoint.Health.IHealthOptions,Steeltoe.Common.HealthChecks.IHealthAggregator,System.Collections.Generic.IEnumerable{Steeltoe.Common.HealthChecks.IHealthContributor},ILogger{Steeltoe.Management.Endpoint.Health.HealthEndpoint})
  id: '#ctor(Steeltoe.Management.Endpoint.Health.IHealthOptions,Steeltoe.Common.HealthChecks.IHealthAggregator,System.Collections.Generic.IEnumerable{Steeltoe.Common.HealthChecks.IHealthContributor},ILogger{Steeltoe.Management.Endpoint.Health.HealthEndpoint})'
  parent: Steeltoe.Management.Endpoint.Health.HealthEndpoint
  langs:
  - csharp
  - vb
  name: HealthEndpoint(IHealthOptions, IHealthAggregator, IEnumerable<IHealthContributor>, ILogger<HealthEndpoint>)
  nameWithType: HealthEndpoint.HealthEndpoint(IHealthOptions, IHealthAggregator, IEnumerable<IHealthContributor>, ILogger<HealthEndpoint>)
  fullName: Steeltoe.Management.Endpoint.Health.HealthEndpoint.HealthEndpoint(Steeltoe.Management.Endpoint.Health.IHealthOptions, Steeltoe.Common.HealthChecks.IHealthAggregator, System.Collections.Generic.IEnumerable<Steeltoe.Common.HealthChecks.IHealthContributor>, ILogger<Steeltoe.Management.Endpoint.Health.HealthEndpoint>)
  type: Constructor
  source:
    remote:
      path: src/Management/src/EndpointBase/Health/HealthEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Management/src/EndpointBase/Health/HealthEndpoint.cs
    startLine: 22
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Health
  syntax:
    content: public HealthEndpoint(IHealthOptions options, IHealthAggregator aggregator, IEnumerable<IHealthContributor> contributors, ILogger<HealthEndpoint> logger = null)
    parameters:
    - id: options
      type: Steeltoe.Management.Endpoint.Health.IHealthOptions
    - id: aggregator
      type: Steeltoe.Common.HealthChecks.IHealthAggregator
    - id: contributors
      type: System.Collections.Generic.IEnumerable{Steeltoe.Common.HealthChecks.IHealthContributor}
    - id: logger
      type: ILogger{Steeltoe.Management.Endpoint.Health.HealthEndpoint}
    content.vb: Public Sub New(options As IHealthOptions, aggregator As IHealthAggregator, contributors As IEnumerable(Of IHealthContributor), logger As ILogger(Of HealthEndpoint) = Nothing)
  overload: Steeltoe.Management.Endpoint.Health.HealthEndpoint.#ctor*
  nameWithType.vb: HealthEndpoint.HealthEndpoint(IHealthOptions, IHealthAggregator, IEnumerable(Of IHealthContributor), ILogger(Of HealthEndpoint))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Management.Endpoint.Health.HealthEndpoint.HealthEndpoint(Steeltoe.Management.Endpoint.Health.IHealthOptions, Steeltoe.Common.HealthChecks.IHealthAggregator, System.Collections.Generic.IEnumerable(Of Steeltoe.Common.HealthChecks.IHealthContributor), ILogger(Of Steeltoe.Management.Endpoint.Health.HealthEndpoint))
  name.vb: HealthEndpoint(IHealthOptions, IHealthAggregator, IEnumerable(Of IHealthContributor), ILogger(Of HealthEndpoint))
- uid: Steeltoe.Management.Endpoint.Health.HealthEndpoint.Options
  commentId: P:Steeltoe.Management.Endpoint.Health.HealthEndpoint.Options
  id: Options
  parent: Steeltoe.Management.Endpoint.Health.HealthEndpoint
  langs:
  - csharp
  - vb
  name: Options
  nameWithType: HealthEndpoint.Options
  fullName: Steeltoe.Management.Endpoint.Health.HealthEndpoint.Options
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointBase/Health/HealthEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Options
    path: ../Steeltoe/src/Management/src/EndpointBase/Health/HealthEndpoint.cs
    startLine: 35
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Health
  syntax:
    content: public IHealthOptions Options { get; }
    parameters: []
    return:
      type: Steeltoe.Management.Endpoint.Health.IHealthOptions
    content.vb: Public ReadOnly Property Options As IHealthOptions
  overload: Steeltoe.Management.Endpoint.Health.HealthEndpoint.Options*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Management.Endpoint.Health.HealthEndpoint.Invoke(Steeltoe.Management.Endpoint.Security.ISecurityContext)
  commentId: M:Steeltoe.Management.Endpoint.Health.HealthEndpoint.Invoke(Steeltoe.Management.Endpoint.Security.ISecurityContext)
  id: Invoke(Steeltoe.Management.Endpoint.Security.ISecurityContext)
  parent: Steeltoe.Management.Endpoint.Health.HealthEndpoint
  langs:
  - csharp
  - vb
  name: Invoke(ISecurityContext)
  nameWithType: HealthEndpoint.Invoke(ISecurityContext)
  fullName: Steeltoe.Management.Endpoint.Health.HealthEndpoint.Invoke(Steeltoe.Management.Endpoint.Security.ISecurityContext)
  type: Method
  source:
    remote:
      path: src/Management/src/EndpointBase/Health/HealthEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Invoke
    path: ../Steeltoe/src/Management/src/EndpointBase/Health/HealthEndpoint.cs
    startLine: 37
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Health
  syntax:
    content: public override HealthEndpointResponse Invoke(ISecurityContext securityContext)
    parameters:
    - id: securityContext
      type: Steeltoe.Management.Endpoint.Security.ISecurityContext
    return:
      type: Steeltoe.Management.Endpoint.Health.HealthEndpointResponse
    content.vb: Public Overrides Function Invoke(securityContext As ISecurityContext) As HealthEndpointResponse
  overridden: Steeltoe.Management.AbstractEndpoint{Steeltoe.Management.Endpoint.Health.HealthEndpointResponse,Steeltoe.Management.Endpoint.Security.ISecurityContext}.Invoke(Steeltoe.Management.Endpoint.Security.ISecurityContext)
  overload: Steeltoe.Management.Endpoint.Health.HealthEndpoint.Invoke*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Steeltoe.Management.Endpoint.Health.HealthEndpoint.GetStatusCode(Steeltoe.Common.HealthChecks.HealthCheckResult)
  commentId: M:Steeltoe.Management.Endpoint.Health.HealthEndpoint.GetStatusCode(Steeltoe.Common.HealthChecks.HealthCheckResult)
  id: GetStatusCode(Steeltoe.Common.HealthChecks.HealthCheckResult)
  parent: Steeltoe.Management.Endpoint.Health.HealthEndpoint
  langs:
  - csharp
  - vb
  name: GetStatusCode(HealthCheckResult)
  nameWithType: HealthEndpoint.GetStatusCode(HealthCheckResult)
  fullName: Steeltoe.Management.Endpoint.Health.HealthEndpoint.GetStatusCode(Steeltoe.Common.HealthChecks.HealthCheckResult)
  type: Method
  source:
    remote:
      path: src/Management/src/EndpointBase/Health/HealthEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetStatusCode
    path: ../Steeltoe/src/Management/src/EndpointBase/Health/HealthEndpoint.cs
    startLine: 39
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Health
  syntax:
    content: public int GetStatusCode(HealthCheckResult health)
    parameters:
    - id: health
      type: Steeltoe.Common.HealthChecks.HealthCheckResult
    return:
      type: System.Int32
    content.vb: Public Function GetStatusCode(health As HealthCheckResult) As Integer
  overload: Steeltoe.Management.Endpoint.Health.HealthEndpoint.GetStatusCode*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Management.Endpoint.Health.HealthEndpoint.BuildHealth(Steeltoe.Management.Endpoint.Security.ISecurityContext)
  commentId: M:Steeltoe.Management.Endpoint.Health.HealthEndpoint.BuildHealth(Steeltoe.Management.Endpoint.Security.ISecurityContext)
  id: BuildHealth(Steeltoe.Management.Endpoint.Security.ISecurityContext)
  parent: Steeltoe.Management.Endpoint.Health.HealthEndpoint
  langs:
  - csharp
  - vb
  name: BuildHealth(ISecurityContext)
  nameWithType: HealthEndpoint.BuildHealth(ISecurityContext)
  fullName: Steeltoe.Management.Endpoint.Health.HealthEndpoint.BuildHealth(Steeltoe.Management.Endpoint.Security.ISecurityContext)
  type: Method
  source:
    remote:
      path: src/Management/src/EndpointBase/Health/HealthEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: BuildHealth
    path: ../Steeltoe/src/Management/src/EndpointBase/Health/HealthEndpoint.cs
    startLine: 46
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Health
  syntax:
    content: protected virtual HealthEndpointResponse BuildHealth(ISecurityContext securityContext)
    parameters:
    - id: securityContext
      type: Steeltoe.Management.Endpoint.Security.ISecurityContext
    return:
      type: Steeltoe.Management.Endpoint.Health.HealthEndpointResponse
    content.vb: Protected Overridable Function BuildHealth(securityContext As ISecurityContext) As HealthEndpointResponse
  overload: Steeltoe.Management.Endpoint.Health.HealthEndpoint.BuildHealth*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Management.Endpoint.Health.HealthEndpoint.GetRequestedHealthGroup(Steeltoe.Management.Endpoint.Security.ISecurityContext)
  commentId: M:Steeltoe.Management.Endpoint.Health.HealthEndpoint.GetRequestedHealthGroup(Steeltoe.Management.Endpoint.Security.ISecurityContext)
  id: GetRequestedHealthGroup(Steeltoe.Management.Endpoint.Security.ISecurityContext)
  parent: Steeltoe.Management.Endpoint.Health.HealthEndpoint
  langs:
  - csharp
  - vb
  name: GetRequestedHealthGroup(ISecurityContext)
  nameWithType: HealthEndpoint.GetRequestedHealthGroup(ISecurityContext)
  fullName: Steeltoe.Management.Endpoint.Health.HealthEndpoint.GetRequestedHealthGroup(Steeltoe.Management.Endpoint.Security.ISecurityContext)
  type: Method
  source:
    remote:
      path: src/Management/src/EndpointBase/Health/HealthEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetRequestedHealthGroup
    path: ../Steeltoe/src/Management/src/EndpointBase/Health/HealthEndpoint.cs
    startLine: 78
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Health
  summary: "\nReturns the last value returned by <xref href=\"Steeltoe.Management.Endpoint.Security.ISecurityContext.GetRequestComponents\" data-throw-if-not-resolved=\"false\"></xref>, expected to be the name of a configured health group\n"
  example: []
  syntax:
    content: protected string GetRequestedHealthGroup(ISecurityContext securityContext)
    parameters:
    - id: securityContext
      type: Steeltoe.Management.Endpoint.Security.ISecurityContext
      description: Last value of <xref href="Steeltoe.Management.Endpoint.Security.ISecurityContext.GetRequestComponents" data-throw-if-not-resolved="false"></xref> is used as group name
    return:
      type: System.String
    content.vb: Protected Function GetRequestedHealthGroup(securityContext As ISecurityContext) As String
  overload: Steeltoe.Management.Endpoint.Health.HealthEndpoint.GetRequestedHealthGroup*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Management.Endpoint.Health.HealthEndpoint.GetFilteredContributorList(System.String,System.Collections.Generic.IList{Steeltoe.Common.HealthChecks.IHealthContributor})
  commentId: M:Steeltoe.Management.Endpoint.Health.HealthEndpoint.GetFilteredContributorList(System.String,System.Collections.Generic.IList{Steeltoe.Common.HealthChecks.IHealthContributor})
  id: GetFilteredContributorList(System.String,System.Collections.Generic.IList{Steeltoe.Common.HealthChecks.IHealthContributor})
  parent: Steeltoe.Management.Endpoint.Health.HealthEndpoint
  langs:
  - csharp
  - vb
  name: GetFilteredContributorList(String, IList<IHealthContributor>)
  nameWithType: HealthEndpoint.GetFilteredContributorList(String, IList<IHealthContributor>)
  fullName: Steeltoe.Management.Endpoint.Health.HealthEndpoint.GetFilteredContributorList(System.String, System.Collections.Generic.IList<Steeltoe.Common.HealthChecks.IHealthContributor>)
  type: Method
  source:
    remote:
      path: src/Management/src/EndpointBase/Health/HealthEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetFilteredContributorList
    path: ../Steeltoe/src/Management/src/EndpointBase/Health/HealthEndpoint.cs
    startLine: 102
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Health
  summary: "\nFilter out health contributors that do not belong to the requested group\n"
  example: []
  syntax:
    content: protected IList<IHealthContributor> GetFilteredContributorList(string requestedGroup, IList<IHealthContributor> contributors)
    parameters:
    - id: requestedGroup
      type: System.String
      description: Name of group from request
    - id: contributors
      type: System.Collections.Generic.IList{Steeltoe.Common.HealthChecks.IHealthContributor}
      description: Full list of <xref href="Steeltoe.Common.HealthChecks.IHealthContributor" data-throw-if-not-resolved="false"></xref>s
    return:
      type: System.Collections.Generic.IList{Steeltoe.Common.HealthChecks.IHealthContributor}
      description: "\nIf the group is configured, returns health contributors that belong to the group. <p></p>\nIf group can&apos;t be parsed or is not configured, returns all health contributors.\n"
    content.vb: Protected Function GetFilteredContributorList(requestedGroup As String, contributors As IList(Of IHealthContributor)) As IList(Of IHealthContributor)
  overload: Steeltoe.Management.Endpoint.Health.HealthEndpoint.GetFilteredContributorList*
  nameWithType.vb: HealthEndpoint.GetFilteredContributorList(String, IList(Of IHealthContributor))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Steeltoe.Management.Endpoint.Health.HealthEndpoint.GetFilteredContributorList(System.String, System.Collections.Generic.IList(Of Steeltoe.Common.HealthChecks.IHealthContributor))
  name.vb: GetFilteredContributorList(String, IList(Of IHealthContributor))
references:
- uid: Steeltoe.Management.Endpoint.Health
  commentId: N:Steeltoe.Management.Endpoint.Health
  name: Steeltoe.Management.Endpoint.Health
  nameWithType: Steeltoe.Management.Endpoint.Health
  fullName: Steeltoe.Management.Endpoint.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Management.AbstractEndpoint
  commentId: T:Steeltoe.Management.AbstractEndpoint
  parent: Steeltoe.Management
  name: AbstractEndpoint
  nameWithType: AbstractEndpoint
  fullName: Steeltoe.Management.AbstractEndpoint
- uid: Steeltoe.Management.AbstractEndpoint{Steeltoe.Management.Endpoint.Health.HealthEndpointResponse,Steeltoe.Management.Endpoint.Security.ISecurityContext}
  commentId: T:Steeltoe.Management.AbstractEndpoint{Steeltoe.Management.Endpoint.Health.HealthEndpointResponse,Steeltoe.Management.Endpoint.Security.ISecurityContext}
  parent: Steeltoe.Management
  definition: Steeltoe.Management.AbstractEndpoint`2
  name: AbstractEndpoint<HealthEndpointResponse, ISecurityContext>
  nameWithType: AbstractEndpoint<HealthEndpointResponse, ISecurityContext>
  fullName: Steeltoe.Management.AbstractEndpoint<Steeltoe.Management.Endpoint.Health.HealthEndpointResponse, Steeltoe.Management.Endpoint.Security.ISecurityContext>
  nameWithType.vb: AbstractEndpoint(Of HealthEndpointResponse, ISecurityContext)
  fullName.vb: Steeltoe.Management.AbstractEndpoint(Of Steeltoe.Management.Endpoint.Health.HealthEndpointResponse, Steeltoe.Management.Endpoint.Security.ISecurityContext)
  name.vb: AbstractEndpoint(Of HealthEndpointResponse, ISecurityContext)
  spec.csharp:
  - uid: Steeltoe.Management.AbstractEndpoint`2
    name: AbstractEndpoint
    nameWithType: AbstractEndpoint
    fullName: Steeltoe.Management.AbstractEndpoint
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Management.Endpoint.Health.HealthEndpointResponse
    name: HealthEndpointResponse
    nameWithType: HealthEndpointResponse
    fullName: Steeltoe.Management.Endpoint.Health.HealthEndpointResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Management.Endpoint.Security.ISecurityContext
    name: ISecurityContext
    nameWithType: ISecurityContext
    fullName: Steeltoe.Management.Endpoint.Security.ISecurityContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Management.AbstractEndpoint`2
    name: AbstractEndpoint
    nameWithType: AbstractEndpoint
    fullName: Steeltoe.Management.AbstractEndpoint
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Management.Endpoint.Health.HealthEndpointResponse
    name: HealthEndpointResponse
    nameWithType: HealthEndpointResponse
    fullName: Steeltoe.Management.Endpoint.Health.HealthEndpointResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Management.Endpoint.Security.ISecurityContext
    name: ISecurityContext
    nameWithType: ISecurityContext
    fullName: Steeltoe.Management.Endpoint.Security.ISecurityContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.IEndpoint{Steeltoe.Management.Endpoint.Health.HealthEndpointResponse,Steeltoe.Management.Endpoint.Security.ISecurityContext}
  commentId: T:Steeltoe.Management.IEndpoint{Steeltoe.Management.Endpoint.Health.HealthEndpointResponse,Steeltoe.Management.Endpoint.Security.ISecurityContext}
  parent: Steeltoe.Management
  definition: Steeltoe.Management.IEndpoint`2
  name: IEndpoint<HealthEndpointResponse, ISecurityContext>
  nameWithType: IEndpoint<HealthEndpointResponse, ISecurityContext>
  fullName: Steeltoe.Management.IEndpoint<Steeltoe.Management.Endpoint.Health.HealthEndpointResponse, Steeltoe.Management.Endpoint.Security.ISecurityContext>
  nameWithType.vb: IEndpoint(Of HealthEndpointResponse, ISecurityContext)
  fullName.vb: Steeltoe.Management.IEndpoint(Of Steeltoe.Management.Endpoint.Health.HealthEndpointResponse, Steeltoe.Management.Endpoint.Security.ISecurityContext)
  name.vb: IEndpoint(Of HealthEndpointResponse, ISecurityContext)
  spec.csharp:
  - uid: Steeltoe.Management.IEndpoint`2
    name: IEndpoint
    nameWithType: IEndpoint
    fullName: Steeltoe.Management.IEndpoint
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Management.Endpoint.Health.HealthEndpointResponse
    name: HealthEndpointResponse
    nameWithType: HealthEndpointResponse
    fullName: Steeltoe.Management.Endpoint.Health.HealthEndpointResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Management.Endpoint.Security.ISecurityContext
    name: ISecurityContext
    nameWithType: ISecurityContext
    fullName: Steeltoe.Management.Endpoint.Security.ISecurityContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Management.IEndpoint`2
    name: IEndpoint
    nameWithType: IEndpoint
    fullName: Steeltoe.Management.IEndpoint
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Management.Endpoint.Health.HealthEndpointResponse
    name: HealthEndpointResponse
    nameWithType: HealthEndpointResponse
    fullName: Steeltoe.Management.Endpoint.Health.HealthEndpointResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Management.Endpoint.Security.ISecurityContext
    name: ISecurityContext
    nameWithType: ISecurityContext
    fullName: Steeltoe.Management.Endpoint.Security.ISecurityContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.IEndpoint
  commentId: T:Steeltoe.Management.IEndpoint
  parent: Steeltoe.Management
  name: IEndpoint
  nameWithType: IEndpoint
  fullName: Steeltoe.Management.IEndpoint
- uid: Steeltoe.Management.AbstractEndpoint{Steeltoe.Management.Endpoint.Health.HealthEndpointResponse,Steeltoe.Management.Endpoint.Security.ISecurityContext}.Invoke(Steeltoe.Management.Endpoint.Security.ISecurityContext)
  commentId: M:Steeltoe.Management.AbstractEndpoint{Steeltoe.Management.Endpoint.Health.HealthEndpointResponse,Steeltoe.Management.Endpoint.Security.ISecurityContext}.Invoke(Steeltoe.Management.Endpoint.Security.ISecurityContext)
  parent: Steeltoe.Management.AbstractEndpoint{Steeltoe.Management.Endpoint.Health.HealthEndpointResponse,Steeltoe.Management.Endpoint.Security.ISecurityContext}
  definition: Steeltoe.Management.AbstractEndpoint`2.Invoke(`1)
  name: Invoke(ISecurityContext)
  nameWithType: AbstractEndpoint<HealthEndpointResponse, ISecurityContext>.Invoke(ISecurityContext)
  fullName: Steeltoe.Management.AbstractEndpoint<Steeltoe.Management.Endpoint.Health.HealthEndpointResponse, Steeltoe.Management.Endpoint.Security.ISecurityContext>.Invoke(Steeltoe.Management.Endpoint.Security.ISecurityContext)
  nameWithType.vb: AbstractEndpoint(Of HealthEndpointResponse, ISecurityContext).Invoke(ISecurityContext)
  fullName.vb: Steeltoe.Management.AbstractEndpoint(Of Steeltoe.Management.Endpoint.Health.HealthEndpointResponse, Steeltoe.Management.Endpoint.Security.ISecurityContext).Invoke(Steeltoe.Management.Endpoint.Security.ISecurityContext)
  spec.csharp:
  - uid: Steeltoe.Management.AbstractEndpoint`2.Invoke(`1)
    name: Invoke
    nameWithType: AbstractEndpoint<HealthEndpointResponse, ISecurityContext>.Invoke
    fullName: Steeltoe.Management.AbstractEndpoint<Steeltoe.Management.Endpoint.Health.HealthEndpointResponse, Steeltoe.Management.Endpoint.Security.ISecurityContext>.Invoke
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.Endpoint.Security.ISecurityContext
    name: ISecurityContext
    nameWithType: ISecurityContext
    fullName: Steeltoe.Management.Endpoint.Security.ISecurityContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Management.AbstractEndpoint`2.Invoke(`1)
    name: Invoke
    nameWithType: AbstractEndpoint(Of HealthEndpointResponse, ISecurityContext).Invoke
    fullName: Steeltoe.Management.AbstractEndpoint(Of Steeltoe.Management.Endpoint.Health.HealthEndpointResponse, Steeltoe.Management.Endpoint.Security.ISecurityContext).Invoke
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.Endpoint.Security.ISecurityContext
    name: ISecurityContext
    nameWithType: ISecurityContext
    fullName: Steeltoe.Management.Endpoint.Security.ISecurityContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.AbstractEndpoint.options
  commentId: F:Steeltoe.Management.AbstractEndpoint.options
  parent: Steeltoe.Management.AbstractEndpoint
  name: options
  nameWithType: AbstractEndpoint.options
  fullName: Steeltoe.Management.AbstractEndpoint.options
- uid: Steeltoe.Management.AbstractEndpoint.Id
  commentId: P:Steeltoe.Management.AbstractEndpoint.Id
  parent: Steeltoe.Management.AbstractEndpoint
  name: Id
  nameWithType: AbstractEndpoint.Id
  fullName: Steeltoe.Management.AbstractEndpoint.Id
- uid: Steeltoe.Management.AbstractEndpoint.Enabled
  commentId: P:Steeltoe.Management.AbstractEndpoint.Enabled
  parent: Steeltoe.Management.AbstractEndpoint
  name: Enabled
  nameWithType: AbstractEndpoint.Enabled
  fullName: Steeltoe.Management.AbstractEndpoint.Enabled
- uid: Steeltoe.Management.AbstractEndpoint.Path
  commentId: P:Steeltoe.Management.AbstractEndpoint.Path
  parent: Steeltoe.Management.AbstractEndpoint
  name: Path
  nameWithType: AbstractEndpoint.Path
  fullName: Steeltoe.Management.AbstractEndpoint.Path
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.IEndpoint.Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IManagementOptions)
  commentId: M:Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
  parent: Steeltoe.Management.Endpoint.EndPointExtensions
  definition: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
  name: IsEnabled(IManagementOptions)
  nameWithType: EndPointExtensions.IsEnabled(IManagementOptions)
  fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IManagementOptions)
  spec.csharp:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IManagementOptions)
    name: IsEnabled
    nameWithType: EndPointExtensions.IsEnabled
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IManagementOptions)
    name: IsEnabled
    nameWithType: EndPointExtensions.IsEnabled
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.IEndpoint.Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IManagementOptions)
  commentId: M:Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
  parent: Steeltoe.Management.Endpoint.EndPointExtensions
  definition: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
  name: IsExposed(IManagementOptions)
  nameWithType: EndPointExtensions.IsExposed(IManagementOptions)
  fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IManagementOptions)
  spec.csharp:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IManagementOptions)
    name: IsExposed
    nameWithType: EndPointExtensions.IsExposed
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IManagementOptions)
    name: IsExposed
    nameWithType: EndPointExtensions.IsExposed
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.IEndpoint.Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IManagementOptions,ILogger)
  commentId: M:Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions,ILogger)
  parent: Steeltoe.Management.Endpoint.EndPointExtensions
  definition: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions,ILogger)
  name: ShouldInvoke(IManagementOptions, ILogger)
  nameWithType: EndPointExtensions.ShouldInvoke(IManagementOptions, ILogger)
  fullName: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IManagementOptions, ILogger)
  spec.csharp:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IManagementOptions,ILogger)
    name: ShouldInvoke
    nameWithType: EndPointExtensions.ShouldInvoke
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IManagementOptions,ILogger)
    name: ShouldInvoke
    nameWithType: EndPointExtensions.ShouldInvoke
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Management
  commentId: N:Steeltoe.Management
  name: Steeltoe.Management
  nameWithType: Steeltoe.Management
  fullName: Steeltoe.Management
- uid: Steeltoe.Management.AbstractEndpoint`2
  commentId: T:Steeltoe.Management.AbstractEndpoint`2
  name: AbstractEndpoint<TResult, TRequest>
  nameWithType: AbstractEndpoint<TResult, TRequest>
  fullName: Steeltoe.Management.AbstractEndpoint<TResult, TRequest>
  nameWithType.vb: AbstractEndpoint(Of TResult, TRequest)
  fullName.vb: Steeltoe.Management.AbstractEndpoint(Of TResult, TRequest)
  name.vb: AbstractEndpoint(Of TResult, TRequest)
  spec.csharp:
  - uid: Steeltoe.Management.AbstractEndpoint`2
    name: AbstractEndpoint
    nameWithType: AbstractEndpoint
    fullName: Steeltoe.Management.AbstractEndpoint
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Management.AbstractEndpoint`2
    name: AbstractEndpoint
    nameWithType: AbstractEndpoint
    fullName: Steeltoe.Management.AbstractEndpoint
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.IEndpoint`2
  commentId: T:Steeltoe.Management.IEndpoint`2
  name: IEndpoint<TResult, TRequest>
  nameWithType: IEndpoint<TResult, TRequest>
  fullName: Steeltoe.Management.IEndpoint<TResult, TRequest>
  nameWithType.vb: IEndpoint(Of TResult, TRequest)
  fullName.vb: Steeltoe.Management.IEndpoint(Of TResult, TRequest)
  name.vb: IEndpoint(Of TResult, TRequest)
  spec.csharp:
  - uid: Steeltoe.Management.IEndpoint`2
    name: IEndpoint
    nameWithType: IEndpoint
    fullName: Steeltoe.Management.IEndpoint
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Management.IEndpoint`2
    name: IEndpoint
    nameWithType: IEndpoint
    fullName: Steeltoe.Management.IEndpoint
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.AbstractEndpoint`2.Invoke(`1)
  commentId: M:Steeltoe.Management.AbstractEndpoint`2.Invoke(`1)
  name: Invoke(TRequest)
  nameWithType: AbstractEndpoint<TResult, TRequest>.Invoke(TRequest)
  fullName: Steeltoe.Management.AbstractEndpoint<TResult, TRequest>.Invoke(TRequest)
  nameWithType.vb: AbstractEndpoint(Of TResult, TRequest).Invoke(TRequest)
  fullName.vb: Steeltoe.Management.AbstractEndpoint(Of TResult, TRequest).Invoke(TRequest)
  spec.csharp:
  - uid: Steeltoe.Management.AbstractEndpoint`2.Invoke(`1)
    name: Invoke
    nameWithType: AbstractEndpoint<TResult, TRequest>.Invoke
    fullName: Steeltoe.Management.AbstractEndpoint<TResult, TRequest>.Invoke
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Management.AbstractEndpoint`2.Invoke(`1)
    name: Invoke
    nameWithType: AbstractEndpoint(Of TResult, TRequest).Invoke
    fullName: Steeltoe.Management.AbstractEndpoint(Of TResult, TRequest).Invoke
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
  commentId: M:Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
  name: IsEnabled(IEndpoint, IManagementOptions)
  nameWithType: EndPointExtensions.IsEnabled(IEndpoint, IManagementOptions)
  fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IEndpoint, Steeltoe.Management.IManagementOptions)
  spec.csharp:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
    name: IsEnabled
    nameWithType: EndPointExtensions.IsEnabled
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IEndpoint
    name: IEndpoint
    nameWithType: IEndpoint
    fullName: Steeltoe.Management.IEndpoint
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
    name: IsEnabled
    nameWithType: EndPointExtensions.IsEnabled
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IEndpoint
    name: IEndpoint
    nameWithType: IEndpoint
    fullName: Steeltoe.Management.IEndpoint
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.Endpoint.EndPointExtensions
  commentId: T:Steeltoe.Management.Endpoint.EndPointExtensions
  parent: Steeltoe.Management.Endpoint
  name: EndPointExtensions
  nameWithType: EndPointExtensions
  fullName: Steeltoe.Management.Endpoint.EndPointExtensions
- uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
  commentId: M:Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
  name: IsExposed(IEndpoint, IManagementOptions)
  nameWithType: EndPointExtensions.IsExposed(IEndpoint, IManagementOptions)
  fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IEndpoint, Steeltoe.Management.IManagementOptions)
  spec.csharp:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
    name: IsExposed
    nameWithType: EndPointExtensions.IsExposed
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IEndpoint
    name: IEndpoint
    nameWithType: IEndpoint
    fullName: Steeltoe.Management.IEndpoint
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
    name: IsExposed
    nameWithType: EndPointExtensions.IsExposed
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IEndpoint
    name: IEndpoint
    nameWithType: IEndpoint
    fullName: Steeltoe.Management.IEndpoint
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions,ILogger)
  commentId: M:Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions,ILogger)
  isExternal: true
  name: ShouldInvoke(IEndpoint, IManagementOptions, ILogger)
  nameWithType: EndPointExtensions.ShouldInvoke(IEndpoint, IManagementOptions, ILogger)
  fullName: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IEndpoint, Steeltoe.Management.IManagementOptions, ILogger)
  spec.csharp:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions,ILogger)
    name: ShouldInvoke
    nameWithType: EndPointExtensions.ShouldInvoke
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IEndpoint
    name: IEndpoint
    nameWithType: IEndpoint
    fullName: Steeltoe.Management.IEndpoint
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions,ILogger)
    name: ShouldInvoke
    nameWithType: EndPointExtensions.ShouldInvoke
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IEndpoint
    name: IEndpoint
    nameWithType: IEndpoint
    fullName: Steeltoe.Management.IEndpoint
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.Endpoint
  commentId: N:Steeltoe.Management.Endpoint
  name: Steeltoe.Management.Endpoint
  nameWithType: Steeltoe.Management.Endpoint
  fullName: Steeltoe.Management.Endpoint
- uid: Steeltoe.Management.Endpoint.Health.HealthEndpoint.#ctor*
  commentId: Overload:Steeltoe.Management.Endpoint.Health.HealthEndpoint.#ctor
  name: HealthEndpoint
  nameWithType: HealthEndpoint.HealthEndpoint
  fullName: Steeltoe.Management.Endpoint.Health.HealthEndpoint.HealthEndpoint
- uid: Steeltoe.Management.Endpoint.Health.IHealthOptions
  commentId: T:Steeltoe.Management.Endpoint.Health.IHealthOptions
  parent: Steeltoe.Management.Endpoint.Health
  name: IHealthOptions
  nameWithType: IHealthOptions
  fullName: Steeltoe.Management.Endpoint.Health.IHealthOptions
- uid: Steeltoe.Common.HealthChecks.IHealthAggregator
  commentId: T:Steeltoe.Common.HealthChecks.IHealthAggregator
  parent: Steeltoe.Common.HealthChecks
  name: IHealthAggregator
  nameWithType: IHealthAggregator
  fullName: Steeltoe.Common.HealthChecks.IHealthAggregator
- uid: System.Collections.Generic.IEnumerable{Steeltoe.Common.HealthChecks.IHealthContributor}
  commentId: T:System.Collections.Generic.IEnumerable{Steeltoe.Common.HealthChecks.IHealthContributor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IHealthContributor>
  nameWithType: IEnumerable<IHealthContributor>
  fullName: System.Collections.Generic.IEnumerable<Steeltoe.Common.HealthChecks.IHealthContributor>
  nameWithType.vb: IEnumerable(Of IHealthContributor)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Steeltoe.Common.HealthChecks.IHealthContributor)
  name.vb: IEnumerable(Of IHealthContributor)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Common.HealthChecks.IHealthContributor
    name: IHealthContributor
    nameWithType: IHealthContributor
    fullName: Steeltoe.Common.HealthChecks.IHealthContributor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Common.HealthChecks.IHealthContributor
    name: IHealthContributor
    nameWithType: IHealthContributor
    fullName: Steeltoe.Common.HealthChecks.IHealthContributor
  - name: )
    nameWithType: )
    fullName: )
- uid: ILogger{Steeltoe.Management.Endpoint.Health.HealthEndpoint}
  commentId: '!:ILogger{Steeltoe.Management.Endpoint.Health.HealthEndpoint}'
  definition: ILogger`1
  name: ILogger<HealthEndpoint>
  nameWithType: ILogger<HealthEndpoint>
  fullName: ILogger<Steeltoe.Management.Endpoint.Health.HealthEndpoint>
  nameWithType.vb: ILogger(Of HealthEndpoint)
  fullName.vb: ILogger(Of Steeltoe.Management.Endpoint.Health.HealthEndpoint)
  name.vb: ILogger(Of HealthEndpoint)
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Management.Endpoint.Health.HealthEndpoint
    name: HealthEndpoint
    nameWithType: HealthEndpoint
    fullName: Steeltoe.Management.Endpoint.Health.HealthEndpoint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Management.Endpoint.Health.HealthEndpoint
    name: HealthEndpoint
    nameWithType: HealthEndpoint
    fullName: Steeltoe.Management.Endpoint.Health.HealthEndpoint
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.HealthChecks
  commentId: N:Steeltoe.Common.HealthChecks
  name: Steeltoe.Common.HealthChecks
  nameWithType: Steeltoe.Common.HealthChecks
  fullName: Steeltoe.Common.HealthChecks
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: ILogger`1
  isExternal: true
  name: ILogger<>
  nameWithType: ILogger<>
  fullName: ILogger<>
  nameWithType.vb: ILogger(Of )
  fullName.vb: ILogger(Of )
  name.vb: ILogger(Of )
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.Endpoint.Health.HealthEndpoint.Options*
  commentId: Overload:Steeltoe.Management.Endpoint.Health.HealthEndpoint.Options
  name: Options
  nameWithType: HealthEndpoint.Options
  fullName: Steeltoe.Management.Endpoint.Health.HealthEndpoint.Options
- uid: Steeltoe.Management.Endpoint.Health.HealthEndpoint.Invoke*
  commentId: Overload:Steeltoe.Management.Endpoint.Health.HealthEndpoint.Invoke
  name: Invoke
  nameWithType: HealthEndpoint.Invoke
  fullName: Steeltoe.Management.Endpoint.Health.HealthEndpoint.Invoke
- uid: Steeltoe.Management.Endpoint.Security.ISecurityContext
  commentId: T:Steeltoe.Management.Endpoint.Security.ISecurityContext
  parent: Steeltoe.Management.Endpoint.Security
  name: ISecurityContext
  nameWithType: ISecurityContext
  fullName: Steeltoe.Management.Endpoint.Security.ISecurityContext
- uid: Steeltoe.Management.Endpoint.Health.HealthEndpointResponse
  commentId: T:Steeltoe.Management.Endpoint.Health.HealthEndpointResponse
  parent: Steeltoe.Management.Endpoint.Health
  name: HealthEndpointResponse
  nameWithType: HealthEndpointResponse
  fullName: Steeltoe.Management.Endpoint.Health.HealthEndpointResponse
- uid: Steeltoe.Management.Endpoint.Security
  commentId: N:Steeltoe.Management.Endpoint.Security
  name: Steeltoe.Management.Endpoint.Security
  nameWithType: Steeltoe.Management.Endpoint.Security
  fullName: Steeltoe.Management.Endpoint.Security
- uid: Steeltoe.Management.Endpoint.Health.HealthEndpoint.GetStatusCode*
  commentId: Overload:Steeltoe.Management.Endpoint.Health.HealthEndpoint.GetStatusCode
  name: GetStatusCode
  nameWithType: HealthEndpoint.GetStatusCode
  fullName: Steeltoe.Management.Endpoint.Health.HealthEndpoint.GetStatusCode
- uid: Steeltoe.Common.HealthChecks.HealthCheckResult
  commentId: T:Steeltoe.Common.HealthChecks.HealthCheckResult
  parent: Steeltoe.Common.HealthChecks
  name: HealthCheckResult
  nameWithType: HealthCheckResult
  fullName: Steeltoe.Common.HealthChecks.HealthCheckResult
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Steeltoe.Management.Endpoint.Health.HealthEndpoint.BuildHealth*
  commentId: Overload:Steeltoe.Management.Endpoint.Health.HealthEndpoint.BuildHealth
  name: BuildHealth
  nameWithType: HealthEndpoint.BuildHealth
  fullName: Steeltoe.Management.Endpoint.Health.HealthEndpoint.BuildHealth
- uid: Steeltoe.Management.Endpoint.Security.ISecurityContext.GetRequestComponents
  commentId: M:Steeltoe.Management.Endpoint.Security.ISecurityContext.GetRequestComponents
  isExternal: true
- uid: Steeltoe.Management.Endpoint.Health.HealthEndpoint.GetRequestedHealthGroup*
  commentId: Overload:Steeltoe.Management.Endpoint.Health.HealthEndpoint.GetRequestedHealthGroup
  name: GetRequestedHealthGroup
  nameWithType: HealthEndpoint.GetRequestedHealthGroup
  fullName: Steeltoe.Management.Endpoint.Health.HealthEndpoint.GetRequestedHealthGroup
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Common.HealthChecks.IHealthContributor
  commentId: T:Steeltoe.Common.HealthChecks.IHealthContributor
  parent: Steeltoe.Common.HealthChecks
  name: IHealthContributor
  nameWithType: IHealthContributor
  fullName: Steeltoe.Common.HealthChecks.IHealthContributor
- uid: Steeltoe.Management.Endpoint.Health.HealthEndpoint.GetFilteredContributorList*
  commentId: Overload:Steeltoe.Management.Endpoint.Health.HealthEndpoint.GetFilteredContributorList
  name: GetFilteredContributorList
  nameWithType: HealthEndpoint.GetFilteredContributorList
  fullName: Steeltoe.Management.Endpoint.Health.HealthEndpoint.GetFilteredContributorList
- uid: System.Collections.Generic.IList{Steeltoe.Common.HealthChecks.IHealthContributor}
  commentId: T:System.Collections.Generic.IList{Steeltoe.Common.HealthChecks.IHealthContributor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IHealthContributor>
  nameWithType: IList<IHealthContributor>
  fullName: System.Collections.Generic.IList<Steeltoe.Common.HealthChecks.IHealthContributor>
  nameWithType.vb: IList(Of IHealthContributor)
  fullName.vb: System.Collections.Generic.IList(Of Steeltoe.Common.HealthChecks.IHealthContributor)
  name.vb: IList(Of IHealthContributor)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Common.HealthChecks.IHealthContributor
    name: IHealthContributor
    nameWithType: IHealthContributor
    fullName: Steeltoe.Common.HealthChecks.IHealthContributor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Common.HealthChecks.IHealthContributor
    name: IHealthContributor
    nameWithType: IHealthContributor
    fullName: Steeltoe.Common.HealthChecks.IHealthContributor
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
