### YamlMime:ManagedReference
items:
- uid: Steeltoe.Common.Contexts.IApplicationContext
  commentId: T:Steeltoe.Common.Contexts.IApplicationContext
  id: IApplicationContext
  parent: Steeltoe.Common.Contexts
  children:
  - Steeltoe.Common.Contexts.IApplicationContext.Configuration
  - Steeltoe.Common.Contexts.IApplicationContext.ContainsService(System.String,System.Type)
  - Steeltoe.Common.Contexts.IApplicationContext.ContainsService``1(System.String)
  - Steeltoe.Common.Contexts.IApplicationContext.Deregister(System.String)
  - Steeltoe.Common.Contexts.IApplicationContext.GetService(System.String,System.Type)
  - Steeltoe.Common.Contexts.IApplicationContext.GetService(System.Type)
  - Steeltoe.Common.Contexts.IApplicationContext.GetService``1
  - Steeltoe.Common.Contexts.IApplicationContext.GetService``1(System.String)
  - Steeltoe.Common.Contexts.IApplicationContext.GetServices``1
  - Steeltoe.Common.Contexts.IApplicationContext.Register(System.String,System.Object)
  - Steeltoe.Common.Contexts.IApplicationContext.ServiceProvider
  langs:
  - csharp
  - vb
  name: IApplicationContext
  nameWithType: IApplicationContext
  fullName: Steeltoe.Common.Contexts.IApplicationContext
  type: Interface
  source:
    remote:
      path: src/Common/src/Abstractions/Contexts/IApplicationContext.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IApplicationContext
    path: ../Steeltoe/src/Common/src/Abstractions/Contexts/IApplicationContext.cs
    startLine: 10
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Contexts
  syntax:
    content: public interface IApplicationContext
    content.vb: Public Interface IApplicationContext
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Steeltoe.Common.Contexts.IApplicationContext.Configuration
  commentId: P:Steeltoe.Common.Contexts.IApplicationContext.Configuration
  id: Configuration
  parent: Steeltoe.Common.Contexts.IApplicationContext
  langs:
  - csharp
  - vb
  name: Configuration
  nameWithType: IApplicationContext.Configuration
  fullName: Steeltoe.Common.Contexts.IApplicationContext.Configuration
  type: Property
  source:
    remote:
      path: src/Common/src/Abstractions/Contexts/IApplicationContext.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Configuration
    path: ../Steeltoe/src/Common/src/Abstractions/Contexts/IApplicationContext.cs
    startLine: 12
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Contexts
  syntax:
    content: IConfiguration Configuration { get; }
    parameters: []
    return:
      type: IConfiguration
    content.vb: ReadOnly Property Configuration As IConfiguration
  overload: Steeltoe.Common.Contexts.IApplicationContext.Configuration*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.Common.Contexts.IApplicationContext.ServiceProvider
  commentId: P:Steeltoe.Common.Contexts.IApplicationContext.ServiceProvider
  id: ServiceProvider
  parent: Steeltoe.Common.Contexts.IApplicationContext
  langs:
  - csharp
  - vb
  name: ServiceProvider
  nameWithType: IApplicationContext.ServiceProvider
  fullName: Steeltoe.Common.Contexts.IApplicationContext.ServiceProvider
  type: Property
  source:
    remote:
      path: src/Common/src/Abstractions/Contexts/IApplicationContext.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ServiceProvider
    path: ../Steeltoe/src/Common/src/Abstractions/Contexts/IApplicationContext.cs
    startLine: 14
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Contexts
  syntax:
    content: IServiceProvider ServiceProvider { get; }
    parameters: []
    return:
      type: System.IServiceProvider
    content.vb: ReadOnly Property ServiceProvider As IServiceProvider
  overload: Steeltoe.Common.Contexts.IApplicationContext.ServiceProvider*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.Common.Contexts.IApplicationContext.GetService(System.String,System.Type)
  commentId: M:Steeltoe.Common.Contexts.IApplicationContext.GetService(System.String,System.Type)
  id: GetService(System.String,System.Type)
  parent: Steeltoe.Common.Contexts.IApplicationContext
  langs:
  - csharp
  - vb
  name: GetService(String, Type)
  nameWithType: IApplicationContext.GetService(String, Type)
  fullName: Steeltoe.Common.Contexts.IApplicationContext.GetService(System.String, System.Type)
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Contexts/IApplicationContext.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetService
    path: ../Steeltoe/src/Common/src/Abstractions/Contexts/IApplicationContext.cs
    startLine: 16
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Contexts
  syntax:
    content: object GetService(string name, Type serviceType)
    parameters:
    - id: name
      type: System.String
    - id: serviceType
      type: System.Type
    return:
      type: System.Object
    content.vb: Function GetService(name As String, serviceType As Type) As Object
  overload: Steeltoe.Common.Contexts.IApplicationContext.GetService*
- uid: Steeltoe.Common.Contexts.IApplicationContext.GetService``1(System.String)
  commentId: M:Steeltoe.Common.Contexts.IApplicationContext.GetService``1(System.String)
  id: GetService``1(System.String)
  parent: Steeltoe.Common.Contexts.IApplicationContext
  langs:
  - csharp
  - vb
  name: GetService<T>(String)
  nameWithType: IApplicationContext.GetService<T>(String)
  fullName: Steeltoe.Common.Contexts.IApplicationContext.GetService<T>(System.String)
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Contexts/IApplicationContext.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetService
    path: ../Steeltoe/src/Common/src/Abstractions/Contexts/IApplicationContext.cs
    startLine: 18
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Contexts
  syntax:
    content: T GetService<T>(string name)
    parameters:
    - id: name
      type: System.String
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Function GetService(Of T)(name As String) As T
  overload: Steeltoe.Common.Contexts.IApplicationContext.GetService*
  nameWithType.vb: IApplicationContext.GetService(Of T)(String)
  fullName.vb: Steeltoe.Common.Contexts.IApplicationContext.GetService(Of T)(System.String)
  name.vb: GetService(Of T)(String)
- uid: Steeltoe.Common.Contexts.IApplicationContext.GetService``1
  commentId: M:Steeltoe.Common.Contexts.IApplicationContext.GetService``1
  id: GetService``1
  parent: Steeltoe.Common.Contexts.IApplicationContext
  langs:
  - csharp
  - vb
  name: GetService<T>()
  nameWithType: IApplicationContext.GetService<T>()
  fullName: Steeltoe.Common.Contexts.IApplicationContext.GetService<T>()
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Contexts/IApplicationContext.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetService
    path: ../Steeltoe/src/Common/src/Abstractions/Contexts/IApplicationContext.cs
    startLine: 20
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Contexts
  syntax:
    content: T GetService<T>()
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Function GetService(Of T) As T
  overload: Steeltoe.Common.Contexts.IApplicationContext.GetService*
  nameWithType.vb: IApplicationContext.GetService(Of T)()
  fullName.vb: Steeltoe.Common.Contexts.IApplicationContext.GetService(Of T)()
  name.vb: GetService(Of T)()
- uid: Steeltoe.Common.Contexts.IApplicationContext.GetService(System.Type)
  commentId: M:Steeltoe.Common.Contexts.IApplicationContext.GetService(System.Type)
  id: GetService(System.Type)
  parent: Steeltoe.Common.Contexts.IApplicationContext
  langs:
  - csharp
  - vb
  name: GetService(Type)
  nameWithType: IApplicationContext.GetService(Type)
  fullName: Steeltoe.Common.Contexts.IApplicationContext.GetService(System.Type)
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Contexts/IApplicationContext.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetService
    path: ../Steeltoe/src/Common/src/Abstractions/Contexts/IApplicationContext.cs
    startLine: 22
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Contexts
  syntax:
    content: object GetService(Type serviceType)
    parameters:
    - id: serviceType
      type: System.Type
    return:
      type: System.Object
    content.vb: Function GetService(serviceType As Type) As Object
  overload: Steeltoe.Common.Contexts.IApplicationContext.GetService*
- uid: Steeltoe.Common.Contexts.IApplicationContext.GetServices``1
  commentId: M:Steeltoe.Common.Contexts.IApplicationContext.GetServices``1
  id: GetServices``1
  parent: Steeltoe.Common.Contexts.IApplicationContext
  langs:
  - csharp
  - vb
  name: GetServices<T>()
  nameWithType: IApplicationContext.GetServices<T>()
  fullName: Steeltoe.Common.Contexts.IApplicationContext.GetServices<T>()
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Contexts/IApplicationContext.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetServices
    path: ../Steeltoe/src/Common/src/Abstractions/Contexts/IApplicationContext.cs
    startLine: 24
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Contexts
  syntax:
    content: IEnumerable<T> GetServices<T>()
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
    content.vb: Function GetServices(Of T) As IEnumerable(Of T)
  overload: Steeltoe.Common.Contexts.IApplicationContext.GetServices*
  nameWithType.vb: IApplicationContext.GetServices(Of T)()
  fullName.vb: Steeltoe.Common.Contexts.IApplicationContext.GetServices(Of T)()
  name.vb: GetServices(Of T)()
- uid: Steeltoe.Common.Contexts.IApplicationContext.ContainsService(System.String,System.Type)
  commentId: M:Steeltoe.Common.Contexts.IApplicationContext.ContainsService(System.String,System.Type)
  id: ContainsService(System.String,System.Type)
  parent: Steeltoe.Common.Contexts.IApplicationContext
  langs:
  - csharp
  - vb
  name: ContainsService(String, Type)
  nameWithType: IApplicationContext.ContainsService(String, Type)
  fullName: Steeltoe.Common.Contexts.IApplicationContext.ContainsService(System.String, System.Type)
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Contexts/IApplicationContext.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ContainsService
    path: ../Steeltoe/src/Common/src/Abstractions/Contexts/IApplicationContext.cs
    startLine: 26
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Contexts
  syntax:
    content: bool ContainsService(string name, Type serviceType)
    parameters:
    - id: name
      type: System.String
    - id: serviceType
      type: System.Type
    return:
      type: System.Boolean
    content.vb: Function ContainsService(name As String, serviceType As Type) As Boolean
  overload: Steeltoe.Common.Contexts.IApplicationContext.ContainsService*
- uid: Steeltoe.Common.Contexts.IApplicationContext.ContainsService``1(System.String)
  commentId: M:Steeltoe.Common.Contexts.IApplicationContext.ContainsService``1(System.String)
  id: ContainsService``1(System.String)
  parent: Steeltoe.Common.Contexts.IApplicationContext
  langs:
  - csharp
  - vb
  name: ContainsService<T>(String)
  nameWithType: IApplicationContext.ContainsService<T>(String)
  fullName: Steeltoe.Common.Contexts.IApplicationContext.ContainsService<T>(System.String)
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Contexts/IApplicationContext.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ContainsService
    path: ../Steeltoe/src/Common/src/Abstractions/Contexts/IApplicationContext.cs
    startLine: 28
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Contexts
  syntax:
    content: bool ContainsService<T>(string name)
    parameters:
    - id: name
      type: System.String
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Function ContainsService(Of T)(name As String) As Boolean
  overload: Steeltoe.Common.Contexts.IApplicationContext.ContainsService*
  nameWithType.vb: IApplicationContext.ContainsService(Of T)(String)
  fullName.vb: Steeltoe.Common.Contexts.IApplicationContext.ContainsService(Of T)(System.String)
  name.vb: ContainsService(Of T)(String)
- uid: Steeltoe.Common.Contexts.IApplicationContext.Register(System.String,System.Object)
  commentId: M:Steeltoe.Common.Contexts.IApplicationContext.Register(System.String,System.Object)
  id: Register(System.String,System.Object)
  parent: Steeltoe.Common.Contexts.IApplicationContext
  langs:
  - csharp
  - vb
  name: Register(String, Object)
  nameWithType: IApplicationContext.Register(String, Object)
  fullName: Steeltoe.Common.Contexts.IApplicationContext.Register(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Contexts/IApplicationContext.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Register
    path: ../Steeltoe/src/Common/src/Abstractions/Contexts/IApplicationContext.cs
    startLine: 30
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Contexts
  syntax:
    content: void Register(string name, object instance)
    parameters:
    - id: name
      type: System.String
    - id: instance
      type: System.Object
    content.vb: Sub Register(name As String, instance As Object)
  overload: Steeltoe.Common.Contexts.IApplicationContext.Register*
- uid: Steeltoe.Common.Contexts.IApplicationContext.Deregister(System.String)
  commentId: M:Steeltoe.Common.Contexts.IApplicationContext.Deregister(System.String)
  id: Deregister(System.String)
  parent: Steeltoe.Common.Contexts.IApplicationContext
  langs:
  - csharp
  - vb
  name: Deregister(String)
  nameWithType: IApplicationContext.Deregister(String)
  fullName: Steeltoe.Common.Contexts.IApplicationContext.Deregister(System.String)
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Contexts/IApplicationContext.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Deregister
    path: ../Steeltoe/src/Common/src/Abstractions/Contexts/IApplicationContext.cs
    startLine: 32
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Contexts
  syntax:
    content: object Deregister(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Object
    content.vb: Function Deregister(name As String) As Object
  overload: Steeltoe.Common.Contexts.IApplicationContext.Deregister*
references:
- uid: Steeltoe.Common.Contexts
  commentId: N:Steeltoe.Common.Contexts
  name: Steeltoe.Common.Contexts
  nameWithType: Steeltoe.Common.Contexts
  fullName: Steeltoe.Common.Contexts
- uid: Steeltoe.Common.Contexts.IApplicationContext.Configuration*
  commentId: Overload:Steeltoe.Common.Contexts.IApplicationContext.Configuration
  name: Configuration
  nameWithType: IApplicationContext.Configuration
  fullName: Steeltoe.Common.Contexts.IApplicationContext.Configuration
- uid: IConfiguration
  isExternal: true
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: IConfiguration
- uid: Steeltoe.Common.Contexts.IApplicationContext.ServiceProvider*
  commentId: Overload:Steeltoe.Common.Contexts.IApplicationContext.ServiceProvider
  name: ServiceProvider
  nameWithType: IApplicationContext.ServiceProvider
  fullName: Steeltoe.Common.Contexts.IApplicationContext.ServiceProvider
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Common.Contexts.IApplicationContext.GetService*
  commentId: Overload:Steeltoe.Common.Contexts.IApplicationContext.GetService
  name: GetService
  nameWithType: IApplicationContext.GetService
  fullName: Steeltoe.Common.Contexts.IApplicationContext.GetService
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Steeltoe.Common.Contexts.IApplicationContext.GetServices*
  commentId: Overload:Steeltoe.Common.Contexts.IApplicationContext.GetServices
  name: GetServices
  nameWithType: IApplicationContext.GetServices
  fullName: Steeltoe.Common.Contexts.IApplicationContext.GetServices
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Common.Contexts.IApplicationContext.ContainsService*
  commentId: Overload:Steeltoe.Common.Contexts.IApplicationContext.ContainsService
  name: ContainsService
  nameWithType: IApplicationContext.ContainsService
  fullName: Steeltoe.Common.Contexts.IApplicationContext.ContainsService
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Common.Contexts.IApplicationContext.Register*
  commentId: Overload:Steeltoe.Common.Contexts.IApplicationContext.Register
  name: Register
  nameWithType: IApplicationContext.Register
  fullName: Steeltoe.Common.Contexts.IApplicationContext.Register
- uid: Steeltoe.Common.Contexts.IApplicationContext.Deregister*
  commentId: Overload:Steeltoe.Common.Contexts.IApplicationContext.Deregister
  name: Deregister
  nameWithType: IApplicationContext.Deregister
  fullName: Steeltoe.Common.Contexts.IApplicationContext.Deregister
