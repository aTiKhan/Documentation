### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  commentId: T:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  id: PublisherCallbackChannel
  parent: Steeltoe.Messaging.RabbitMQ.Connection
  children:
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.#ctor(RabbitMQ.Client.IModel,Microsoft.Extensions.Logging.ILogger)
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Abort
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Abort(System.UInt16,System.String)
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.AddListener(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener)
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.AddPendingConfirm(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener,System.UInt64,Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm)
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicAck(System.UInt64,System.Boolean)
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicAcks
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicCancel(System.String)
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicConsume(System.String,System.Boolean,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object},RabbitMQ.Client.IBasicConsumer)
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicGet(System.String,System.Boolean)
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicNack(System.UInt64,System.Boolean,System.Boolean)
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicNacks
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicPublish(System.String,System.String,System.Boolean,RabbitMQ.Client.IBasicProperties,System.Byte[])
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicQos(System.UInt32,System.UInt16,System.Boolean)
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicRecover(System.Boolean)
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicRecoverAsync(System.Boolean)
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicRecoverOk
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicReject(System.UInt64,System.Boolean)
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicReturn
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.CallbackException
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Channel
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ChannelNumber
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Close
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Close(System.UInt16,System.String)
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.CloseReason
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ConfirmSelect
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ConsumerCount(System.String)
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ContinuationTimeout
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.CreateBasicProperties
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.CreateBasicPublishBatch
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.DefaultConsumer
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Dispose
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeBind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeBindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeDeclare(System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeDeclareNoWait(System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeDeclarePassive(System.String)
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeDelete(System.String,System.Boolean)
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeDeleteNoWait(System.String,System.Boolean)
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeUnbind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeUnbindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Expire(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener,System.Int64)
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.FlowControl
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.GetPendingConfirmsCount
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.GetPendingConfirmsCount(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener)
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.IsClosed
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.IsOpen
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.MessageCount(System.String)
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ModelShutdown
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.NextPublishSeqNo
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueBind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueBindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueDeclare(System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueDeclareNoWait(System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueDeclarePassive(System.String)
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueDelete(System.String,System.Boolean,System.Boolean)
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueDeleteNoWait(System.String,System.Boolean,System.Boolean)
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueuePurge(System.String)
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueUnbind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.RETURN_LISTENER_CORRELATION_KEY
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.RETURN_LISTENER_ERROR
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.RETURNED_MESSAGE_CORRELATION_KEY
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.SetAfterAckCallback(System.Action{RabbitMQ.Client.IModel})
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.TxCommit
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.TxRollback
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.TxSelect
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.WaitForConfirms
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.WaitForConfirms(System.TimeSpan)
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.WaitForConfirms(System.TimeSpan,System.Boolean@)
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.WaitForConfirmsOrDie
  - Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.WaitForConfirmsOrDie(System.TimeSpan)
  langs:
  - csharp
  - vb
  name: PublisherCallbackChannel
  nameWithType: PublisherCallbackChannel
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: PublisherCallbackChannel
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 24
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: 'public class PublisherCallbackChannel : IPublisherCallbackChannel, IModel, IDisposable'
    content.vb: >-
      Public Class PublisherCallbackChannel

          Implements IPublisherCallbackChannel, IModel, IDisposable
  inheritance:
  - System.Object
  implements:
  - Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel
  - RabbitMQ.Client.IModel
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.RETURNED_MESSAGE_CORRELATION_KEY
  commentId: F:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.RETURNED_MESSAGE_CORRELATION_KEY
  id: RETURNED_MESSAGE_CORRELATION_KEY
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: RETURNED_MESSAGE_CORRELATION_KEY
  nameWithType: PublisherCallbackChannel.RETURNED_MESSAGE_CORRELATION_KEY
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.RETURNED_MESSAGE_CORRELATION_KEY
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RETURNED_MESSAGE_CORRELATION_KEY
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 26
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public const string RETURNED_MESSAGE_CORRELATION_KEY = "spring_returned_message_correlation"
    return:
      type: System.String
    content.vb: Public Const RETURNED_MESSAGE_CORRELATION_KEY As String = "spring_returned_message_correlation"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.RETURN_LISTENER_CORRELATION_KEY
  commentId: F:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.RETURN_LISTENER_CORRELATION_KEY
  id: RETURN_LISTENER_CORRELATION_KEY
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: RETURN_LISTENER_CORRELATION_KEY
  nameWithType: PublisherCallbackChannel.RETURN_LISTENER_CORRELATION_KEY
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.RETURN_LISTENER_CORRELATION_KEY
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RETURN_LISTENER_CORRELATION_KEY
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 27
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public const string RETURN_LISTENER_CORRELATION_KEY = "spring_listener_return_correlation"
    return:
      type: System.String
    content.vb: Public Const RETURN_LISTENER_CORRELATION_KEY As String = "spring_listener_return_correlation"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.RETURN_LISTENER_ERROR
  commentId: F:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.RETURN_LISTENER_ERROR
  id: RETURN_LISTENER_ERROR
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: RETURN_LISTENER_ERROR
  nameWithType: PublisherCallbackChannel.RETURN_LISTENER_ERROR
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.RETURN_LISTENER_ERROR
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RETURN_LISTENER_ERROR
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 28
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public const string RETURN_LISTENER_ERROR = "No 'spring_listener_return_correlation' header in returned message"
    return:
      type: System.String
    content.vb: Public Const RETURN_LISTENER_ERROR As String = "No 'spring_listener_return_correlation' header in returned message"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.#ctor(RabbitMQ.Client.IModel,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.#ctor(RabbitMQ.Client.IModel,Microsoft.Extensions.Logging.ILogger)
  id: '#ctor(RabbitMQ.Client.IModel,Microsoft.Extensions.Logging.ILogger)'
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: PublisherCallbackChannel(IModel, ILogger)
  nameWithType: PublisherCallbackChannel.PublisherCallbackChannel(IModel, ILogger)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.PublisherCallbackChannel(RabbitMQ.Client.IModel, Microsoft.Extensions.Logging.ILogger)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 39
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public PublisherCallbackChannel(IModel channel, ILogger logger = null)
    parameters:
    - id: channel
      type: RabbitMQ.Client.IModel
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Public Sub New(channel As IModel, logger As ILogger = Nothing)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Channel
  commentId: P:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Channel
  id: Channel
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: Channel
  nameWithType: PublisherCallbackChannel.Channel
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Channel
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Channel
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 48
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual IModel Channel { get; }
    parameters: []
    return:
      type: RabbitMQ.Client.IModel
    content.vb: Public Overridable ReadOnly Property Channel As IModel
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Channel*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.Channel
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Expire(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener,System.Int64)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Expire(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener,System.Int64)
  id: Expire(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener,System.Int64)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: Expire(IPublisherCallbackChannel.IListener, Int64)
  nameWithType: PublisherCallbackChannel.Expire(IPublisherCallbackChannel.IListener, Int64)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Expire(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener, System.Int64)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Expire
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 50
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual IList<PendingConfirm> Expire(IPublisherCallbackChannel.IListener listener, long cutoffTime)
    parameters:
    - id: listener
      type: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener
    - id: cutoffTime
      type: System.Int64
    return:
      type: System.Collections.Generic.IList{Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm}
    content.vb: Public Overridable Function Expire(listener As IPublisherCallbackChannel.IListener, cutoffTime As Long) As IList(Of PendingConfirm)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Expire*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.Expire(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener,System.Int64)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.GetPendingConfirmsCount(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.GetPendingConfirmsCount(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener)
  id: GetPendingConfirmsCount(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: GetPendingConfirmsCount(IPublisherCallbackChannel.IListener)
  nameWithType: PublisherCallbackChannel.GetPendingConfirmsCount(IPublisherCallbackChannel.IListener)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.GetPendingConfirmsCount(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetPendingConfirmsCount
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 91
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual int GetPendingConfirmsCount(IPublisherCallbackChannel.IListener listener)
    parameters:
    - id: listener
      type: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener
    return:
      type: System.Int32
    content.vb: Public Overridable Function GetPendingConfirmsCount(listener As IPublisherCallbackChannel.IListener) As Integer
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.GetPendingConfirmsCount*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.GetPendingConfirmsCount(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.GetPendingConfirmsCount
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.GetPendingConfirmsCount
  id: GetPendingConfirmsCount
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: GetPendingConfirmsCount()
  nameWithType: PublisherCallbackChannel.GetPendingConfirmsCount()
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.GetPendingConfirmsCount()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetPendingConfirmsCount
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 106
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual int GetPendingConfirmsCount()
    return:
      type: System.Int32
    content.vb: Public Overridable Function GetPendingConfirmsCount As Integer
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.GetPendingConfirmsCount*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.GetPendingConfirmsCount
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.AddListener(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.AddListener(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener)
  id: AddListener(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: AddListener(IPublisherCallbackChannel.IListener)
  nameWithType: PublisherCallbackChannel.AddListener(IPublisherCallbackChannel.IListener)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.AddListener(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddListener
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 117
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual void AddListener(IPublisherCallbackChannel.IListener listener)
    parameters:
    - id: listener
      type: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener
    content.vb: Public Overridable Sub AddListener(listener As IPublisherCallbackChannel.IListener)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.AddListener*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.AddListener(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.AddPendingConfirm(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener,System.UInt64,Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.AddPendingConfirm(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener,System.UInt64,Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm)
  id: AddPendingConfirm(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener,System.UInt64,Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: AddPendingConfirm(IPublisherCallbackChannel.IListener, UInt64, PendingConfirm)
  nameWithType: PublisherCallbackChannel.AddPendingConfirm(IPublisherCallbackChannel.IListener, UInt64, PendingConfirm)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.AddPendingConfirm(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener, System.UInt64, Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddPendingConfirm
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 138
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual void AddPendingConfirm(IPublisherCallbackChannel.IListener listener, ulong sequence, PendingConfirm pendingConfirm)
    parameters:
    - id: listener
      type: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener
    - id: sequence
      type: System.UInt64
    - id: pendingConfirm
      type: Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm
    content.vb: Public Overridable Sub AddPendingConfirm(listener As IPublisherCallbackChannel.IListener, sequence As ULong, pendingConfirm As PendingConfirm)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.AddPendingConfirm*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.AddPendingConfirm(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener,System.UInt64,Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.SetAfterAckCallback(System.Action{RabbitMQ.Client.IModel})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.SetAfterAckCallback(System.Action{RabbitMQ.Client.IModel})
  id: SetAfterAckCallback(System.Action{RabbitMQ.Client.IModel})
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: SetAfterAckCallback(Action<IModel>)
  nameWithType: PublisherCallbackChannel.SetAfterAckCallback(Action<IModel>)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.SetAfterAckCallback(System.Action<RabbitMQ.Client.IModel>)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetAfterAckCallback
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 160
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual void SetAfterAckCallback(Action<IModel> callback)
    parameters:
    - id: callback
      type: System.Action{RabbitMQ.Client.IModel}
    content.vb: Public Overridable Sub SetAfterAckCallback(callback As Action(Of IModel))
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.SetAfterAckCallback*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.SetAfterAckCallback(System.Action{RabbitMQ.Client.IModel})
  nameWithType.vb: PublisherCallbackChannel.SetAfterAckCallback(Action(Of IModel))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.SetAfterAckCallback(System.Action(Of RabbitMQ.Client.IModel))
  name.vb: SetAfterAckCallback(Action(Of IModel))
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ChannelNumber
  commentId: P:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ChannelNumber
  id: ChannelNumber
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: ChannelNumber
  nameWithType: PublisherCallbackChannel.ChannelNumber
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ChannelNumber
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ChannelNumber
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 175
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual int ChannelNumber { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable ReadOnly Property ChannelNumber As Integer
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ChannelNumber*
  implements:
  - RabbitMQ.Client.IModel.ChannelNumber
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.CloseReason
  commentId: P:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.CloseReason
  id: CloseReason
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: CloseReason
  nameWithType: PublisherCallbackChannel.CloseReason
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.CloseReason
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CloseReason
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 177
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual ShutdownEventArgs CloseReason { get; }
    parameters: []
    return:
      type: RabbitMQ.Client.ShutdownEventArgs
    content.vb: Public Overridable ReadOnly Property CloseReason As ShutdownEventArgs
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.CloseReason*
  implements:
  - RabbitMQ.Client.IModel.CloseReason
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.DefaultConsumer
  commentId: P:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.DefaultConsumer
  id: DefaultConsumer
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: DefaultConsumer
  nameWithType: PublisherCallbackChannel.DefaultConsumer
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.DefaultConsumer
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DefaultConsumer
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 179
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual IBasicConsumer DefaultConsumer { get; set; }
    parameters: []
    return:
      type: RabbitMQ.Client.IBasicConsumer
    content.vb: Public Overridable Property DefaultConsumer As IBasicConsumer
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.DefaultConsumer*
  implements:
  - RabbitMQ.Client.IModel.DefaultConsumer
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.IsClosed
  commentId: P:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.IsClosed
  id: IsClosed
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: IsClosed
  nameWithType: PublisherCallbackChannel.IsClosed
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.IsClosed
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsClosed
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 181
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual bool IsClosed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property IsClosed As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.IsClosed*
  implements:
  - RabbitMQ.Client.IModel.IsClosed
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.IsOpen
  commentId: P:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.IsOpen
  id: IsOpen
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: IsOpen
  nameWithType: PublisherCallbackChannel.IsOpen
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.IsOpen
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsOpen
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 183
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual bool IsOpen { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property IsOpen As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.IsOpen*
  implements:
  - RabbitMQ.Client.IModel.IsOpen
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.NextPublishSeqNo
  commentId: P:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.NextPublishSeqNo
  id: NextPublishSeqNo
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: NextPublishSeqNo
  nameWithType: PublisherCallbackChannel.NextPublishSeqNo
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.NextPublishSeqNo
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: NextPublishSeqNo
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 185
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual ulong NextPublishSeqNo { get; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public Overridable ReadOnly Property NextPublishSeqNo As ULong
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.NextPublishSeqNo*
  implements:
  - RabbitMQ.Client.IModel.NextPublishSeqNo
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ContinuationTimeout
  commentId: P:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ContinuationTimeout
  id: ContinuationTimeout
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: ContinuationTimeout
  nameWithType: PublisherCallbackChannel.ContinuationTimeout
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ContinuationTimeout
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ContinuationTimeout
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 187
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual TimeSpan ContinuationTimeout { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Overridable Property ContinuationTimeout As TimeSpan
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ContinuationTimeout*
  implements:
  - RabbitMQ.Client.IModel.ContinuationTimeout
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicAcks
  commentId: E:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicAcks
  id: BasicAcks
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: BasicAcks
  nameWithType: PublisherCallbackChannel.BasicAcks
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicAcks
  type: Event
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: BasicAcks
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 189
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual event EventHandler<BasicAckEventArgs> BasicAcks
    return:
      type: System.EventHandler{RabbitMQ.Client.Events.BasicAckEventArgs}
    content.vb: Public Overridable Event BasicAcks As EventHandler(Of BasicAckEventArgs)
  implements:
  - RabbitMQ.Client.IModel.BasicAcks
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicNacks
  commentId: E:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicNacks
  id: BasicNacks
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: BasicNacks
  nameWithType: PublisherCallbackChannel.BasicNacks
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicNacks
  type: Event
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: BasicNacks
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 202
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual event EventHandler<BasicNackEventArgs> BasicNacks
    return:
      type: System.EventHandler{RabbitMQ.Client.Events.BasicNackEventArgs}
    content.vb: Public Overridable Event BasicNacks As EventHandler(Of BasicNackEventArgs)
  implements:
  - RabbitMQ.Client.IModel.BasicNacks
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicRecoverOk
  commentId: E:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicRecoverOk
  id: BasicRecoverOk
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: BasicRecoverOk
  nameWithType: PublisherCallbackChannel.BasicRecoverOk
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicRecoverOk
  type: Event
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: BasicRecoverOk
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 215
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual event EventHandler<EventArgs> BasicRecoverOk
    return:
      type: System.EventHandler{System.EventArgs}
    content.vb: Public Overridable Event BasicRecoverOk As EventHandler(Of EventArgs)
  implements:
  - RabbitMQ.Client.IModel.BasicRecoverOk
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicReturn
  commentId: E:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicReturn
  id: BasicReturn
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: BasicReturn
  nameWithType: PublisherCallbackChannel.BasicReturn
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicReturn
  type: Event
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: BasicReturn
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 228
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual event EventHandler<BasicReturnEventArgs> BasicReturn
    return:
      type: System.EventHandler{RabbitMQ.Client.Events.BasicReturnEventArgs}
    content.vb: Public Overridable Event BasicReturn As EventHandler(Of BasicReturnEventArgs)
  implements:
  - RabbitMQ.Client.IModel.BasicReturn
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.CallbackException
  commentId: E:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.CallbackException
  id: CallbackException
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: CallbackException
  nameWithType: PublisherCallbackChannel.CallbackException
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.CallbackException
  type: Event
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CallbackException
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 241
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual event EventHandler<CallbackExceptionEventArgs> CallbackException
    return:
      type: System.EventHandler{RabbitMQ.Client.Events.CallbackExceptionEventArgs}
    content.vb: Public Overridable Event CallbackException As EventHandler(Of CallbackExceptionEventArgs)
  implements:
  - RabbitMQ.Client.IModel.CallbackException
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.FlowControl
  commentId: E:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.FlowControl
  id: FlowControl
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: FlowControl
  nameWithType: PublisherCallbackChannel.FlowControl
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.FlowControl
  type: Event
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: FlowControl
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 254
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual event EventHandler<FlowControlEventArgs> FlowControl
    return:
      type: System.EventHandler{RabbitMQ.Client.Events.FlowControlEventArgs}
    content.vb: Public Overridable Event FlowControl As EventHandler(Of FlowControlEventArgs)
  implements:
  - RabbitMQ.Client.IModel.FlowControl
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ModelShutdown
  commentId: E:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ModelShutdown
  id: ModelShutdown
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: ModelShutdown
  nameWithType: PublisherCallbackChannel.ModelShutdown
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ModelShutdown
  type: Event
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ModelShutdown
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 267
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual event EventHandler<ShutdownEventArgs> ModelShutdown
    return:
      type: System.EventHandler{RabbitMQ.Client.ShutdownEventArgs}
    content.vb: Public Overridable Event ModelShutdown As EventHandler(Of ShutdownEventArgs)
  implements:
  - RabbitMQ.Client.IModel.ModelShutdown
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Abort
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Abort
  id: Abort
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: Abort()
  nameWithType: PublisherCallbackChannel.Abort()
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Abort()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Abort
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 280
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual void Abort()
    content.vb: Public Overridable Sub Abort
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Abort*
  implements:
  - RabbitMQ.Client.IModel.Abort
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Abort(System.UInt16,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Abort(System.UInt16,System.String)
  id: Abort(System.UInt16,System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: Abort(UInt16, String)
  nameWithType: PublisherCallbackChannel.Abort(UInt16, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Abort(System.UInt16, System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Abort
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 282
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual void Abort(ushort replyCode, string replyText)
    parameters:
    - id: replyCode
      type: System.UInt16
    - id: replyText
      type: System.String
    content.vb: Public Overridable Sub Abort(replyCode As UShort, replyText As String)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Abort*
  implements:
  - RabbitMQ.Client.IModel.Abort(System.UInt16,System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicAck(System.UInt64,System.Boolean)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicAck(System.UInt64,System.Boolean)
  id: BasicAck(System.UInt64,System.Boolean)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: BasicAck(UInt64, Boolean)
  nameWithType: PublisherCallbackChannel.BasicAck(UInt64, Boolean)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicAck(System.UInt64, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: BasicAck
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 284
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual void BasicAck(ulong deliveryTag, bool multiple)
    parameters:
    - id: deliveryTag
      type: System.UInt64
    - id: multiple
      type: System.Boolean
    content.vb: Public Overridable Sub BasicAck(deliveryTag As ULong, multiple As Boolean)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicAck*
  implements:
  - RabbitMQ.Client.IModel.BasicAck(System.UInt64,System.Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicCancel(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicCancel(System.String)
  id: BasicCancel(System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: BasicCancel(String)
  nameWithType: PublisherCallbackChannel.BasicCancel(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicCancel(System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: BasicCancel
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 286
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual void BasicCancel(string consumerTag)
    parameters:
    - id: consumerTag
      type: System.String
    content.vb: Public Overridable Sub BasicCancel(consumerTag As String)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicCancel*
  implements:
  - RabbitMQ.Client.IModel.BasicCancel(System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicConsume(System.String,System.Boolean,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object},RabbitMQ.Client.IBasicConsumer)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicConsume(System.String,System.Boolean,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object},RabbitMQ.Client.IBasicConsumer)
  id: BasicConsume(System.String,System.Boolean,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object},RabbitMQ.Client.IBasicConsumer)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: BasicConsume(String, Boolean, String, Boolean, Boolean, IDictionary<String, Object>, IBasicConsumer)
  nameWithType: PublisherCallbackChannel.BasicConsume(String, Boolean, String, Boolean, Boolean, IDictionary<String, Object>, IBasicConsumer)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicConsume(System.String, System.Boolean, System.String, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary<System.String, System.Object>, RabbitMQ.Client.IBasicConsumer)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: BasicConsume
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 288
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual string BasicConsume(string queue, bool autoAck, string consumerTag, bool noLocal, bool exclusive, IDictionary<string, object> arguments, IBasicConsumer consumer)
    parameters:
    - id: queue
      type: System.String
    - id: autoAck
      type: System.Boolean
    - id: consumerTag
      type: System.String
    - id: noLocal
      type: System.Boolean
    - id: exclusive
      type: System.Boolean
    - id: arguments
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    - id: consumer
      type: RabbitMQ.Client.IBasicConsumer
    return:
      type: System.String
    content.vb: Public Overridable Function BasicConsume(queue As String, autoAck As Boolean, consumerTag As String, noLocal As Boolean, exclusive As Boolean, arguments As IDictionary(Of String, Object), consumer As IBasicConsumer) As String
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicConsume*
  implements:
  - RabbitMQ.Client.IModel.BasicConsume(System.String,System.Boolean,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object},RabbitMQ.Client.IBasicConsumer)
  nameWithType.vb: PublisherCallbackChannel.BasicConsume(String, Boolean, String, Boolean, Boolean, IDictionary(Of String, Object), IBasicConsumer)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicConsume(System.String, System.Boolean, System.String, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary(Of System.String, System.Object), RabbitMQ.Client.IBasicConsumer)
  name.vb: BasicConsume(String, Boolean, String, Boolean, Boolean, IDictionary(Of String, Object), IBasicConsumer)
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicGet(System.String,System.Boolean)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicGet(System.String,System.Boolean)
  id: BasicGet(System.String,System.Boolean)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: BasicGet(String, Boolean)
  nameWithType: PublisherCallbackChannel.BasicGet(String, Boolean)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicGet(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: BasicGet
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 291
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual BasicGetResult BasicGet(string queue, bool autoAck)
    parameters:
    - id: queue
      type: System.String
    - id: autoAck
      type: System.Boolean
    return:
      type: RabbitMQ.Client.BasicGetResult
    content.vb: Public Overridable Function BasicGet(queue As String, autoAck As Boolean) As BasicGetResult
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicGet*
  implements:
  - RabbitMQ.Client.IModel.BasicGet(System.String,System.Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicNack(System.UInt64,System.Boolean,System.Boolean)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicNack(System.UInt64,System.Boolean,System.Boolean)
  id: BasicNack(System.UInt64,System.Boolean,System.Boolean)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: BasicNack(UInt64, Boolean, Boolean)
  nameWithType: PublisherCallbackChannel.BasicNack(UInt64, Boolean, Boolean)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicNack(System.UInt64, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: BasicNack
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 293
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual void BasicNack(ulong deliveryTag, bool multiple, bool requeue)
    parameters:
    - id: deliveryTag
      type: System.UInt64
    - id: multiple
      type: System.Boolean
    - id: requeue
      type: System.Boolean
    content.vb: Public Overridable Sub BasicNack(deliveryTag As ULong, multiple As Boolean, requeue As Boolean)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicNack*
  implements:
  - RabbitMQ.Client.IModel.BasicNack(System.UInt64,System.Boolean,System.Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicPublish(System.String,System.String,System.Boolean,RabbitMQ.Client.IBasicProperties,System.Byte[])
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicPublish(System.String,System.String,System.Boolean,RabbitMQ.Client.IBasicProperties,System.Byte[])
  id: BasicPublish(System.String,System.String,System.Boolean,RabbitMQ.Client.IBasicProperties,System.Byte[])
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: BasicPublish(String, String, Boolean, IBasicProperties, Byte[])
  nameWithType: PublisherCallbackChannel.BasicPublish(String, String, Boolean, IBasicProperties, Byte[])
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicPublish(System.String, System.String, System.Boolean, RabbitMQ.Client.IBasicProperties, System.Byte[])
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: BasicPublish
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 295
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual void BasicPublish(string exchange, string routingKey, bool mandatory, IBasicProperties basicProperties, byte[] body)
    parameters:
    - id: exchange
      type: System.String
    - id: routingKey
      type: System.String
    - id: mandatory
      type: System.Boolean
    - id: basicProperties
      type: RabbitMQ.Client.IBasicProperties
    - id: body
      type: System.Byte[]
    content.vb: Public Overridable Sub BasicPublish(exchange As String, routingKey As String, mandatory As Boolean, basicProperties As IBasicProperties, body As Byte())
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicPublish*
  implements:
  - RabbitMQ.Client.IModel.BasicPublish(System.String,System.String,System.Boolean,RabbitMQ.Client.IBasicProperties,System.Byte[])
  nameWithType.vb: PublisherCallbackChannel.BasicPublish(String, String, Boolean, IBasicProperties, Byte())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicPublish(System.String, System.String, System.Boolean, RabbitMQ.Client.IBasicProperties, System.Byte())
  name.vb: BasicPublish(String, String, Boolean, IBasicProperties, Byte())
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicQos(System.UInt32,System.UInt16,System.Boolean)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicQos(System.UInt32,System.UInt16,System.Boolean)
  id: BasicQos(System.UInt32,System.UInt16,System.Boolean)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: BasicQos(UInt32, UInt16, Boolean)
  nameWithType: PublisherCallbackChannel.BasicQos(UInt32, UInt16, Boolean)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicQos(System.UInt32, System.UInt16, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: BasicQos
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 298
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual void BasicQos(uint prefetchSize, ushort prefetchCount, bool global)
    parameters:
    - id: prefetchSize
      type: System.UInt32
    - id: prefetchCount
      type: System.UInt16
    - id: global
      type: System.Boolean
    content.vb: Public Overridable Sub BasicQos(prefetchSize As UInteger, prefetchCount As UShort, global As Boolean)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicQos*
  implements:
  - RabbitMQ.Client.IModel.BasicQos(System.UInt32,System.UInt16,System.Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicRecover(System.Boolean)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicRecover(System.Boolean)
  id: BasicRecover(System.Boolean)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: BasicRecover(Boolean)
  nameWithType: PublisherCallbackChannel.BasicRecover(Boolean)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicRecover(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: BasicRecover
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 300
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual void BasicRecover(bool requeue)
    parameters:
    - id: requeue
      type: System.Boolean
    content.vb: Public Overridable Sub BasicRecover(requeue As Boolean)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicRecover*
  implements:
  - RabbitMQ.Client.IModel.BasicRecover(System.Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicRecoverAsync(System.Boolean)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicRecoverAsync(System.Boolean)
  id: BasicRecoverAsync(System.Boolean)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: BasicRecoverAsync(Boolean)
  nameWithType: PublisherCallbackChannel.BasicRecoverAsync(Boolean)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicRecoverAsync(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: BasicRecoverAsync
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 302
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual void BasicRecoverAsync(bool requeue)
    parameters:
    - id: requeue
      type: System.Boolean
    content.vb: Public Overridable Sub BasicRecoverAsync(requeue As Boolean)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicRecoverAsync*
  implements:
  - RabbitMQ.Client.IModel.BasicRecoverAsync(System.Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicReject(System.UInt64,System.Boolean)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicReject(System.UInt64,System.Boolean)
  id: BasicReject(System.UInt64,System.Boolean)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: BasicReject(UInt64, Boolean)
  nameWithType: PublisherCallbackChannel.BasicReject(UInt64, Boolean)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicReject(System.UInt64, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: BasicReject
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 304
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual void BasicReject(ulong deliveryTag, bool requeue)
    parameters:
    - id: deliveryTag
      type: System.UInt64
    - id: requeue
      type: System.Boolean
    content.vb: Public Overridable Sub BasicReject(deliveryTag As ULong, requeue As Boolean)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicReject*
  implements:
  - RabbitMQ.Client.IModel.BasicReject(System.UInt64,System.Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Close
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Close
  id: Close
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: Close()
  nameWithType: PublisherCallbackChannel.Close()
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Close()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Close
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 306
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual void Close()
    content.vb: Public Overridable Sub Close
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Close*
  implements:
  - RabbitMQ.Client.IModel.Close
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Close(System.UInt16,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Close(System.UInt16,System.String)
  id: Close(System.UInt16,System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: Close(UInt16, String)
  nameWithType: PublisherCallbackChannel.Close(UInt16, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Close(System.UInt16, System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Close
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 321
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual void Close(ushort replyCode, string replyText)
    parameters:
    - id: replyCode
      type: System.UInt16
    - id: replyText
      type: System.String
    content.vb: Public Overridable Sub Close(replyCode As UShort, replyText As String)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Close*
  implements:
  - RabbitMQ.Client.IModel.Close(System.UInt16,System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ConfirmSelect
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ConfirmSelect
  id: ConfirmSelect
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: ConfirmSelect()
  nameWithType: PublisherCallbackChannel.ConfirmSelect()
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ConfirmSelect()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConfirmSelect
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 326
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual void ConfirmSelect()
    content.vb: Public Overridable Sub ConfirmSelect
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ConfirmSelect*
  implements:
  - RabbitMQ.Client.IModel.ConfirmSelect
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ConsumerCount(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ConsumerCount(System.String)
  id: ConsumerCount(System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: ConsumerCount(String)
  nameWithType: PublisherCallbackChannel.ConsumerCount(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ConsumerCount(System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConsumerCount
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 328
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual uint ConsumerCount(string queue)
    parameters:
    - id: queue
      type: System.String
    return:
      type: System.UInt32
    content.vb: Public Overridable Function ConsumerCount(queue As String) As UInteger
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ConsumerCount*
  implements:
  - RabbitMQ.Client.IModel.ConsumerCount(System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.CreateBasicProperties
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.CreateBasicProperties
  id: CreateBasicProperties
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: CreateBasicProperties()
  nameWithType: PublisherCallbackChannel.CreateBasicProperties()
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.CreateBasicProperties()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CreateBasicProperties
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 330
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual IBasicProperties CreateBasicProperties()
    return:
      type: RabbitMQ.Client.IBasicProperties
    content.vb: Public Overridable Function CreateBasicProperties As IBasicProperties
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.CreateBasicProperties*
  implements:
  - RabbitMQ.Client.IModel.CreateBasicProperties
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.CreateBasicPublishBatch
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.CreateBasicPublishBatch
  id: CreateBasicPublishBatch
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: CreateBasicPublishBatch()
  nameWithType: PublisherCallbackChannel.CreateBasicPublishBatch()
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.CreateBasicPublishBatch()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CreateBasicPublishBatch
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 332
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual IBasicPublishBatch CreateBasicPublishBatch()
    return:
      type: RabbitMQ.Client.IBasicPublishBatch
    content.vb: Public Overridable Function CreateBasicPublishBatch As IBasicPublishBatch
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.CreateBasicPublishBatch*
  implements:
  - RabbitMQ.Client.IModel.CreateBasicPublishBatch
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeBind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeBind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  id: ExchangeBind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: ExchangeBind(String, String, String, IDictionary<String, Object>)
  nameWithType: PublisherCallbackChannel.ExchangeBind(String, String, String, IDictionary<String, Object>)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeBind(System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ExchangeBind
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 334
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual void ExchangeBind(string destination, string source, string routingKey, IDictionary<string, object> arguments)
    parameters:
    - id: destination
      type: System.String
    - id: source
      type: System.String
    - id: routingKey
      type: System.String
    - id: arguments
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: Public Overridable Sub ExchangeBind(destination As String, source As String, routingKey As String, arguments As IDictionary(Of String, Object))
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeBind*
  implements:
  - RabbitMQ.Client.IModel.ExchangeBind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  nameWithType.vb: PublisherCallbackChannel.ExchangeBind(String, String, String, IDictionary(Of String, Object))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeBind(System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ExchangeBind(String, String, String, IDictionary(Of String, Object))
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeBindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeBindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  id: ExchangeBindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: ExchangeBindNoWait(String, String, String, IDictionary<String, Object>)
  nameWithType: PublisherCallbackChannel.ExchangeBindNoWait(String, String, String, IDictionary<String, Object>)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeBindNoWait(System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ExchangeBindNoWait
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 337
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual void ExchangeBindNoWait(string destination, string source, string routingKey, IDictionary<string, object> arguments)
    parameters:
    - id: destination
      type: System.String
    - id: source
      type: System.String
    - id: routingKey
      type: System.String
    - id: arguments
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: Public Overridable Sub ExchangeBindNoWait(destination As String, source As String, routingKey As String, arguments As IDictionary(Of String, Object))
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeBindNoWait*
  implements:
  - RabbitMQ.Client.IModel.ExchangeBindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  nameWithType.vb: PublisherCallbackChannel.ExchangeBindNoWait(String, String, String, IDictionary(Of String, Object))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeBindNoWait(System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ExchangeBindNoWait(String, String, String, IDictionary(Of String, Object))
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeDeclare(System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeDeclare(System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  id: ExchangeDeclare(System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: ExchangeDeclare(String, String, Boolean, Boolean, IDictionary<String, Object>)
  nameWithType: PublisherCallbackChannel.ExchangeDeclare(String, String, Boolean, Boolean, IDictionary<String, Object>)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeDeclare(System.String, System.String, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ExchangeDeclare
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 340
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual void ExchangeDeclare(string exchange, string type, bool durable, bool autoDelete, IDictionary<string, object> arguments)
    parameters:
    - id: exchange
      type: System.String
    - id: type
      type: System.String
    - id: durable
      type: System.Boolean
    - id: autoDelete
      type: System.Boolean
    - id: arguments
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: Public Overridable Sub ExchangeDeclare(exchange As String, type As String, durable As Boolean, autoDelete As Boolean, arguments As IDictionary(Of String, Object))
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeDeclare*
  implements:
  - RabbitMQ.Client.IModel.ExchangeDeclare(System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  nameWithType.vb: PublisherCallbackChannel.ExchangeDeclare(String, String, Boolean, Boolean, IDictionary(Of String, Object))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeDeclare(System.String, System.String, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ExchangeDeclare(String, String, Boolean, Boolean, IDictionary(Of String, Object))
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeDeclareNoWait(System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeDeclareNoWait(System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  id: ExchangeDeclareNoWait(System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: ExchangeDeclareNoWait(String, String, Boolean, Boolean, IDictionary<String, Object>)
  nameWithType: PublisherCallbackChannel.ExchangeDeclareNoWait(String, String, Boolean, Boolean, IDictionary<String, Object>)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeDeclareNoWait(System.String, System.String, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ExchangeDeclareNoWait
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 343
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual void ExchangeDeclareNoWait(string exchange, string type, bool durable, bool autoDelete, IDictionary<string, object> arguments)
    parameters:
    - id: exchange
      type: System.String
    - id: type
      type: System.String
    - id: durable
      type: System.Boolean
    - id: autoDelete
      type: System.Boolean
    - id: arguments
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: Public Overridable Sub ExchangeDeclareNoWait(exchange As String, type As String, durable As Boolean, autoDelete As Boolean, arguments As IDictionary(Of String, Object))
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeDeclareNoWait*
  implements:
  - RabbitMQ.Client.IModel.ExchangeDeclareNoWait(System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  nameWithType.vb: PublisherCallbackChannel.ExchangeDeclareNoWait(String, String, Boolean, Boolean, IDictionary(Of String, Object))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeDeclareNoWait(System.String, System.String, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ExchangeDeclareNoWait(String, String, Boolean, Boolean, IDictionary(Of String, Object))
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeDeclarePassive(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeDeclarePassive(System.String)
  id: ExchangeDeclarePassive(System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: ExchangeDeclarePassive(String)
  nameWithType: PublisherCallbackChannel.ExchangeDeclarePassive(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeDeclarePassive(System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ExchangeDeclarePassive
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 346
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual void ExchangeDeclarePassive(string exchange)
    parameters:
    - id: exchange
      type: System.String
    content.vb: Public Overridable Sub ExchangeDeclarePassive(exchange As String)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeDeclarePassive*
  implements:
  - RabbitMQ.Client.IModel.ExchangeDeclarePassive(System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeDelete(System.String,System.Boolean)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeDelete(System.String,System.Boolean)
  id: ExchangeDelete(System.String,System.Boolean)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: ExchangeDelete(String, Boolean)
  nameWithType: PublisherCallbackChannel.ExchangeDelete(String, Boolean)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeDelete(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ExchangeDelete
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 348
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual void ExchangeDelete(string exchange, bool ifUnused)
    parameters:
    - id: exchange
      type: System.String
    - id: ifUnused
      type: System.Boolean
    content.vb: Public Overridable Sub ExchangeDelete(exchange As String, ifUnused As Boolean)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeDelete*
  implements:
  - RabbitMQ.Client.IModel.ExchangeDelete(System.String,System.Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeDeleteNoWait(System.String,System.Boolean)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeDeleteNoWait(System.String,System.Boolean)
  id: ExchangeDeleteNoWait(System.String,System.Boolean)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: ExchangeDeleteNoWait(String, Boolean)
  nameWithType: PublisherCallbackChannel.ExchangeDeleteNoWait(String, Boolean)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeDeleteNoWait(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ExchangeDeleteNoWait
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 350
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual void ExchangeDeleteNoWait(string exchange, bool ifUnused)
    parameters:
    - id: exchange
      type: System.String
    - id: ifUnused
      type: System.Boolean
    content.vb: Public Overridable Sub ExchangeDeleteNoWait(exchange As String, ifUnused As Boolean)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeDeleteNoWait*
  implements:
  - RabbitMQ.Client.IModel.ExchangeDeleteNoWait(System.String,System.Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeUnbind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeUnbind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  id: ExchangeUnbind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: ExchangeUnbind(String, String, String, IDictionary<String, Object>)
  nameWithType: PublisherCallbackChannel.ExchangeUnbind(String, String, String, IDictionary<String, Object>)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeUnbind(System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ExchangeUnbind
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 352
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual void ExchangeUnbind(string destination, string source, string routingKey, IDictionary<string, object> arguments)
    parameters:
    - id: destination
      type: System.String
    - id: source
      type: System.String
    - id: routingKey
      type: System.String
    - id: arguments
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: Public Overridable Sub ExchangeUnbind(destination As String, source As String, routingKey As String, arguments As IDictionary(Of String, Object))
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeUnbind*
  implements:
  - RabbitMQ.Client.IModel.ExchangeUnbind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  nameWithType.vb: PublisherCallbackChannel.ExchangeUnbind(String, String, String, IDictionary(Of String, Object))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeUnbind(System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ExchangeUnbind(String, String, String, IDictionary(Of String, Object))
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeUnbindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeUnbindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  id: ExchangeUnbindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: ExchangeUnbindNoWait(String, String, String, IDictionary<String, Object>)
  nameWithType: PublisherCallbackChannel.ExchangeUnbindNoWait(String, String, String, IDictionary<String, Object>)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeUnbindNoWait(System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ExchangeUnbindNoWait
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 355
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual void ExchangeUnbindNoWait(string destination, string source, string routingKey, IDictionary<string, object> arguments)
    parameters:
    - id: destination
      type: System.String
    - id: source
      type: System.String
    - id: routingKey
      type: System.String
    - id: arguments
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: Public Overridable Sub ExchangeUnbindNoWait(destination As String, source As String, routingKey As String, arguments As IDictionary(Of String, Object))
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeUnbindNoWait*
  implements:
  - RabbitMQ.Client.IModel.ExchangeUnbindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  nameWithType.vb: PublisherCallbackChannel.ExchangeUnbindNoWait(String, String, String, IDictionary(Of String, Object))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeUnbindNoWait(System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ExchangeUnbindNoWait(String, String, String, IDictionary(Of String, Object))
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.MessageCount(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.MessageCount(System.String)
  id: MessageCount(System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: MessageCount(String)
  nameWithType: PublisherCallbackChannel.MessageCount(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.MessageCount(System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MessageCount
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 358
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual uint MessageCount(string queue)
    parameters:
    - id: queue
      type: System.String
    return:
      type: System.UInt32
    content.vb: Public Overridable Function MessageCount(queue As String) As UInteger
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.MessageCount*
  implements:
  - RabbitMQ.Client.IModel.MessageCount(System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueBind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueBind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  id: QueueBind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: QueueBind(String, String, String, IDictionary<String, Object>)
  nameWithType: PublisherCallbackChannel.QueueBind(String, String, String, IDictionary<String, Object>)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueBind(System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: QueueBind
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 360
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual void QueueBind(string queue, string exchange, string routingKey, IDictionary<string, object> arguments)
    parameters:
    - id: queue
      type: System.String
    - id: exchange
      type: System.String
    - id: routingKey
      type: System.String
    - id: arguments
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: Public Overridable Sub QueueBind(queue As String, exchange As String, routingKey As String, arguments As IDictionary(Of String, Object))
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueBind*
  implements:
  - RabbitMQ.Client.IModel.QueueBind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  nameWithType.vb: PublisherCallbackChannel.QueueBind(String, String, String, IDictionary(Of String, Object))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueBind(System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: QueueBind(String, String, String, IDictionary(Of String, Object))
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueBindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueBindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  id: QueueBindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: QueueBindNoWait(String, String, String, IDictionary<String, Object>)
  nameWithType: PublisherCallbackChannel.QueueBindNoWait(String, String, String, IDictionary<String, Object>)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueBindNoWait(System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: QueueBindNoWait
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 363
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual void QueueBindNoWait(string queue, string exchange, string routingKey, IDictionary<string, object> arguments)
    parameters:
    - id: queue
      type: System.String
    - id: exchange
      type: System.String
    - id: routingKey
      type: System.String
    - id: arguments
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: Public Overridable Sub QueueBindNoWait(queue As String, exchange As String, routingKey As String, arguments As IDictionary(Of String, Object))
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueBindNoWait*
  implements:
  - RabbitMQ.Client.IModel.QueueBindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  nameWithType.vb: PublisherCallbackChannel.QueueBindNoWait(String, String, String, IDictionary(Of String, Object))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueBindNoWait(System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: QueueBindNoWait(String, String, String, IDictionary(Of String, Object))
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueDeclare(System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueDeclare(System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  id: QueueDeclare(System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: QueueDeclare(String, Boolean, Boolean, Boolean, IDictionary<String, Object>)
  nameWithType: PublisherCallbackChannel.QueueDeclare(String, Boolean, Boolean, Boolean, IDictionary<String, Object>)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueDeclare(System.String, System.Boolean, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: QueueDeclare
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 366
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual QueueDeclareOk QueueDeclare(string queue, bool durable, bool exclusive, bool autoDelete, IDictionary<string, object> arguments)
    parameters:
    - id: queue
      type: System.String
    - id: durable
      type: System.Boolean
    - id: exclusive
      type: System.Boolean
    - id: autoDelete
      type: System.Boolean
    - id: arguments
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    return:
      type: RabbitMQ.Client.QueueDeclareOk
    content.vb: Public Overridable Function QueueDeclare(queue As String, durable As Boolean, exclusive As Boolean, autoDelete As Boolean, arguments As IDictionary(Of String, Object)) As QueueDeclareOk
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueDeclare*
  implements:
  - RabbitMQ.Client.IModel.QueueDeclare(System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  nameWithType.vb: PublisherCallbackChannel.QueueDeclare(String, Boolean, Boolean, Boolean, IDictionary(Of String, Object))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueDeclare(System.String, System.Boolean, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: QueueDeclare(String, Boolean, Boolean, Boolean, IDictionary(Of String, Object))
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueDeclareNoWait(System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueDeclareNoWait(System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  id: QueueDeclareNoWait(System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: QueueDeclareNoWait(String, Boolean, Boolean, Boolean, IDictionary<String, Object>)
  nameWithType: PublisherCallbackChannel.QueueDeclareNoWait(String, Boolean, Boolean, Boolean, IDictionary<String, Object>)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueDeclareNoWait(System.String, System.Boolean, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: QueueDeclareNoWait
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 369
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual void QueueDeclareNoWait(string queue, bool durable, bool exclusive, bool autoDelete, IDictionary<string, object> arguments)
    parameters:
    - id: queue
      type: System.String
    - id: durable
      type: System.Boolean
    - id: exclusive
      type: System.Boolean
    - id: autoDelete
      type: System.Boolean
    - id: arguments
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: Public Overridable Sub QueueDeclareNoWait(queue As String, durable As Boolean, exclusive As Boolean, autoDelete As Boolean, arguments As IDictionary(Of String, Object))
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueDeclareNoWait*
  implements:
  - RabbitMQ.Client.IModel.QueueDeclareNoWait(System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  nameWithType.vb: PublisherCallbackChannel.QueueDeclareNoWait(String, Boolean, Boolean, Boolean, IDictionary(Of String, Object))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueDeclareNoWait(System.String, System.Boolean, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: QueueDeclareNoWait(String, Boolean, Boolean, Boolean, IDictionary(Of String, Object))
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueDeclarePassive(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueDeclarePassive(System.String)
  id: QueueDeclarePassive(System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: QueueDeclarePassive(String)
  nameWithType: PublisherCallbackChannel.QueueDeclarePassive(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueDeclarePassive(System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: QueueDeclarePassive
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 372
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual QueueDeclareOk QueueDeclarePassive(string queue)
    parameters:
    - id: queue
      type: System.String
    return:
      type: RabbitMQ.Client.QueueDeclareOk
    content.vb: Public Overridable Function QueueDeclarePassive(queue As String) As QueueDeclareOk
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueDeclarePassive*
  implements:
  - RabbitMQ.Client.IModel.QueueDeclarePassive(System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueDelete(System.String,System.Boolean,System.Boolean)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueDelete(System.String,System.Boolean,System.Boolean)
  id: QueueDelete(System.String,System.Boolean,System.Boolean)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: QueueDelete(String, Boolean, Boolean)
  nameWithType: PublisherCallbackChannel.QueueDelete(String, Boolean, Boolean)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueDelete(System.String, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: QueueDelete
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 374
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual uint QueueDelete(string queue, bool ifUnused, bool ifEmpty)
    parameters:
    - id: queue
      type: System.String
    - id: ifUnused
      type: System.Boolean
    - id: ifEmpty
      type: System.Boolean
    return:
      type: System.UInt32
    content.vb: Public Overridable Function QueueDelete(queue As String, ifUnused As Boolean, ifEmpty As Boolean) As UInteger
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueDelete*
  implements:
  - RabbitMQ.Client.IModel.QueueDelete(System.String,System.Boolean,System.Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueDeleteNoWait(System.String,System.Boolean,System.Boolean)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueDeleteNoWait(System.String,System.Boolean,System.Boolean)
  id: QueueDeleteNoWait(System.String,System.Boolean,System.Boolean)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: QueueDeleteNoWait(String, Boolean, Boolean)
  nameWithType: PublisherCallbackChannel.QueueDeleteNoWait(String, Boolean, Boolean)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueDeleteNoWait(System.String, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: QueueDeleteNoWait
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 376
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual void QueueDeleteNoWait(string queue, bool ifUnused, bool ifEmpty)
    parameters:
    - id: queue
      type: System.String
    - id: ifUnused
      type: System.Boolean
    - id: ifEmpty
      type: System.Boolean
    content.vb: Public Overridable Sub QueueDeleteNoWait(queue As String, ifUnused As Boolean, ifEmpty As Boolean)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueDeleteNoWait*
  implements:
  - RabbitMQ.Client.IModel.QueueDeleteNoWait(System.String,System.Boolean,System.Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueuePurge(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueuePurge(System.String)
  id: QueuePurge(System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: QueuePurge(String)
  nameWithType: PublisherCallbackChannel.QueuePurge(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueuePurge(System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: QueuePurge
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 378
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual uint QueuePurge(string queue)
    parameters:
    - id: queue
      type: System.String
    return:
      type: System.UInt32
    content.vb: Public Overridable Function QueuePurge(queue As String) As UInteger
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueuePurge*
  implements:
  - RabbitMQ.Client.IModel.QueuePurge(System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueUnbind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueUnbind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  id: QueueUnbind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: QueueUnbind(String, String, String, IDictionary<String, Object>)
  nameWithType: PublisherCallbackChannel.QueueUnbind(String, String, String, IDictionary<String, Object>)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueUnbind(System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: QueueUnbind
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 380
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual void QueueUnbind(string queue, string exchange, string routingKey, IDictionary<string, object> arguments)
    parameters:
    - id: queue
      type: System.String
    - id: exchange
      type: System.String
    - id: routingKey
      type: System.String
    - id: arguments
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: Public Overridable Sub QueueUnbind(queue As String, exchange As String, routingKey As String, arguments As IDictionary(Of String, Object))
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueUnbind*
  implements:
  - RabbitMQ.Client.IModel.QueueUnbind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  nameWithType.vb: PublisherCallbackChannel.QueueUnbind(String, String, String, IDictionary(Of String, Object))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueUnbind(System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: QueueUnbind(String, String, String, IDictionary(Of String, Object))
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.TxCommit
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.TxCommit
  id: TxCommit
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: TxCommit()
  nameWithType: PublisherCallbackChannel.TxCommit()
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.TxCommit()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: TxCommit
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 383
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual void TxCommit()
    content.vb: Public Overridable Sub TxCommit
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.TxCommit*
  implements:
  - RabbitMQ.Client.IModel.TxCommit
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.TxRollback
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.TxRollback
  id: TxRollback
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: TxRollback()
  nameWithType: PublisherCallbackChannel.TxRollback()
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.TxRollback()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: TxRollback
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 385
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual void TxRollback()
    content.vb: Public Overridable Sub TxRollback
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.TxRollback*
  implements:
  - RabbitMQ.Client.IModel.TxRollback
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.TxSelect
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.TxSelect
  id: TxSelect
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: TxSelect()
  nameWithType: PublisherCallbackChannel.TxSelect()
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.TxSelect()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: TxSelect
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 387
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual void TxSelect()
    content.vb: Public Overridable Sub TxSelect
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.TxSelect*
  implements:
  - RabbitMQ.Client.IModel.TxSelect
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.WaitForConfirms
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.WaitForConfirms
  id: WaitForConfirms
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: WaitForConfirms()
  nameWithType: PublisherCallbackChannel.WaitForConfirms()
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.WaitForConfirms()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: WaitForConfirms
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 389
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual bool WaitForConfirms()
    return:
      type: System.Boolean
    content.vb: Public Overridable Function WaitForConfirms As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.WaitForConfirms*
  implements:
  - RabbitMQ.Client.IModel.WaitForConfirms
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.WaitForConfirms(System.TimeSpan)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.WaitForConfirms(System.TimeSpan)
  id: WaitForConfirms(System.TimeSpan)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: WaitForConfirms(TimeSpan)
  nameWithType: PublisherCallbackChannel.WaitForConfirms(TimeSpan)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.WaitForConfirms(System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: WaitForConfirms
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 391
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual bool WaitForConfirms(TimeSpan timeout)
    parameters:
    - id: timeout
      type: System.TimeSpan
    return:
      type: System.Boolean
    content.vb: Public Overridable Function WaitForConfirms(timeout As TimeSpan) As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.WaitForConfirms*
  implements:
  - RabbitMQ.Client.IModel.WaitForConfirms(System.TimeSpan)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.WaitForConfirms(System.TimeSpan,System.Boolean@)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.WaitForConfirms(System.TimeSpan,System.Boolean@)
  id: WaitForConfirms(System.TimeSpan,System.Boolean@)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: WaitForConfirms(TimeSpan, out Boolean)
  nameWithType: PublisherCallbackChannel.WaitForConfirms(TimeSpan, out Boolean)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.WaitForConfirms(System.TimeSpan, out System.Boolean)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: WaitForConfirms
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 393
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual bool WaitForConfirms(TimeSpan timeout, out bool timedOut)
    parameters:
    - id: timeout
      type: System.TimeSpan
    - id: timedOut
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Public Overridable Function WaitForConfirms(timeout As TimeSpan, ByRef timedOut As Boolean) As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.WaitForConfirms*
  implements:
  - RabbitMQ.Client.IModel.WaitForConfirms(System.TimeSpan,System.Boolean@)
  nameWithType.vb: PublisherCallbackChannel.WaitForConfirms(TimeSpan, ByRef Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.WaitForConfirms(System.TimeSpan, ByRef System.Boolean)
  name.vb: WaitForConfirms(TimeSpan, ByRef Boolean)
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.WaitForConfirmsOrDie
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.WaitForConfirmsOrDie
  id: WaitForConfirmsOrDie
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: WaitForConfirmsOrDie()
  nameWithType: PublisherCallbackChannel.WaitForConfirmsOrDie()
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.WaitForConfirmsOrDie()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: WaitForConfirmsOrDie
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 395
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual void WaitForConfirmsOrDie()
    content.vb: Public Overridable Sub WaitForConfirmsOrDie
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.WaitForConfirmsOrDie*
  implements:
  - RabbitMQ.Client.IModel.WaitForConfirmsOrDie
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.WaitForConfirmsOrDie(System.TimeSpan)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.WaitForConfirmsOrDie(System.TimeSpan)
  id: WaitForConfirmsOrDie(System.TimeSpan)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: WaitForConfirmsOrDie(TimeSpan)
  nameWithType: PublisherCallbackChannel.WaitForConfirmsOrDie(TimeSpan)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.WaitForConfirmsOrDie(System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: WaitForConfirmsOrDie
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 397
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public virtual void WaitForConfirmsOrDie(TimeSpan timeout)
    parameters:
    - id: timeout
      type: System.TimeSpan
    content.vb: Public Overridable Sub WaitForConfirmsOrDie(timeout As TimeSpan)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.WaitForConfirmsOrDie*
  implements:
  - RabbitMQ.Client.IModel.WaitForConfirmsOrDie(System.TimeSpan)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Dispose
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Dispose
  id: Dispose
  parent: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: PublisherCallbackChannel.Dispose()
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Dispose()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Dispose
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/PublisherCallbackChannel.cs
    startLine: 401
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Messaging.RabbitMQ.Connection
  commentId: N:Steeltoe.Messaging.RabbitMQ.Connection
  name: Steeltoe.Messaging.RabbitMQ.Connection
  nameWithType: Steeltoe.Messaging.RabbitMQ.Connection
  fullName: Steeltoe.Messaging.RabbitMQ.Connection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel
  commentId: T:Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel
  parent: Steeltoe.Messaging.RabbitMQ.Connection
  name: IPublisherCallbackChannel
  nameWithType: IPublisherCallbackChannel
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel
- uid: RabbitMQ.Client.IModel
  commentId: T:RabbitMQ.Client.IModel
  parent: RabbitMQ.Client
  isExternal: true
  name: IModel
  nameWithType: IModel
  fullName: RabbitMQ.Client.IModel
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: RabbitMQ.Client
  commentId: N:RabbitMQ.Client
  isExternal: true
  name: RabbitMQ.Client
  nameWithType: RabbitMQ.Client
  fullName: RabbitMQ.Client
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.#ctor*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.#ctor
  name: PublisherCallbackChannel
  nameWithType: PublisherCallbackChannel.PublisherCallbackChannel
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.PublisherCallbackChannel
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Channel*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Channel
  name: Channel
  nameWithType: PublisherCallbackChannel.Channel
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Channel
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.Channel
  commentId: P:Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.Channel
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel
  name: Channel
  nameWithType: IPublisherCallbackChannel.Channel
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.Channel
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Expire*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Expire
  name: Expire
  nameWithType: PublisherCallbackChannel.Expire
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Expire
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.Expire(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener,System.Int64)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.Expire(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener,System.Int64)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel
  isExternal: true
  name: Expire(IPublisherCallbackChannel.IListener, Int64)
  nameWithType: IPublisherCallbackChannel.Expire(IPublisherCallbackChannel.IListener, Int64)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.Expire(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener, System.Int64)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.Expire(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener,System.Int64)
    name: Expire
    nameWithType: IPublisherCallbackChannel.Expire
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.Expire
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener
    name: IPublisherCallbackChannel.IListener
    nameWithType: IPublisherCallbackChannel.IListener
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.Expire(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener,System.Int64)
    name: Expire
    nameWithType: IPublisherCallbackChannel.Expire
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.Expire
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener
    name: IPublisherCallbackChannel.IListener
    nameWithType: IPublisherCallbackChannel.IListener
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener
  commentId: T:Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener
  parent: Steeltoe.Messaging.RabbitMQ.Connection
  name: IPublisherCallbackChannel.IListener
  nameWithType: IPublisherCallbackChannel.IListener
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Collections.Generic.IList{Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm}
  commentId: T:System.Collections.Generic.IList{Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<PendingConfirm>
  nameWithType: IList<PendingConfirm>
  fullName: System.Collections.Generic.IList<Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm>
  nameWithType.vb: IList(Of PendingConfirm)
  fullName.vb: System.Collections.Generic.IList(Of Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm)
  name.vb: IList(Of PendingConfirm)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm
    name: PendingConfirm
    nameWithType: PendingConfirm
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm
    name: PendingConfirm
    nameWithType: PendingConfirm
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.GetPendingConfirmsCount*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.GetPendingConfirmsCount
  name: GetPendingConfirmsCount
  nameWithType: PublisherCallbackChannel.GetPendingConfirmsCount
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.GetPendingConfirmsCount
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.GetPendingConfirmsCount(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.GetPendingConfirmsCount(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel
  name: GetPendingConfirmsCount(IPublisherCallbackChannel.IListener)
  nameWithType: IPublisherCallbackChannel.GetPendingConfirmsCount(IPublisherCallbackChannel.IListener)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.GetPendingConfirmsCount(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.GetPendingConfirmsCount(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener)
    name: GetPendingConfirmsCount
    nameWithType: IPublisherCallbackChannel.GetPendingConfirmsCount
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.GetPendingConfirmsCount
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener
    name: IPublisherCallbackChannel.IListener
    nameWithType: IPublisherCallbackChannel.IListener
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.GetPendingConfirmsCount(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener)
    name: GetPendingConfirmsCount
    nameWithType: IPublisherCallbackChannel.GetPendingConfirmsCount
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.GetPendingConfirmsCount
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener
    name: IPublisherCallbackChannel.IListener
    nameWithType: IPublisherCallbackChannel.IListener
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.GetPendingConfirmsCount
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.GetPendingConfirmsCount
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel
  name: GetPendingConfirmsCount()
  nameWithType: IPublisherCallbackChannel.GetPendingConfirmsCount()
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.GetPendingConfirmsCount()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.GetPendingConfirmsCount
    name: GetPendingConfirmsCount
    nameWithType: IPublisherCallbackChannel.GetPendingConfirmsCount
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.GetPendingConfirmsCount
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.GetPendingConfirmsCount
    name: GetPendingConfirmsCount
    nameWithType: IPublisherCallbackChannel.GetPendingConfirmsCount
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.GetPendingConfirmsCount
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.AddListener*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.AddListener
  name: AddListener
  nameWithType: PublisherCallbackChannel.AddListener
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.AddListener
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.AddListener(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.AddListener(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel
  name: AddListener(IPublisherCallbackChannel.IListener)
  nameWithType: IPublisherCallbackChannel.AddListener(IPublisherCallbackChannel.IListener)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.AddListener(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.AddListener(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener)
    name: AddListener
    nameWithType: IPublisherCallbackChannel.AddListener
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.AddListener
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener
    name: IPublisherCallbackChannel.IListener
    nameWithType: IPublisherCallbackChannel.IListener
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.AddListener(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener)
    name: AddListener
    nameWithType: IPublisherCallbackChannel.AddListener
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.AddListener
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener
    name: IPublisherCallbackChannel.IListener
    nameWithType: IPublisherCallbackChannel.IListener
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.AddPendingConfirm*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.AddPendingConfirm
  name: AddPendingConfirm
  nameWithType: PublisherCallbackChannel.AddPendingConfirm
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.AddPendingConfirm
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.AddPendingConfirm(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener,System.UInt64,Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.AddPendingConfirm(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener,System.UInt64,Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel
  isExternal: true
  name: AddPendingConfirm(IPublisherCallbackChannel.IListener, UInt64, PendingConfirm)
  nameWithType: IPublisherCallbackChannel.AddPendingConfirm(IPublisherCallbackChannel.IListener, UInt64, PendingConfirm)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.AddPendingConfirm(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener, System.UInt64, Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.AddPendingConfirm(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener,System.UInt64,Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm)
    name: AddPendingConfirm
    nameWithType: IPublisherCallbackChannel.AddPendingConfirm
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.AddPendingConfirm
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener
    name: IPublisherCallbackChannel.IListener
    nameWithType: IPublisherCallbackChannel.IListener
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm
    name: PendingConfirm
    nameWithType: PendingConfirm
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.AddPendingConfirm(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener,System.UInt64,Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm)
    name: AddPendingConfirm
    nameWithType: IPublisherCallbackChannel.AddPendingConfirm
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.AddPendingConfirm
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener
    name: IPublisherCallbackChannel.IListener
    nameWithType: IPublisherCallbackChannel.IListener
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm
    name: PendingConfirm
    nameWithType: PendingConfirm
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm
  - name: )
    nameWithType: )
    fullName: )
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm
  commentId: T:Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm
  parent: Steeltoe.Messaging.RabbitMQ.Connection
  name: PendingConfirm
  nameWithType: PendingConfirm
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.SetAfterAckCallback*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.SetAfterAckCallback
  name: SetAfterAckCallback
  nameWithType: PublisherCallbackChannel.SetAfterAckCallback
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.SetAfterAckCallback
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.SetAfterAckCallback(System.Action{RabbitMQ.Client.IModel})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.SetAfterAckCallback(System.Action{RabbitMQ.Client.IModel})
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel
  isExternal: true
  name: SetAfterAckCallback(Action<IModel>)
  nameWithType: IPublisherCallbackChannel.SetAfterAckCallback(Action<IModel>)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.SetAfterAckCallback(System.Action<RabbitMQ.Client.IModel>)
  nameWithType.vb: IPublisherCallbackChannel.SetAfterAckCallback(Action(Of IModel))
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.SetAfterAckCallback(System.Action(Of RabbitMQ.Client.IModel))
  name.vb: SetAfterAckCallback(Action(Of IModel))
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.SetAfterAckCallback(System.Action{RabbitMQ.Client.IModel})
    name: SetAfterAckCallback
    nameWithType: IPublisherCallbackChannel.SetAfterAckCallback
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.SetAfterAckCallback
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.SetAfterAckCallback(System.Action{RabbitMQ.Client.IModel})
    name: SetAfterAckCallback
    nameWithType: IPublisherCallbackChannel.SetAfterAckCallback
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.SetAfterAckCallback
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{RabbitMQ.Client.IModel}
  commentId: T:System.Action{RabbitMQ.Client.IModel}
  parent: System
  definition: System.Action`1
  name: Action<IModel>
  nameWithType: Action<IModel>
  fullName: System.Action<RabbitMQ.Client.IModel>
  nameWithType.vb: Action(Of IModel)
  fullName.vb: System.Action(Of RabbitMQ.Client.IModel)
  name.vb: Action(Of IModel)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ChannelNumber*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ChannelNumber
  name: ChannelNumber
  nameWithType: PublisherCallbackChannel.ChannelNumber
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ChannelNumber
- uid: RabbitMQ.Client.IModel.ChannelNumber
  commentId: P:RabbitMQ.Client.IModel.ChannelNumber
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: ChannelNumber
  nameWithType: IModel.ChannelNumber
  fullName: RabbitMQ.Client.IModel.ChannelNumber
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.CloseReason*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.CloseReason
  name: CloseReason
  nameWithType: PublisherCallbackChannel.CloseReason
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.CloseReason
- uid: RabbitMQ.Client.IModel.CloseReason
  commentId: P:RabbitMQ.Client.IModel.CloseReason
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: CloseReason
  nameWithType: IModel.CloseReason
  fullName: RabbitMQ.Client.IModel.CloseReason
- uid: RabbitMQ.Client.ShutdownEventArgs
  commentId: T:RabbitMQ.Client.ShutdownEventArgs
  parent: RabbitMQ.Client
  isExternal: true
  name: ShutdownEventArgs
  nameWithType: ShutdownEventArgs
  fullName: RabbitMQ.Client.ShutdownEventArgs
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.DefaultConsumer*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.DefaultConsumer
  name: DefaultConsumer
  nameWithType: PublisherCallbackChannel.DefaultConsumer
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.DefaultConsumer
- uid: RabbitMQ.Client.IModel.DefaultConsumer
  commentId: P:RabbitMQ.Client.IModel.DefaultConsumer
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: DefaultConsumer
  nameWithType: IModel.DefaultConsumer
  fullName: RabbitMQ.Client.IModel.DefaultConsumer
- uid: RabbitMQ.Client.IBasicConsumer
  commentId: T:RabbitMQ.Client.IBasicConsumer
  parent: RabbitMQ.Client
  isExternal: true
  name: IBasicConsumer
  nameWithType: IBasicConsumer
  fullName: RabbitMQ.Client.IBasicConsumer
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.IsClosed*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.IsClosed
  name: IsClosed
  nameWithType: PublisherCallbackChannel.IsClosed
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.IsClosed
- uid: RabbitMQ.Client.IModel.IsClosed
  commentId: P:RabbitMQ.Client.IModel.IsClosed
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: IsClosed
  nameWithType: IModel.IsClosed
  fullName: RabbitMQ.Client.IModel.IsClosed
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.IsOpen*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.IsOpen
  name: IsOpen
  nameWithType: PublisherCallbackChannel.IsOpen
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.IsOpen
- uid: RabbitMQ.Client.IModel.IsOpen
  commentId: P:RabbitMQ.Client.IModel.IsOpen
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: IsOpen
  nameWithType: IModel.IsOpen
  fullName: RabbitMQ.Client.IModel.IsOpen
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.NextPublishSeqNo*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.NextPublishSeqNo
  name: NextPublishSeqNo
  nameWithType: PublisherCallbackChannel.NextPublishSeqNo
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.NextPublishSeqNo
- uid: RabbitMQ.Client.IModel.NextPublishSeqNo
  commentId: P:RabbitMQ.Client.IModel.NextPublishSeqNo
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: NextPublishSeqNo
  nameWithType: IModel.NextPublishSeqNo
  fullName: RabbitMQ.Client.IModel.NextPublishSeqNo
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ContinuationTimeout*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ContinuationTimeout
  name: ContinuationTimeout
  nameWithType: PublisherCallbackChannel.ContinuationTimeout
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ContinuationTimeout
- uid: RabbitMQ.Client.IModel.ContinuationTimeout
  commentId: P:RabbitMQ.Client.IModel.ContinuationTimeout
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: ContinuationTimeout
  nameWithType: IModel.ContinuationTimeout
  fullName: RabbitMQ.Client.IModel.ContinuationTimeout
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: RabbitMQ.Client.IModel.BasicAcks
  commentId: E:RabbitMQ.Client.IModel.BasicAcks
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: BasicAcks
  nameWithType: IModel.BasicAcks
  fullName: RabbitMQ.Client.IModel.BasicAcks
- uid: System.EventHandler{RabbitMQ.Client.Events.BasicAckEventArgs}
  commentId: T:System.EventHandler{RabbitMQ.Client.Events.BasicAckEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<BasicAckEventArgs>
  nameWithType: EventHandler<BasicAckEventArgs>
  fullName: System.EventHandler<RabbitMQ.Client.Events.BasicAckEventArgs>
  nameWithType.vb: EventHandler(Of BasicAckEventArgs)
  fullName.vb: System.EventHandler(Of RabbitMQ.Client.Events.BasicAckEventArgs)
  name.vb: EventHandler(Of BasicAckEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RabbitMQ.Client.Events.BasicAckEventArgs
    name: BasicAckEventArgs
    nameWithType: BasicAckEventArgs
    fullName: RabbitMQ.Client.Events.BasicAckEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RabbitMQ.Client.Events.BasicAckEventArgs
    name: BasicAckEventArgs
    nameWithType: BasicAckEventArgs
    fullName: RabbitMQ.Client.Events.BasicAckEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.BasicNacks
  commentId: E:RabbitMQ.Client.IModel.BasicNacks
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: BasicNacks
  nameWithType: IModel.BasicNacks
  fullName: RabbitMQ.Client.IModel.BasicNacks
- uid: System.EventHandler{RabbitMQ.Client.Events.BasicNackEventArgs}
  commentId: T:System.EventHandler{RabbitMQ.Client.Events.BasicNackEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<BasicNackEventArgs>
  nameWithType: EventHandler<BasicNackEventArgs>
  fullName: System.EventHandler<RabbitMQ.Client.Events.BasicNackEventArgs>
  nameWithType.vb: EventHandler(Of BasicNackEventArgs)
  fullName.vb: System.EventHandler(Of RabbitMQ.Client.Events.BasicNackEventArgs)
  name.vb: EventHandler(Of BasicNackEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RabbitMQ.Client.Events.BasicNackEventArgs
    name: BasicNackEventArgs
    nameWithType: BasicNackEventArgs
    fullName: RabbitMQ.Client.Events.BasicNackEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RabbitMQ.Client.Events.BasicNackEventArgs
    name: BasicNackEventArgs
    nameWithType: BasicNackEventArgs
    fullName: RabbitMQ.Client.Events.BasicNackEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.BasicRecoverOk
  commentId: E:RabbitMQ.Client.IModel.BasicRecoverOk
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: BasicRecoverOk
  nameWithType: IModel.BasicRecoverOk
  fullName: RabbitMQ.Client.IModel.BasicRecoverOk
- uid: System.EventHandler{System.EventArgs}
  commentId: T:System.EventHandler{System.EventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<EventArgs>
  nameWithType: EventHandler<EventArgs>
  fullName: System.EventHandler<System.EventArgs>
  nameWithType.vb: EventHandler(Of EventArgs)
  fullName.vb: System.EventHandler(Of System.EventArgs)
  name.vb: EventHandler(Of EventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.BasicReturn
  commentId: E:RabbitMQ.Client.IModel.BasicReturn
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: BasicReturn
  nameWithType: IModel.BasicReturn
  fullName: RabbitMQ.Client.IModel.BasicReturn
- uid: System.EventHandler{RabbitMQ.Client.Events.BasicReturnEventArgs}
  commentId: T:System.EventHandler{RabbitMQ.Client.Events.BasicReturnEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<BasicReturnEventArgs>
  nameWithType: EventHandler<BasicReturnEventArgs>
  fullName: System.EventHandler<RabbitMQ.Client.Events.BasicReturnEventArgs>
  nameWithType.vb: EventHandler(Of BasicReturnEventArgs)
  fullName.vb: System.EventHandler(Of RabbitMQ.Client.Events.BasicReturnEventArgs)
  name.vb: EventHandler(Of BasicReturnEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RabbitMQ.Client.Events.BasicReturnEventArgs
    name: BasicReturnEventArgs
    nameWithType: BasicReturnEventArgs
    fullName: RabbitMQ.Client.Events.BasicReturnEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RabbitMQ.Client.Events.BasicReturnEventArgs
    name: BasicReturnEventArgs
    nameWithType: BasicReturnEventArgs
    fullName: RabbitMQ.Client.Events.BasicReturnEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.CallbackException
  commentId: E:RabbitMQ.Client.IModel.CallbackException
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: CallbackException
  nameWithType: IModel.CallbackException
  fullName: RabbitMQ.Client.IModel.CallbackException
- uid: System.EventHandler{RabbitMQ.Client.Events.CallbackExceptionEventArgs}
  commentId: T:System.EventHandler{RabbitMQ.Client.Events.CallbackExceptionEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<CallbackExceptionEventArgs>
  nameWithType: EventHandler<CallbackExceptionEventArgs>
  fullName: System.EventHandler<RabbitMQ.Client.Events.CallbackExceptionEventArgs>
  nameWithType.vb: EventHandler(Of CallbackExceptionEventArgs)
  fullName.vb: System.EventHandler(Of RabbitMQ.Client.Events.CallbackExceptionEventArgs)
  name.vb: EventHandler(Of CallbackExceptionEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RabbitMQ.Client.Events.CallbackExceptionEventArgs
    name: CallbackExceptionEventArgs
    nameWithType: CallbackExceptionEventArgs
    fullName: RabbitMQ.Client.Events.CallbackExceptionEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RabbitMQ.Client.Events.CallbackExceptionEventArgs
    name: CallbackExceptionEventArgs
    nameWithType: CallbackExceptionEventArgs
    fullName: RabbitMQ.Client.Events.CallbackExceptionEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.FlowControl
  commentId: E:RabbitMQ.Client.IModel.FlowControl
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: FlowControl
  nameWithType: IModel.FlowControl
  fullName: RabbitMQ.Client.IModel.FlowControl
- uid: System.EventHandler{RabbitMQ.Client.Events.FlowControlEventArgs}
  commentId: T:System.EventHandler{RabbitMQ.Client.Events.FlowControlEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<FlowControlEventArgs>
  nameWithType: EventHandler<FlowControlEventArgs>
  fullName: System.EventHandler<RabbitMQ.Client.Events.FlowControlEventArgs>
  nameWithType.vb: EventHandler(Of FlowControlEventArgs)
  fullName.vb: System.EventHandler(Of RabbitMQ.Client.Events.FlowControlEventArgs)
  name.vb: EventHandler(Of FlowControlEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RabbitMQ.Client.Events.FlowControlEventArgs
    name: FlowControlEventArgs
    nameWithType: FlowControlEventArgs
    fullName: RabbitMQ.Client.Events.FlowControlEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RabbitMQ.Client.Events.FlowControlEventArgs
    name: FlowControlEventArgs
    nameWithType: FlowControlEventArgs
    fullName: RabbitMQ.Client.Events.FlowControlEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.ModelShutdown
  commentId: E:RabbitMQ.Client.IModel.ModelShutdown
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: ModelShutdown
  nameWithType: IModel.ModelShutdown
  fullName: RabbitMQ.Client.IModel.ModelShutdown
- uid: System.EventHandler{RabbitMQ.Client.ShutdownEventArgs}
  commentId: T:System.EventHandler{RabbitMQ.Client.ShutdownEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ShutdownEventArgs>
  nameWithType: EventHandler<ShutdownEventArgs>
  fullName: System.EventHandler<RabbitMQ.Client.ShutdownEventArgs>
  nameWithType.vb: EventHandler(Of ShutdownEventArgs)
  fullName.vb: System.EventHandler(Of RabbitMQ.Client.ShutdownEventArgs)
  name.vb: EventHandler(Of ShutdownEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RabbitMQ.Client.ShutdownEventArgs
    name: ShutdownEventArgs
    nameWithType: ShutdownEventArgs
    fullName: RabbitMQ.Client.ShutdownEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RabbitMQ.Client.ShutdownEventArgs
    name: ShutdownEventArgs
    nameWithType: ShutdownEventArgs
    fullName: RabbitMQ.Client.ShutdownEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Abort*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Abort
  name: Abort
  nameWithType: PublisherCallbackChannel.Abort
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Abort
- uid: RabbitMQ.Client.IModel.Abort
  commentId: M:RabbitMQ.Client.IModel.Abort
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: Abort()
  nameWithType: IModel.Abort()
  fullName: RabbitMQ.Client.IModel.Abort()
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.Abort
    name: Abort
    nameWithType: IModel.Abort
    fullName: RabbitMQ.Client.IModel.Abort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.Abort
    name: Abort
    nameWithType: IModel.Abort
    fullName: RabbitMQ.Client.IModel.Abort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.Abort(System.UInt16,System.String)
  commentId: M:RabbitMQ.Client.IModel.Abort(System.UInt16,System.String)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: Abort(UInt16, String)
  nameWithType: IModel.Abort(UInt16, String)
  fullName: RabbitMQ.Client.IModel.Abort(System.UInt16, System.String)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.Abort(System.UInt16,System.String)
    name: Abort
    nameWithType: IModel.Abort
    fullName: RabbitMQ.Client.IModel.Abort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.Abort(System.UInt16,System.String)
    name: Abort
    nameWithType: IModel.Abort
    fullName: RabbitMQ.Client.IModel.Abort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicAck*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicAck
  name: BasicAck
  nameWithType: PublisherCallbackChannel.BasicAck
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicAck
- uid: RabbitMQ.Client.IModel.BasicAck(System.UInt64,System.Boolean)
  commentId: M:RabbitMQ.Client.IModel.BasicAck(System.UInt64,System.Boolean)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: BasicAck(UInt64, Boolean)
  nameWithType: IModel.BasicAck(UInt64, Boolean)
  fullName: RabbitMQ.Client.IModel.BasicAck(System.UInt64, System.Boolean)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.BasicAck(System.UInt64,System.Boolean)
    name: BasicAck
    nameWithType: IModel.BasicAck
    fullName: RabbitMQ.Client.IModel.BasicAck
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.BasicAck(System.UInt64,System.Boolean)
    name: BasicAck
    nameWithType: IModel.BasicAck
    fullName: RabbitMQ.Client.IModel.BasicAck
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicCancel*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicCancel
  name: BasicCancel
  nameWithType: PublisherCallbackChannel.BasicCancel
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicCancel
- uid: RabbitMQ.Client.IModel.BasicCancel(System.String)
  commentId: M:RabbitMQ.Client.IModel.BasicCancel(System.String)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: BasicCancel(String)
  nameWithType: IModel.BasicCancel(String)
  fullName: RabbitMQ.Client.IModel.BasicCancel(System.String)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.BasicCancel(System.String)
    name: BasicCancel
    nameWithType: IModel.BasicCancel
    fullName: RabbitMQ.Client.IModel.BasicCancel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.BasicCancel(System.String)
    name: BasicCancel
    nameWithType: IModel.BasicCancel
    fullName: RabbitMQ.Client.IModel.BasicCancel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicConsume*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicConsume
  name: BasicConsume
  nameWithType: PublisherCallbackChannel.BasicConsume
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicConsume
- uid: RabbitMQ.Client.IModel.BasicConsume(System.String,System.Boolean,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object},RabbitMQ.Client.IBasicConsumer)
  commentId: M:RabbitMQ.Client.IModel.BasicConsume(System.String,System.Boolean,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object},RabbitMQ.Client.IBasicConsumer)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: BasicConsume(String, Boolean, String, Boolean, Boolean, IDictionary<String, Object>, IBasicConsumer)
  nameWithType: IModel.BasicConsume(String, Boolean, String, Boolean, Boolean, IDictionary<String, Object>, IBasicConsumer)
  fullName: RabbitMQ.Client.IModel.BasicConsume(System.String, System.Boolean, System.String, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary<System.String, System.Object>, RabbitMQ.Client.IBasicConsumer)
  nameWithType.vb: IModel.BasicConsume(String, Boolean, String, Boolean, Boolean, IDictionary(Of String, Object), IBasicConsumer)
  fullName.vb: RabbitMQ.Client.IModel.BasicConsume(System.String, System.Boolean, System.String, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary(Of System.String, System.Object), RabbitMQ.Client.IBasicConsumer)
  name.vb: BasicConsume(String, Boolean, String, Boolean, Boolean, IDictionary(Of String, Object), IBasicConsumer)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.BasicConsume(System.String,System.Boolean,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object},RabbitMQ.Client.IBasicConsumer)
    name: BasicConsume
    nameWithType: IModel.BasicConsume
    fullName: RabbitMQ.Client.IModel.BasicConsume
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RabbitMQ.Client.IBasicConsumer
    name: IBasicConsumer
    nameWithType: IBasicConsumer
    fullName: RabbitMQ.Client.IBasicConsumer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.BasicConsume(System.String,System.Boolean,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object},RabbitMQ.Client.IBasicConsumer)
    name: BasicConsume
    nameWithType: IModel.BasicConsume
    fullName: RabbitMQ.Client.IModel.BasicConsume
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RabbitMQ.Client.IBasicConsumer
    name: IBasicConsumer
    nameWithType: IBasicConsumer
    fullName: RabbitMQ.Client.IBasicConsumer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicGet*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicGet
  name: BasicGet
  nameWithType: PublisherCallbackChannel.BasicGet
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicGet
- uid: RabbitMQ.Client.IModel.BasicGet(System.String,System.Boolean)
  commentId: M:RabbitMQ.Client.IModel.BasicGet(System.String,System.Boolean)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: BasicGet(String, Boolean)
  nameWithType: IModel.BasicGet(String, Boolean)
  fullName: RabbitMQ.Client.IModel.BasicGet(System.String, System.Boolean)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.BasicGet(System.String,System.Boolean)
    name: BasicGet
    nameWithType: IModel.BasicGet
    fullName: RabbitMQ.Client.IModel.BasicGet
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.BasicGet(System.String,System.Boolean)
    name: BasicGet
    nameWithType: IModel.BasicGet
    fullName: RabbitMQ.Client.IModel.BasicGet
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.BasicGetResult
  commentId: T:RabbitMQ.Client.BasicGetResult
  parent: RabbitMQ.Client
  isExternal: true
  name: BasicGetResult
  nameWithType: BasicGetResult
  fullName: RabbitMQ.Client.BasicGetResult
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicNack*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicNack
  name: BasicNack
  nameWithType: PublisherCallbackChannel.BasicNack
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicNack
- uid: RabbitMQ.Client.IModel.BasicNack(System.UInt64,System.Boolean,System.Boolean)
  commentId: M:RabbitMQ.Client.IModel.BasicNack(System.UInt64,System.Boolean,System.Boolean)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: BasicNack(UInt64, Boolean, Boolean)
  nameWithType: IModel.BasicNack(UInt64, Boolean, Boolean)
  fullName: RabbitMQ.Client.IModel.BasicNack(System.UInt64, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.BasicNack(System.UInt64,System.Boolean,System.Boolean)
    name: BasicNack
    nameWithType: IModel.BasicNack
    fullName: RabbitMQ.Client.IModel.BasicNack
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.BasicNack(System.UInt64,System.Boolean,System.Boolean)
    name: BasicNack
    nameWithType: IModel.BasicNack
    fullName: RabbitMQ.Client.IModel.BasicNack
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicPublish*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicPublish
  name: BasicPublish
  nameWithType: PublisherCallbackChannel.BasicPublish
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicPublish
- uid: RabbitMQ.Client.IModel.BasicPublish(System.String,System.String,System.Boolean,RabbitMQ.Client.IBasicProperties,System.Byte[])
  commentId: M:RabbitMQ.Client.IModel.BasicPublish(System.String,System.String,System.Boolean,RabbitMQ.Client.IBasicProperties,System.Byte[])
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: BasicPublish(String, String, Boolean, IBasicProperties, Byte[])
  nameWithType: IModel.BasicPublish(String, String, Boolean, IBasicProperties, Byte[])
  fullName: RabbitMQ.Client.IModel.BasicPublish(System.String, System.String, System.Boolean, RabbitMQ.Client.IBasicProperties, System.Byte[])
  nameWithType.vb: IModel.BasicPublish(String, String, Boolean, IBasicProperties, Byte())
  fullName.vb: RabbitMQ.Client.IModel.BasicPublish(System.String, System.String, System.Boolean, RabbitMQ.Client.IBasicProperties, System.Byte())
  name.vb: BasicPublish(String, String, Boolean, IBasicProperties, Byte())
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.BasicPublish(System.String,System.String,System.Boolean,RabbitMQ.Client.IBasicProperties,System.Byte[])
    name: BasicPublish
    nameWithType: IModel.BasicPublish
    fullName: RabbitMQ.Client.IModel.BasicPublish
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RabbitMQ.Client.IBasicProperties
    name: IBasicProperties
    nameWithType: IBasicProperties
    fullName: RabbitMQ.Client.IBasicProperties
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.BasicPublish(System.String,System.String,System.Boolean,RabbitMQ.Client.IBasicProperties,System.Byte[])
    name: BasicPublish
    nameWithType: IModel.BasicPublish
    fullName: RabbitMQ.Client.IModel.BasicPublish
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RabbitMQ.Client.IBasicProperties
    name: IBasicProperties
    nameWithType: IBasicProperties
    fullName: RabbitMQ.Client.IBasicProperties
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IBasicProperties
  commentId: T:RabbitMQ.Client.IBasicProperties
  parent: RabbitMQ.Client
  isExternal: true
  name: IBasicProperties
  nameWithType: IBasicProperties
  fullName: RabbitMQ.Client.IBasicProperties
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicQos*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicQos
  name: BasicQos
  nameWithType: PublisherCallbackChannel.BasicQos
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicQos
- uid: RabbitMQ.Client.IModel.BasicQos(System.UInt32,System.UInt16,System.Boolean)
  commentId: M:RabbitMQ.Client.IModel.BasicQos(System.UInt32,System.UInt16,System.Boolean)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: BasicQos(UInt32, UInt16, Boolean)
  nameWithType: IModel.BasicQos(UInt32, UInt16, Boolean)
  fullName: RabbitMQ.Client.IModel.BasicQos(System.UInt32, System.UInt16, System.Boolean)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.BasicQos(System.UInt32,System.UInt16,System.Boolean)
    name: BasicQos
    nameWithType: IModel.BasicQos
    fullName: RabbitMQ.Client.IModel.BasicQos
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.BasicQos(System.UInt32,System.UInt16,System.Boolean)
    name: BasicQos
    nameWithType: IModel.BasicQos
    fullName: RabbitMQ.Client.IModel.BasicQos
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicRecover*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicRecover
  name: BasicRecover
  nameWithType: PublisherCallbackChannel.BasicRecover
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicRecover
- uid: RabbitMQ.Client.IModel.BasicRecover(System.Boolean)
  commentId: M:RabbitMQ.Client.IModel.BasicRecover(System.Boolean)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: BasicRecover(Boolean)
  nameWithType: IModel.BasicRecover(Boolean)
  fullName: RabbitMQ.Client.IModel.BasicRecover(System.Boolean)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.BasicRecover(System.Boolean)
    name: BasicRecover
    nameWithType: IModel.BasicRecover
    fullName: RabbitMQ.Client.IModel.BasicRecover
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.BasicRecover(System.Boolean)
    name: BasicRecover
    nameWithType: IModel.BasicRecover
    fullName: RabbitMQ.Client.IModel.BasicRecover
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicRecoverAsync*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicRecoverAsync
  name: BasicRecoverAsync
  nameWithType: PublisherCallbackChannel.BasicRecoverAsync
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicRecoverAsync
- uid: RabbitMQ.Client.IModel.BasicRecoverAsync(System.Boolean)
  commentId: M:RabbitMQ.Client.IModel.BasicRecoverAsync(System.Boolean)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: BasicRecoverAsync(Boolean)
  nameWithType: IModel.BasicRecoverAsync(Boolean)
  fullName: RabbitMQ.Client.IModel.BasicRecoverAsync(System.Boolean)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.BasicRecoverAsync(System.Boolean)
    name: BasicRecoverAsync
    nameWithType: IModel.BasicRecoverAsync
    fullName: RabbitMQ.Client.IModel.BasicRecoverAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.BasicRecoverAsync(System.Boolean)
    name: BasicRecoverAsync
    nameWithType: IModel.BasicRecoverAsync
    fullName: RabbitMQ.Client.IModel.BasicRecoverAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicReject*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicReject
  name: BasicReject
  nameWithType: PublisherCallbackChannel.BasicReject
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.BasicReject
- uid: RabbitMQ.Client.IModel.BasicReject(System.UInt64,System.Boolean)
  commentId: M:RabbitMQ.Client.IModel.BasicReject(System.UInt64,System.Boolean)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: BasicReject(UInt64, Boolean)
  nameWithType: IModel.BasicReject(UInt64, Boolean)
  fullName: RabbitMQ.Client.IModel.BasicReject(System.UInt64, System.Boolean)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.BasicReject(System.UInt64,System.Boolean)
    name: BasicReject
    nameWithType: IModel.BasicReject
    fullName: RabbitMQ.Client.IModel.BasicReject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.BasicReject(System.UInt64,System.Boolean)
    name: BasicReject
    nameWithType: IModel.BasicReject
    fullName: RabbitMQ.Client.IModel.BasicReject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Close*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Close
  name: Close
  nameWithType: PublisherCallbackChannel.Close
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Close
- uid: RabbitMQ.Client.IModel.Close
  commentId: M:RabbitMQ.Client.IModel.Close
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: Close()
  nameWithType: IModel.Close()
  fullName: RabbitMQ.Client.IModel.Close()
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.Close
    name: Close
    nameWithType: IModel.Close
    fullName: RabbitMQ.Client.IModel.Close
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.Close
    name: Close
    nameWithType: IModel.Close
    fullName: RabbitMQ.Client.IModel.Close
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.Close(System.UInt16,System.String)
  commentId: M:RabbitMQ.Client.IModel.Close(System.UInt16,System.String)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: Close(UInt16, String)
  nameWithType: IModel.Close(UInt16, String)
  fullName: RabbitMQ.Client.IModel.Close(System.UInt16, System.String)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.Close(System.UInt16,System.String)
    name: Close
    nameWithType: IModel.Close
    fullName: RabbitMQ.Client.IModel.Close
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.Close(System.UInt16,System.String)
    name: Close
    nameWithType: IModel.Close
    fullName: RabbitMQ.Client.IModel.Close
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ConfirmSelect*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ConfirmSelect
  name: ConfirmSelect
  nameWithType: PublisherCallbackChannel.ConfirmSelect
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ConfirmSelect
- uid: RabbitMQ.Client.IModel.ConfirmSelect
  commentId: M:RabbitMQ.Client.IModel.ConfirmSelect
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: ConfirmSelect()
  nameWithType: IModel.ConfirmSelect()
  fullName: RabbitMQ.Client.IModel.ConfirmSelect()
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.ConfirmSelect
    name: ConfirmSelect
    nameWithType: IModel.ConfirmSelect
    fullName: RabbitMQ.Client.IModel.ConfirmSelect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.ConfirmSelect
    name: ConfirmSelect
    nameWithType: IModel.ConfirmSelect
    fullName: RabbitMQ.Client.IModel.ConfirmSelect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ConsumerCount*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ConsumerCount
  name: ConsumerCount
  nameWithType: PublisherCallbackChannel.ConsumerCount
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ConsumerCount
- uid: RabbitMQ.Client.IModel.ConsumerCount(System.String)
  commentId: M:RabbitMQ.Client.IModel.ConsumerCount(System.String)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: ConsumerCount(String)
  nameWithType: IModel.ConsumerCount(String)
  fullName: RabbitMQ.Client.IModel.ConsumerCount(System.String)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.ConsumerCount(System.String)
    name: ConsumerCount
    nameWithType: IModel.ConsumerCount
    fullName: RabbitMQ.Client.IModel.ConsumerCount
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.ConsumerCount(System.String)
    name: ConsumerCount
    nameWithType: IModel.ConsumerCount
    fullName: RabbitMQ.Client.IModel.ConsumerCount
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.CreateBasicProperties*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.CreateBasicProperties
  name: CreateBasicProperties
  nameWithType: PublisherCallbackChannel.CreateBasicProperties
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.CreateBasicProperties
- uid: RabbitMQ.Client.IModel.CreateBasicProperties
  commentId: M:RabbitMQ.Client.IModel.CreateBasicProperties
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: CreateBasicProperties()
  nameWithType: IModel.CreateBasicProperties()
  fullName: RabbitMQ.Client.IModel.CreateBasicProperties()
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.CreateBasicProperties
    name: CreateBasicProperties
    nameWithType: IModel.CreateBasicProperties
    fullName: RabbitMQ.Client.IModel.CreateBasicProperties
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.CreateBasicProperties
    name: CreateBasicProperties
    nameWithType: IModel.CreateBasicProperties
    fullName: RabbitMQ.Client.IModel.CreateBasicProperties
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.CreateBasicPublishBatch*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.CreateBasicPublishBatch
  name: CreateBasicPublishBatch
  nameWithType: PublisherCallbackChannel.CreateBasicPublishBatch
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.CreateBasicPublishBatch
- uid: RabbitMQ.Client.IModel.CreateBasicPublishBatch
  commentId: M:RabbitMQ.Client.IModel.CreateBasicPublishBatch
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: CreateBasicPublishBatch()
  nameWithType: IModel.CreateBasicPublishBatch()
  fullName: RabbitMQ.Client.IModel.CreateBasicPublishBatch()
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.CreateBasicPublishBatch
    name: CreateBasicPublishBatch
    nameWithType: IModel.CreateBasicPublishBatch
    fullName: RabbitMQ.Client.IModel.CreateBasicPublishBatch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.CreateBasicPublishBatch
    name: CreateBasicPublishBatch
    nameWithType: IModel.CreateBasicPublishBatch
    fullName: RabbitMQ.Client.IModel.CreateBasicPublishBatch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IBasicPublishBatch
  commentId: T:RabbitMQ.Client.IBasicPublishBatch
  parent: RabbitMQ.Client
  isExternal: true
  name: IBasicPublishBatch
  nameWithType: IBasicPublishBatch
  fullName: RabbitMQ.Client.IBasicPublishBatch
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeBind*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeBind
  name: ExchangeBind
  nameWithType: PublisherCallbackChannel.ExchangeBind
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeBind
- uid: RabbitMQ.Client.IModel.ExchangeBind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:RabbitMQ.Client.IModel.ExchangeBind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: ExchangeBind(String, String, String, IDictionary<String, Object>)
  nameWithType: IModel.ExchangeBind(String, String, String, IDictionary<String, Object>)
  fullName: RabbitMQ.Client.IModel.ExchangeBind(System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: IModel.ExchangeBind(String, String, String, IDictionary(Of String, Object))
  fullName.vb: RabbitMQ.Client.IModel.ExchangeBind(System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ExchangeBind(String, String, String, IDictionary(Of String, Object))
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.ExchangeBind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ExchangeBind
    nameWithType: IModel.ExchangeBind
    fullName: RabbitMQ.Client.IModel.ExchangeBind
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.ExchangeBind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ExchangeBind
    nameWithType: IModel.ExchangeBind
    fullName: RabbitMQ.Client.IModel.ExchangeBind
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeBindNoWait*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeBindNoWait
  name: ExchangeBindNoWait
  nameWithType: PublisherCallbackChannel.ExchangeBindNoWait
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeBindNoWait
- uid: RabbitMQ.Client.IModel.ExchangeBindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:RabbitMQ.Client.IModel.ExchangeBindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: ExchangeBindNoWait(String, String, String, IDictionary<String, Object>)
  nameWithType: IModel.ExchangeBindNoWait(String, String, String, IDictionary<String, Object>)
  fullName: RabbitMQ.Client.IModel.ExchangeBindNoWait(System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: IModel.ExchangeBindNoWait(String, String, String, IDictionary(Of String, Object))
  fullName.vb: RabbitMQ.Client.IModel.ExchangeBindNoWait(System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ExchangeBindNoWait(String, String, String, IDictionary(Of String, Object))
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.ExchangeBindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ExchangeBindNoWait
    nameWithType: IModel.ExchangeBindNoWait
    fullName: RabbitMQ.Client.IModel.ExchangeBindNoWait
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.ExchangeBindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ExchangeBindNoWait
    nameWithType: IModel.ExchangeBindNoWait
    fullName: RabbitMQ.Client.IModel.ExchangeBindNoWait
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeDeclare*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeDeclare
  name: ExchangeDeclare
  nameWithType: PublisherCallbackChannel.ExchangeDeclare
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeDeclare
- uid: RabbitMQ.Client.IModel.ExchangeDeclare(System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:RabbitMQ.Client.IModel.ExchangeDeclare(System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: ExchangeDeclare(String, String, Boolean, Boolean, IDictionary<String, Object>)
  nameWithType: IModel.ExchangeDeclare(String, String, Boolean, Boolean, IDictionary<String, Object>)
  fullName: RabbitMQ.Client.IModel.ExchangeDeclare(System.String, System.String, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: IModel.ExchangeDeclare(String, String, Boolean, Boolean, IDictionary(Of String, Object))
  fullName.vb: RabbitMQ.Client.IModel.ExchangeDeclare(System.String, System.String, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ExchangeDeclare(String, String, Boolean, Boolean, IDictionary(Of String, Object))
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.ExchangeDeclare(System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ExchangeDeclare
    nameWithType: IModel.ExchangeDeclare
    fullName: RabbitMQ.Client.IModel.ExchangeDeclare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.ExchangeDeclare(System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ExchangeDeclare
    nameWithType: IModel.ExchangeDeclare
    fullName: RabbitMQ.Client.IModel.ExchangeDeclare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeDeclareNoWait*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeDeclareNoWait
  name: ExchangeDeclareNoWait
  nameWithType: PublisherCallbackChannel.ExchangeDeclareNoWait
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeDeclareNoWait
- uid: RabbitMQ.Client.IModel.ExchangeDeclareNoWait(System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:RabbitMQ.Client.IModel.ExchangeDeclareNoWait(System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: ExchangeDeclareNoWait(String, String, Boolean, Boolean, IDictionary<String, Object>)
  nameWithType: IModel.ExchangeDeclareNoWait(String, String, Boolean, Boolean, IDictionary<String, Object>)
  fullName: RabbitMQ.Client.IModel.ExchangeDeclareNoWait(System.String, System.String, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: IModel.ExchangeDeclareNoWait(String, String, Boolean, Boolean, IDictionary(Of String, Object))
  fullName.vb: RabbitMQ.Client.IModel.ExchangeDeclareNoWait(System.String, System.String, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ExchangeDeclareNoWait(String, String, Boolean, Boolean, IDictionary(Of String, Object))
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.ExchangeDeclareNoWait(System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ExchangeDeclareNoWait
    nameWithType: IModel.ExchangeDeclareNoWait
    fullName: RabbitMQ.Client.IModel.ExchangeDeclareNoWait
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.ExchangeDeclareNoWait(System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ExchangeDeclareNoWait
    nameWithType: IModel.ExchangeDeclareNoWait
    fullName: RabbitMQ.Client.IModel.ExchangeDeclareNoWait
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeDeclarePassive*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeDeclarePassive
  name: ExchangeDeclarePassive
  nameWithType: PublisherCallbackChannel.ExchangeDeclarePassive
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeDeclarePassive
- uid: RabbitMQ.Client.IModel.ExchangeDeclarePassive(System.String)
  commentId: M:RabbitMQ.Client.IModel.ExchangeDeclarePassive(System.String)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: ExchangeDeclarePassive(String)
  nameWithType: IModel.ExchangeDeclarePassive(String)
  fullName: RabbitMQ.Client.IModel.ExchangeDeclarePassive(System.String)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.ExchangeDeclarePassive(System.String)
    name: ExchangeDeclarePassive
    nameWithType: IModel.ExchangeDeclarePassive
    fullName: RabbitMQ.Client.IModel.ExchangeDeclarePassive
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.ExchangeDeclarePassive(System.String)
    name: ExchangeDeclarePassive
    nameWithType: IModel.ExchangeDeclarePassive
    fullName: RabbitMQ.Client.IModel.ExchangeDeclarePassive
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeDelete*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeDelete
  name: ExchangeDelete
  nameWithType: PublisherCallbackChannel.ExchangeDelete
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeDelete
- uid: RabbitMQ.Client.IModel.ExchangeDelete(System.String,System.Boolean)
  commentId: M:RabbitMQ.Client.IModel.ExchangeDelete(System.String,System.Boolean)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: ExchangeDelete(String, Boolean)
  nameWithType: IModel.ExchangeDelete(String, Boolean)
  fullName: RabbitMQ.Client.IModel.ExchangeDelete(System.String, System.Boolean)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.ExchangeDelete(System.String,System.Boolean)
    name: ExchangeDelete
    nameWithType: IModel.ExchangeDelete
    fullName: RabbitMQ.Client.IModel.ExchangeDelete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.ExchangeDelete(System.String,System.Boolean)
    name: ExchangeDelete
    nameWithType: IModel.ExchangeDelete
    fullName: RabbitMQ.Client.IModel.ExchangeDelete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeDeleteNoWait*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeDeleteNoWait
  name: ExchangeDeleteNoWait
  nameWithType: PublisherCallbackChannel.ExchangeDeleteNoWait
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeDeleteNoWait
- uid: RabbitMQ.Client.IModel.ExchangeDeleteNoWait(System.String,System.Boolean)
  commentId: M:RabbitMQ.Client.IModel.ExchangeDeleteNoWait(System.String,System.Boolean)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: ExchangeDeleteNoWait(String, Boolean)
  nameWithType: IModel.ExchangeDeleteNoWait(String, Boolean)
  fullName: RabbitMQ.Client.IModel.ExchangeDeleteNoWait(System.String, System.Boolean)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.ExchangeDeleteNoWait(System.String,System.Boolean)
    name: ExchangeDeleteNoWait
    nameWithType: IModel.ExchangeDeleteNoWait
    fullName: RabbitMQ.Client.IModel.ExchangeDeleteNoWait
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.ExchangeDeleteNoWait(System.String,System.Boolean)
    name: ExchangeDeleteNoWait
    nameWithType: IModel.ExchangeDeleteNoWait
    fullName: RabbitMQ.Client.IModel.ExchangeDeleteNoWait
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeUnbind*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeUnbind
  name: ExchangeUnbind
  nameWithType: PublisherCallbackChannel.ExchangeUnbind
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeUnbind
- uid: RabbitMQ.Client.IModel.ExchangeUnbind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:RabbitMQ.Client.IModel.ExchangeUnbind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: ExchangeUnbind(String, String, String, IDictionary<String, Object>)
  nameWithType: IModel.ExchangeUnbind(String, String, String, IDictionary<String, Object>)
  fullName: RabbitMQ.Client.IModel.ExchangeUnbind(System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: IModel.ExchangeUnbind(String, String, String, IDictionary(Of String, Object))
  fullName.vb: RabbitMQ.Client.IModel.ExchangeUnbind(System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ExchangeUnbind(String, String, String, IDictionary(Of String, Object))
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.ExchangeUnbind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ExchangeUnbind
    nameWithType: IModel.ExchangeUnbind
    fullName: RabbitMQ.Client.IModel.ExchangeUnbind
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.ExchangeUnbind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ExchangeUnbind
    nameWithType: IModel.ExchangeUnbind
    fullName: RabbitMQ.Client.IModel.ExchangeUnbind
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeUnbindNoWait*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeUnbindNoWait
  name: ExchangeUnbindNoWait
  nameWithType: PublisherCallbackChannel.ExchangeUnbindNoWait
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.ExchangeUnbindNoWait
- uid: RabbitMQ.Client.IModel.ExchangeUnbindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:RabbitMQ.Client.IModel.ExchangeUnbindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: ExchangeUnbindNoWait(String, String, String, IDictionary<String, Object>)
  nameWithType: IModel.ExchangeUnbindNoWait(String, String, String, IDictionary<String, Object>)
  fullName: RabbitMQ.Client.IModel.ExchangeUnbindNoWait(System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: IModel.ExchangeUnbindNoWait(String, String, String, IDictionary(Of String, Object))
  fullName.vb: RabbitMQ.Client.IModel.ExchangeUnbindNoWait(System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ExchangeUnbindNoWait(String, String, String, IDictionary(Of String, Object))
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.ExchangeUnbindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ExchangeUnbindNoWait
    nameWithType: IModel.ExchangeUnbindNoWait
    fullName: RabbitMQ.Client.IModel.ExchangeUnbindNoWait
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.ExchangeUnbindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ExchangeUnbindNoWait
    nameWithType: IModel.ExchangeUnbindNoWait
    fullName: RabbitMQ.Client.IModel.ExchangeUnbindNoWait
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.MessageCount*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.MessageCount
  name: MessageCount
  nameWithType: PublisherCallbackChannel.MessageCount
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.MessageCount
- uid: RabbitMQ.Client.IModel.MessageCount(System.String)
  commentId: M:RabbitMQ.Client.IModel.MessageCount(System.String)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: MessageCount(String)
  nameWithType: IModel.MessageCount(String)
  fullName: RabbitMQ.Client.IModel.MessageCount(System.String)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.MessageCount(System.String)
    name: MessageCount
    nameWithType: IModel.MessageCount
    fullName: RabbitMQ.Client.IModel.MessageCount
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.MessageCount(System.String)
    name: MessageCount
    nameWithType: IModel.MessageCount
    fullName: RabbitMQ.Client.IModel.MessageCount
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueBind*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueBind
  name: QueueBind
  nameWithType: PublisherCallbackChannel.QueueBind
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueBind
- uid: RabbitMQ.Client.IModel.QueueBind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:RabbitMQ.Client.IModel.QueueBind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: QueueBind(String, String, String, IDictionary<String, Object>)
  nameWithType: IModel.QueueBind(String, String, String, IDictionary<String, Object>)
  fullName: RabbitMQ.Client.IModel.QueueBind(System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: IModel.QueueBind(String, String, String, IDictionary(Of String, Object))
  fullName.vb: RabbitMQ.Client.IModel.QueueBind(System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: QueueBind(String, String, String, IDictionary(Of String, Object))
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.QueueBind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: QueueBind
    nameWithType: IModel.QueueBind
    fullName: RabbitMQ.Client.IModel.QueueBind
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.QueueBind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: QueueBind
    nameWithType: IModel.QueueBind
    fullName: RabbitMQ.Client.IModel.QueueBind
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueBindNoWait*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueBindNoWait
  name: QueueBindNoWait
  nameWithType: PublisherCallbackChannel.QueueBindNoWait
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueBindNoWait
- uid: RabbitMQ.Client.IModel.QueueBindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:RabbitMQ.Client.IModel.QueueBindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: QueueBindNoWait(String, String, String, IDictionary<String, Object>)
  nameWithType: IModel.QueueBindNoWait(String, String, String, IDictionary<String, Object>)
  fullName: RabbitMQ.Client.IModel.QueueBindNoWait(System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: IModel.QueueBindNoWait(String, String, String, IDictionary(Of String, Object))
  fullName.vb: RabbitMQ.Client.IModel.QueueBindNoWait(System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: QueueBindNoWait(String, String, String, IDictionary(Of String, Object))
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.QueueBindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: QueueBindNoWait
    nameWithType: IModel.QueueBindNoWait
    fullName: RabbitMQ.Client.IModel.QueueBindNoWait
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.QueueBindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: QueueBindNoWait
    nameWithType: IModel.QueueBindNoWait
    fullName: RabbitMQ.Client.IModel.QueueBindNoWait
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueDeclare*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueDeclare
  name: QueueDeclare
  nameWithType: PublisherCallbackChannel.QueueDeclare
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueDeclare
- uid: RabbitMQ.Client.IModel.QueueDeclare(System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:RabbitMQ.Client.IModel.QueueDeclare(System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: QueueDeclare(String, Boolean, Boolean, Boolean, IDictionary<String, Object>)
  nameWithType: IModel.QueueDeclare(String, Boolean, Boolean, Boolean, IDictionary<String, Object>)
  fullName: RabbitMQ.Client.IModel.QueueDeclare(System.String, System.Boolean, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: IModel.QueueDeclare(String, Boolean, Boolean, Boolean, IDictionary(Of String, Object))
  fullName.vb: RabbitMQ.Client.IModel.QueueDeclare(System.String, System.Boolean, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: QueueDeclare(String, Boolean, Boolean, Boolean, IDictionary(Of String, Object))
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.QueueDeclare(System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: QueueDeclare
    nameWithType: IModel.QueueDeclare
    fullName: RabbitMQ.Client.IModel.QueueDeclare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.QueueDeclare(System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: QueueDeclare
    nameWithType: IModel.QueueDeclare
    fullName: RabbitMQ.Client.IModel.QueueDeclare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.QueueDeclareOk
  commentId: T:RabbitMQ.Client.QueueDeclareOk
  parent: RabbitMQ.Client
  isExternal: true
  name: QueueDeclareOk
  nameWithType: QueueDeclareOk
  fullName: RabbitMQ.Client.QueueDeclareOk
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueDeclareNoWait*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueDeclareNoWait
  name: QueueDeclareNoWait
  nameWithType: PublisherCallbackChannel.QueueDeclareNoWait
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueDeclareNoWait
- uid: RabbitMQ.Client.IModel.QueueDeclareNoWait(System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:RabbitMQ.Client.IModel.QueueDeclareNoWait(System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: QueueDeclareNoWait(String, Boolean, Boolean, Boolean, IDictionary<String, Object>)
  nameWithType: IModel.QueueDeclareNoWait(String, Boolean, Boolean, Boolean, IDictionary<String, Object>)
  fullName: RabbitMQ.Client.IModel.QueueDeclareNoWait(System.String, System.Boolean, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: IModel.QueueDeclareNoWait(String, Boolean, Boolean, Boolean, IDictionary(Of String, Object))
  fullName.vb: RabbitMQ.Client.IModel.QueueDeclareNoWait(System.String, System.Boolean, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: QueueDeclareNoWait(String, Boolean, Boolean, Boolean, IDictionary(Of String, Object))
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.QueueDeclareNoWait(System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: QueueDeclareNoWait
    nameWithType: IModel.QueueDeclareNoWait
    fullName: RabbitMQ.Client.IModel.QueueDeclareNoWait
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.QueueDeclareNoWait(System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: QueueDeclareNoWait
    nameWithType: IModel.QueueDeclareNoWait
    fullName: RabbitMQ.Client.IModel.QueueDeclareNoWait
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueDeclarePassive*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueDeclarePassive
  name: QueueDeclarePassive
  nameWithType: PublisherCallbackChannel.QueueDeclarePassive
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueDeclarePassive
- uid: RabbitMQ.Client.IModel.QueueDeclarePassive(System.String)
  commentId: M:RabbitMQ.Client.IModel.QueueDeclarePassive(System.String)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: QueueDeclarePassive(String)
  nameWithType: IModel.QueueDeclarePassive(String)
  fullName: RabbitMQ.Client.IModel.QueueDeclarePassive(System.String)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.QueueDeclarePassive(System.String)
    name: QueueDeclarePassive
    nameWithType: IModel.QueueDeclarePassive
    fullName: RabbitMQ.Client.IModel.QueueDeclarePassive
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.QueueDeclarePassive(System.String)
    name: QueueDeclarePassive
    nameWithType: IModel.QueueDeclarePassive
    fullName: RabbitMQ.Client.IModel.QueueDeclarePassive
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueDelete*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueDelete
  name: QueueDelete
  nameWithType: PublisherCallbackChannel.QueueDelete
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueDelete
- uid: RabbitMQ.Client.IModel.QueueDelete(System.String,System.Boolean,System.Boolean)
  commentId: M:RabbitMQ.Client.IModel.QueueDelete(System.String,System.Boolean,System.Boolean)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: QueueDelete(String, Boolean, Boolean)
  nameWithType: IModel.QueueDelete(String, Boolean, Boolean)
  fullName: RabbitMQ.Client.IModel.QueueDelete(System.String, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.QueueDelete(System.String,System.Boolean,System.Boolean)
    name: QueueDelete
    nameWithType: IModel.QueueDelete
    fullName: RabbitMQ.Client.IModel.QueueDelete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.QueueDelete(System.String,System.Boolean,System.Boolean)
    name: QueueDelete
    nameWithType: IModel.QueueDelete
    fullName: RabbitMQ.Client.IModel.QueueDelete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueDeleteNoWait*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueDeleteNoWait
  name: QueueDeleteNoWait
  nameWithType: PublisherCallbackChannel.QueueDeleteNoWait
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueDeleteNoWait
- uid: RabbitMQ.Client.IModel.QueueDeleteNoWait(System.String,System.Boolean,System.Boolean)
  commentId: M:RabbitMQ.Client.IModel.QueueDeleteNoWait(System.String,System.Boolean,System.Boolean)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: QueueDeleteNoWait(String, Boolean, Boolean)
  nameWithType: IModel.QueueDeleteNoWait(String, Boolean, Boolean)
  fullName: RabbitMQ.Client.IModel.QueueDeleteNoWait(System.String, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.QueueDeleteNoWait(System.String,System.Boolean,System.Boolean)
    name: QueueDeleteNoWait
    nameWithType: IModel.QueueDeleteNoWait
    fullName: RabbitMQ.Client.IModel.QueueDeleteNoWait
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.QueueDeleteNoWait(System.String,System.Boolean,System.Boolean)
    name: QueueDeleteNoWait
    nameWithType: IModel.QueueDeleteNoWait
    fullName: RabbitMQ.Client.IModel.QueueDeleteNoWait
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueuePurge*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueuePurge
  name: QueuePurge
  nameWithType: PublisherCallbackChannel.QueuePurge
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueuePurge
- uid: RabbitMQ.Client.IModel.QueuePurge(System.String)
  commentId: M:RabbitMQ.Client.IModel.QueuePurge(System.String)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: QueuePurge(String)
  nameWithType: IModel.QueuePurge(String)
  fullName: RabbitMQ.Client.IModel.QueuePurge(System.String)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.QueuePurge(System.String)
    name: QueuePurge
    nameWithType: IModel.QueuePurge
    fullName: RabbitMQ.Client.IModel.QueuePurge
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.QueuePurge(System.String)
    name: QueuePurge
    nameWithType: IModel.QueuePurge
    fullName: RabbitMQ.Client.IModel.QueuePurge
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueUnbind*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueUnbind
  name: QueueUnbind
  nameWithType: PublisherCallbackChannel.QueueUnbind
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.QueueUnbind
- uid: RabbitMQ.Client.IModel.QueueUnbind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:RabbitMQ.Client.IModel.QueueUnbind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: QueueUnbind(String, String, String, IDictionary<String, Object>)
  nameWithType: IModel.QueueUnbind(String, String, String, IDictionary<String, Object>)
  fullName: RabbitMQ.Client.IModel.QueueUnbind(System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: IModel.QueueUnbind(String, String, String, IDictionary(Of String, Object))
  fullName.vb: RabbitMQ.Client.IModel.QueueUnbind(System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: QueueUnbind(String, String, String, IDictionary(Of String, Object))
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.QueueUnbind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: QueueUnbind
    nameWithType: IModel.QueueUnbind
    fullName: RabbitMQ.Client.IModel.QueueUnbind
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.QueueUnbind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: QueueUnbind
    nameWithType: IModel.QueueUnbind
    fullName: RabbitMQ.Client.IModel.QueueUnbind
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.TxCommit*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.TxCommit
  name: TxCommit
  nameWithType: PublisherCallbackChannel.TxCommit
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.TxCommit
- uid: RabbitMQ.Client.IModel.TxCommit
  commentId: M:RabbitMQ.Client.IModel.TxCommit
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: TxCommit()
  nameWithType: IModel.TxCommit()
  fullName: RabbitMQ.Client.IModel.TxCommit()
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.TxCommit
    name: TxCommit
    nameWithType: IModel.TxCommit
    fullName: RabbitMQ.Client.IModel.TxCommit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.TxCommit
    name: TxCommit
    nameWithType: IModel.TxCommit
    fullName: RabbitMQ.Client.IModel.TxCommit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.TxRollback*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.TxRollback
  name: TxRollback
  nameWithType: PublisherCallbackChannel.TxRollback
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.TxRollback
- uid: RabbitMQ.Client.IModel.TxRollback
  commentId: M:RabbitMQ.Client.IModel.TxRollback
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: TxRollback()
  nameWithType: IModel.TxRollback()
  fullName: RabbitMQ.Client.IModel.TxRollback()
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.TxRollback
    name: TxRollback
    nameWithType: IModel.TxRollback
    fullName: RabbitMQ.Client.IModel.TxRollback
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.TxRollback
    name: TxRollback
    nameWithType: IModel.TxRollback
    fullName: RabbitMQ.Client.IModel.TxRollback
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.TxSelect*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.TxSelect
  name: TxSelect
  nameWithType: PublisherCallbackChannel.TxSelect
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.TxSelect
- uid: RabbitMQ.Client.IModel.TxSelect
  commentId: M:RabbitMQ.Client.IModel.TxSelect
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: TxSelect()
  nameWithType: IModel.TxSelect()
  fullName: RabbitMQ.Client.IModel.TxSelect()
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.TxSelect
    name: TxSelect
    nameWithType: IModel.TxSelect
    fullName: RabbitMQ.Client.IModel.TxSelect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.TxSelect
    name: TxSelect
    nameWithType: IModel.TxSelect
    fullName: RabbitMQ.Client.IModel.TxSelect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.WaitForConfirms*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.WaitForConfirms
  name: WaitForConfirms
  nameWithType: PublisherCallbackChannel.WaitForConfirms
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.WaitForConfirms
- uid: RabbitMQ.Client.IModel.WaitForConfirms
  commentId: M:RabbitMQ.Client.IModel.WaitForConfirms
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: WaitForConfirms()
  nameWithType: IModel.WaitForConfirms()
  fullName: RabbitMQ.Client.IModel.WaitForConfirms()
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.WaitForConfirms
    name: WaitForConfirms
    nameWithType: IModel.WaitForConfirms
    fullName: RabbitMQ.Client.IModel.WaitForConfirms
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.WaitForConfirms
    name: WaitForConfirms
    nameWithType: IModel.WaitForConfirms
    fullName: RabbitMQ.Client.IModel.WaitForConfirms
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.WaitForConfirms(System.TimeSpan)
  commentId: M:RabbitMQ.Client.IModel.WaitForConfirms(System.TimeSpan)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: WaitForConfirms(TimeSpan)
  nameWithType: IModel.WaitForConfirms(TimeSpan)
  fullName: RabbitMQ.Client.IModel.WaitForConfirms(System.TimeSpan)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.WaitForConfirms(System.TimeSpan)
    name: WaitForConfirms
    nameWithType: IModel.WaitForConfirms
    fullName: RabbitMQ.Client.IModel.WaitForConfirms
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.WaitForConfirms(System.TimeSpan)
    name: WaitForConfirms
    nameWithType: IModel.WaitForConfirms
    fullName: RabbitMQ.Client.IModel.WaitForConfirms
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.WaitForConfirms(System.TimeSpan,System.Boolean@)
  commentId: M:RabbitMQ.Client.IModel.WaitForConfirms(System.TimeSpan,System.Boolean@)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: WaitForConfirms(TimeSpan, Boolean)
  nameWithType: IModel.WaitForConfirms(TimeSpan, Boolean)
  fullName: RabbitMQ.Client.IModel.WaitForConfirms(System.TimeSpan, System.Boolean)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.WaitForConfirms(System.TimeSpan,System.Boolean@)
    name: WaitForConfirms
    nameWithType: IModel.WaitForConfirms
    fullName: RabbitMQ.Client.IModel.WaitForConfirms
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.WaitForConfirms(System.TimeSpan,System.Boolean@)
    name: WaitForConfirms
    nameWithType: IModel.WaitForConfirms
    fullName: RabbitMQ.Client.IModel.WaitForConfirms
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.WaitForConfirmsOrDie*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.WaitForConfirmsOrDie
  name: WaitForConfirmsOrDie
  nameWithType: PublisherCallbackChannel.WaitForConfirmsOrDie
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.WaitForConfirmsOrDie
- uid: RabbitMQ.Client.IModel.WaitForConfirmsOrDie
  commentId: M:RabbitMQ.Client.IModel.WaitForConfirmsOrDie
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: WaitForConfirmsOrDie()
  nameWithType: IModel.WaitForConfirmsOrDie()
  fullName: RabbitMQ.Client.IModel.WaitForConfirmsOrDie()
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.WaitForConfirmsOrDie
    name: WaitForConfirmsOrDie
    nameWithType: IModel.WaitForConfirmsOrDie
    fullName: RabbitMQ.Client.IModel.WaitForConfirmsOrDie
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.WaitForConfirmsOrDie
    name: WaitForConfirmsOrDie
    nameWithType: IModel.WaitForConfirmsOrDie
    fullName: RabbitMQ.Client.IModel.WaitForConfirmsOrDie
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.WaitForConfirmsOrDie(System.TimeSpan)
  commentId: M:RabbitMQ.Client.IModel.WaitForConfirmsOrDie(System.TimeSpan)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: WaitForConfirmsOrDie(TimeSpan)
  nameWithType: IModel.WaitForConfirmsOrDie(TimeSpan)
  fullName: RabbitMQ.Client.IModel.WaitForConfirmsOrDie(System.TimeSpan)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.WaitForConfirmsOrDie(System.TimeSpan)
    name: WaitForConfirmsOrDie
    nameWithType: IModel.WaitForConfirmsOrDie
    fullName: RabbitMQ.Client.IModel.WaitForConfirmsOrDie
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.WaitForConfirmsOrDie(System.TimeSpan)
    name: WaitForConfirmsOrDie
    nameWithType: IModel.WaitForConfirmsOrDie
    fullName: RabbitMQ.Client.IModel.WaitForConfirmsOrDie
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Dispose*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Dispose
  name: Dispose
  nameWithType: PublisherCallbackChannel.Dispose
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PublisherCallbackChannel.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
