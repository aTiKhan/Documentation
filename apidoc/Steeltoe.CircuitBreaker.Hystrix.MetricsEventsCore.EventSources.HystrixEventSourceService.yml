### YamlMime:ManagedReference
items:
- uid: Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService
  id: HystrixEventSourceService
  parent: Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources
  children:
  - Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService.#ctor(Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.HystrixDashboardStream)
  - Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService.SampleSubscription
  - Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService.StartAsync(System.Threading.CancellationToken)
  - Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService.StopAsync(System.Threading.CancellationToken)
  - Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService.Stream
  langs:
  - csharp
  - vb
  name: HystrixEventSourceService
  nameWithType: HystrixEventSourceService
  fullName: Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService
  type: Class
  source:
    remote:
      path: src/CircuitBreaker/src/Hystrix.MetricsEventsCore/EventSources/HystrixEventSourceService.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HystrixEventSourceService
    path: ../Steeltoe/src/CircuitBreaker/src/Hystrix.MetricsEventsCore/EventSources/HystrixEventSourceService.cs
    startLine: 16
  assemblies:
  - Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore
  namespace: Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources
  syntax:
    content: 'public class HystrixEventSourceService : IHostedService'
    content.vb: >-
      Public Class HystrixEventSourceService

          Implements IHostedService
  inheritance:
  - System.Object
  implements:
  - Microsoft.Extensions.Hosting.IHostedService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService.Stream
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService.Stream
  id: Stream
  parent: Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService
  langs:
  - csharp
  - vb
  name: Stream
  nameWithType: HystrixEventSourceService.Stream
  fullName: Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService.Stream
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/Hystrix.MetricsEventsCore/EventSources/HystrixEventSourceService.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Stream
    path: ../Steeltoe/src/CircuitBreaker/src/Hystrix.MetricsEventsCore/EventSources/HystrixEventSourceService.cs
    startLine: 18
  assemblies:
  - Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore
  namespace: Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources
  syntax:
    content: public HystrixDashboardStream Stream { get; }
    parameters: []
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.HystrixDashboardStream
    content.vb: Public ReadOnly Property Stream As HystrixDashboardStream
  overload: Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService.Stream*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService.#ctor(Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.HystrixDashboardStream)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService.#ctor(Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.HystrixDashboardStream)
  id: '#ctor(Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.HystrixDashboardStream)'
  parent: Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService
  langs:
  - csharp
  - vb
  name: HystrixEventSourceService(HystrixDashboardStream)
  nameWithType: HystrixEventSourceService.HystrixEventSourceService(HystrixDashboardStream)
  fullName: Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService.HystrixEventSourceService(Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.HystrixDashboardStream)
  type: Constructor
  source:
    remote:
      path: src/CircuitBreaker/src/Hystrix.MetricsEventsCore/EventSources/HystrixEventSourceService.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/CircuitBreaker/src/Hystrix.MetricsEventsCore/EventSources/HystrixEventSourceService.cs
    startLine: 20
  assemblies:
  - Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore
  namespace: Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources
  syntax:
    content: public HystrixEventSourceService(HystrixDashboardStream stream)
    parameters:
    - id: stream
      type: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.HystrixDashboardStream
    content.vb: Public Sub New(stream As HystrixDashboardStream)
  overload: Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService.SampleSubscription
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService.SampleSubscription
  id: SampleSubscription
  parent: Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService
  langs:
  - csharp
  - vb
  name: SampleSubscription
  nameWithType: HystrixEventSourceService.SampleSubscription
  fullName: Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService.SampleSubscription
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/Hystrix.MetricsEventsCore/EventSources/HystrixEventSourceService.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SampleSubscription
    path: ../Steeltoe/src/CircuitBreaker/src/Hystrix.MetricsEventsCore/EventSources/HystrixEventSourceService.cs
    startLine: 25
  assemblies:
  - Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore
  namespace: Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources
  syntax:
    content: protected IDisposable SampleSubscription { get; set; }
    parameters: []
    return:
      type: System.IDisposable
    content.vb: Protected Property SampleSubscription As IDisposable
  overload: Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService.SampleSubscription*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService.StartAsync(System.Threading.CancellationToken)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService.StartAsync(System.Threading.CancellationToken)
  id: StartAsync(System.Threading.CancellationToken)
  parent: Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService
  langs:
  - csharp
  - vb
  name: StartAsync(CancellationToken)
  nameWithType: HystrixEventSourceService.StartAsync(CancellationToken)
  fullName: Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService.StartAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/Hystrix.MetricsEventsCore/EventSources/HystrixEventSourceService.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: StartAsync
    path: ../Steeltoe/src/CircuitBreaker/src/Hystrix.MetricsEventsCore/EventSources/HystrixEventSourceService.cs
    startLine: 27
  assemblies:
  - Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore
  namespace: Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources
  syntax:
    content: public Task StartAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function StartAsync(cancellationToken As CancellationToken) As Task
  overload: Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService.StartAsync*
  implements:
  - Microsoft.Extensions.Hosting.IHostedService.StartAsync(System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService.StopAsync(System.Threading.CancellationToken)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService.StopAsync(System.Threading.CancellationToken)
  id: StopAsync(System.Threading.CancellationToken)
  parent: Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService
  langs:
  - csharp
  - vb
  name: StopAsync(CancellationToken)
  nameWithType: HystrixEventSourceService.StopAsync(CancellationToken)
  fullName: Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService.StopAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/Hystrix.MetricsEventsCore/EventSources/HystrixEventSourceService.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: StopAsync
    path: ../Steeltoe/src/CircuitBreaker/src/Hystrix.MetricsEventsCore/EventSources/HystrixEventSourceService.cs
    startLine: 33
  assemblies:
  - Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore
  namespace: Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources
  syntax:
    content: public Task StopAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function StopAsync(cancellationToken As CancellationToken) As Task
  overload: Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService.StopAsync*
  implements:
  - Microsoft.Extensions.Hosting.IHostedService.StopAsync(System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources
  commentId: N:Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources
  name: Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources
  nameWithType: Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources
  fullName: Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Extensions.Hosting.IHostedService
  commentId: T:Microsoft.Extensions.Hosting.IHostedService
  parent: Microsoft.Extensions.Hosting
  isExternal: true
  name: IHostedService
  nameWithType: IHostedService
  fullName: Microsoft.Extensions.Hosting.IHostedService
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Hosting
  commentId: N:Microsoft.Extensions.Hosting
  isExternal: true
  name: Microsoft.Extensions.Hosting
  nameWithType: Microsoft.Extensions.Hosting
  fullName: Microsoft.Extensions.Hosting
- uid: Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService.Stream*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService.Stream
  name: Stream
  nameWithType: HystrixEventSourceService.Stream
  fullName: Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService.Stream
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.HystrixDashboardStream
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.HystrixDashboardStream
  parent: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
  name: HystrixDashboardStream
  nameWithType: HystrixDashboardStream
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.HystrixDashboardStream
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
  commentId: N:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
  name: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
  nameWithType: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
- uid: Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService.#ctor*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService.#ctor
  name: HystrixEventSourceService
  nameWithType: HystrixEventSourceService.HystrixEventSourceService
  fullName: Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService.HystrixEventSourceService
- uid: Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService.SampleSubscription*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService.SampleSubscription
  name: SampleSubscription
  nameWithType: HystrixEventSourceService.SampleSubscription
  fullName: Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService.SampleSubscription
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService.StartAsync*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService.StartAsync
  name: StartAsync
  nameWithType: HystrixEventSourceService.StartAsync
  fullName: Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService.StartAsync
- uid: Microsoft.Extensions.Hosting.IHostedService.StartAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.Extensions.Hosting.IHostedService.StartAsync(System.Threading.CancellationToken)
  parent: Microsoft.Extensions.Hosting.IHostedService
  isExternal: true
  name: StartAsync(CancellationToken)
  nameWithType: IHostedService.StartAsync(CancellationToken)
  fullName: Microsoft.Extensions.Hosting.IHostedService.StartAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Extensions.Hosting.IHostedService.StartAsync(System.Threading.CancellationToken)
    name: StartAsync
    nameWithType: IHostedService.StartAsync
    fullName: Microsoft.Extensions.Hosting.IHostedService.StartAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Hosting.IHostedService.StartAsync(System.Threading.CancellationToken)
    name: StartAsync
    nameWithType: IHostedService.StartAsync
    fullName: Microsoft.Extensions.Hosting.IHostedService.StartAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService.StopAsync*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService.StopAsync
  name: StopAsync
  nameWithType: HystrixEventSourceService.StopAsync
  fullName: Steeltoe.CircuitBreaker.Hystrix.MetricsEventsCore.EventSources.HystrixEventSourceService.StopAsync
- uid: Microsoft.Extensions.Hosting.IHostedService.StopAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.Extensions.Hosting.IHostedService.StopAsync(System.Threading.CancellationToken)
  parent: Microsoft.Extensions.Hosting.IHostedService
  isExternal: true
  name: StopAsync(CancellationToken)
  nameWithType: IHostedService.StopAsync(CancellationToken)
  fullName: Microsoft.Extensions.Hosting.IHostedService.StopAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Extensions.Hosting.IHostedService.StopAsync(System.Threading.CancellationToken)
    name: StopAsync
    nameWithType: IHostedService.StopAsync
    fullName: Microsoft.Extensions.Hosting.IHostedService.StopAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Hosting.IHostedService.StopAsync(System.Threading.CancellationToken)
    name: StopAsync
    nameWithType: IHostedService.StopAsync
    fullName: Microsoft.Extensions.Hosting.IHostedService.StopAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
