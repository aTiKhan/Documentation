### YamlMime:ManagedReference
items:
- uid: Steeltoe.Management.Endpoint.EndPointExtensions
  commentId: T:Steeltoe.Management.Endpoint.EndPointExtensions
  id: EndPointExtensions
  parent: Steeltoe.Management.Endpoint
  children:
  - Steeltoe.Management.Endpoint.EndPointExtensions.GetContextPath(Steeltoe.Management.IEndpointOptions,Steeltoe.Management.IManagementOptions)
  - Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
  - Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IEndpointOptions,Steeltoe.Management.IManagementOptions)
  - Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
  - Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IEndpointOptions,Steeltoe.Management.IManagementOptions)
  - Steeltoe.Management.Endpoint.EndPointExtensions.OptionsForContext(System.Collections.Generic.IEnumerable{Steeltoe.Management.IManagementOptions},System.String,ILogger)
  - Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions,ILogger)
  langs:
  - csharp
  - vb
  name: EndPointExtensions
  nameWithType: EndPointExtensions
  fullName: Steeltoe.Management.Endpoint.EndPointExtensions
  type: Class
  source:
    remote:
      path: src/Management/src/EndpointBase/EndpointExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: EndPointExtensions
    path: ../Steeltoe/src/Management/src/EndpointBase/EndpointExtensions.cs
    startLine: 15
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint
  syntax:
    content: public static class EndPointExtensions
    content.vb: Public Module EndPointExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IEndpointOptions,Steeltoe.Management.IManagementOptions)
  commentId: M:Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IEndpointOptions,Steeltoe.Management.IManagementOptions)
  id: IsEnabled(Steeltoe.Management.IEndpointOptions,Steeltoe.Management.IManagementOptions)
  isExtensionMethod: true
  parent: Steeltoe.Management.Endpoint.EndPointExtensions
  langs:
  - csharp
  - vb
  name: IsEnabled(IEndpointOptions, IManagementOptions)
  nameWithType: EndPointExtensions.IsEnabled(IEndpointOptions, IManagementOptions)
  fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IEndpointOptions, Steeltoe.Management.IManagementOptions)
  type: Method
  source:
    remote:
      path: src/Management/src/EndpointBase/EndpointExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsEnabled
    path: ../Steeltoe/src/Management/src/EndpointBase/EndpointExtensions.cs
    startLine: 17
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint
  syntax:
    content: public static bool IsEnabled(this IEndpointOptions options, IManagementOptions mgmtOptions)
    parameters:
    - id: options
      type: Steeltoe.Management.IEndpointOptions
    - id: mgmtOptions
      type: Steeltoe.Management.IManagementOptions
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsEnabled(options As IEndpointOptions, mgmtOptions As IManagementOptions) As Boolean
  overload: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
  commentId: M:Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
  id: IsEnabled(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
  isExtensionMethod: true
  parent: Steeltoe.Management.Endpoint.EndPointExtensions
  langs:
  - csharp
  - vb
  name: IsEnabled(IEndpoint, IManagementOptions)
  nameWithType: EndPointExtensions.IsEnabled(IEndpoint, IManagementOptions)
  fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IEndpoint, Steeltoe.Management.IManagementOptions)
  type: Method
  source:
    remote:
      path: src/Management/src/EndpointBase/EndpointExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsEnabled
    path: ../Steeltoe/src/Management/src/EndpointBase/EndpointExtensions.cs
    startLine: 34
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint
  syntax:
    content: public static bool IsEnabled(this IEndpoint endpoint, IManagementOptions mgmtContext)
    parameters:
    - id: endpoint
      type: Steeltoe.Management.IEndpoint
    - id: mgmtContext
      type: Steeltoe.Management.IManagementOptions
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsEnabled(endpoint As IEndpoint, mgmtContext As IManagementOptions) As Boolean
  overload: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IEndpointOptions,Steeltoe.Management.IManagementOptions)
  commentId: M:Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IEndpointOptions,Steeltoe.Management.IManagementOptions)
  id: IsExposed(Steeltoe.Management.IEndpointOptions,Steeltoe.Management.IManagementOptions)
  isExtensionMethod: true
  parent: Steeltoe.Management.Endpoint.EndPointExtensions
  langs:
  - csharp
  - vb
  name: IsExposed(IEndpointOptions, IManagementOptions)
  nameWithType: EndPointExtensions.IsExposed(IEndpointOptions, IManagementOptions)
  fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IEndpointOptions, Steeltoe.Management.IManagementOptions)
  type: Method
  source:
    remote:
      path: src/Management/src/EndpointBase/EndpointExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsExposed
    path: ../Steeltoe/src/Management/src/EndpointBase/EndpointExtensions.cs
    startLine: 39
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint
  syntax:
    content: public static bool IsExposed(this IEndpointOptions options, IManagementOptions mgmtOptions)
    parameters:
    - id: options
      type: Steeltoe.Management.IEndpointOptions
    - id: mgmtOptions
      type: Steeltoe.Management.IManagementOptions
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsExposed(options As IEndpointOptions, mgmtOptions As IManagementOptions) As Boolean
  overload: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
  commentId: M:Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
  id: IsExposed(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
  isExtensionMethod: true
  parent: Steeltoe.Management.Endpoint.EndPointExtensions
  langs:
  - csharp
  - vb
  name: IsExposed(IEndpoint, IManagementOptions)
  nameWithType: EndPointExtensions.IsExposed(IEndpoint, IManagementOptions)
  fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IEndpoint, Steeltoe.Management.IManagementOptions)
  type: Method
  source:
    remote:
      path: src/Management/src/EndpointBase/EndpointExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsExposed
    path: ../Steeltoe/src/Management/src/EndpointBase/EndpointExtensions.cs
    startLine: 63
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint
  syntax:
    content: public static bool IsExposed(this IEndpoint endpoint, IManagementOptions mgmtContext)
    parameters:
    - id: endpoint
      type: Steeltoe.Management.IEndpoint
    - id: mgmtContext
      type: Steeltoe.Management.IManagementOptions
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsExposed(endpoint As IEndpoint, mgmtContext As IManagementOptions) As Boolean
  overload: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions,ILogger)
  commentId: M:Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions,ILogger)
  id: ShouldInvoke(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions,ILogger)
  isExtensionMethod: true
  parent: Steeltoe.Management.Endpoint.EndPointExtensions
  langs:
  - csharp
  - vb
  name: ShouldInvoke(IEndpoint, IManagementOptions, ILogger)
  nameWithType: EndPointExtensions.ShouldInvoke(IEndpoint, IManagementOptions, ILogger)
  fullName: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IEndpoint, Steeltoe.Management.IManagementOptions, ILogger)
  type: Method
  source:
    remote:
      path: src/Management/src/EndpointBase/EndpointExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ShouldInvoke
    path: ../Steeltoe/src/Management/src/EndpointBase/EndpointExtensions.cs
    startLine: 68
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint
  syntax:
    content: public static bool ShouldInvoke(this IEndpoint endpoint, IManagementOptions mgmtContext, ILogger logger = null)
    parameters:
    - id: endpoint
      type: Steeltoe.Management.IEndpoint
    - id: mgmtContext
      type: Steeltoe.Management.IManagementOptions
    - id: logger
      type: ILogger
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ShouldInvoke(endpoint As IEndpoint, mgmtContext As IManagementOptions, logger As ILogger = Nothing) As Boolean
  overload: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Management.Endpoint.EndPointExtensions.OptionsForContext(System.Collections.Generic.IEnumerable{Steeltoe.Management.IManagementOptions},System.String,ILogger)
  commentId: M:Steeltoe.Management.Endpoint.EndPointExtensions.OptionsForContext(System.Collections.Generic.IEnumerable{Steeltoe.Management.IManagementOptions},System.String,ILogger)
  id: OptionsForContext(System.Collections.Generic.IEnumerable{Steeltoe.Management.IManagementOptions},System.String,ILogger)
  isExtensionMethod: true
  parent: Steeltoe.Management.Endpoint.EndPointExtensions
  langs:
  - csharp
  - vb
  name: OptionsForContext(IEnumerable<IManagementOptions>, String, ILogger)
  nameWithType: EndPointExtensions.OptionsForContext(IEnumerable<IManagementOptions>, String, ILogger)
  fullName: Steeltoe.Management.Endpoint.EndPointExtensions.OptionsForContext(System.Collections.Generic.IEnumerable<Steeltoe.Management.IManagementOptions>, System.String, ILogger)
  type: Method
  source:
    remote:
      path: src/Management/src/EndpointBase/EndpointExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: OptionsForContext
    path: ../Steeltoe/src/Management/src/EndpointBase/EndpointExtensions.cs
    startLine: 76
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint
  syntax:
    content: public static IManagementOptions OptionsForContext(this IEnumerable<IManagementOptions> mgmtOptions, string requestPath, ILogger logger = null)
    parameters:
    - id: mgmtOptions
      type: System.Collections.Generic.IEnumerable{Steeltoe.Management.IManagementOptions}
    - id: requestPath
      type: System.String
    - id: logger
      type: ILogger
    return:
      type: Steeltoe.Management.IManagementOptions
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function OptionsForContext(mgmtOptions As IEnumerable(Of IManagementOptions), requestPath As String, logger As ILogger = Nothing) As IManagementOptions
  overload: Steeltoe.Management.Endpoint.EndPointExtensions.OptionsForContext*
  nameWithType.vb: EndPointExtensions.OptionsForContext(IEnumerable(Of IManagementOptions), String, ILogger)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Management.Endpoint.EndPointExtensions.OptionsForContext(System.Collections.Generic.IEnumerable(Of Steeltoe.Management.IManagementOptions), System.String, ILogger)
  name.vb: OptionsForContext(IEnumerable(Of IManagementOptions), String, ILogger)
- uid: Steeltoe.Management.Endpoint.EndPointExtensions.GetContextPath(Steeltoe.Management.IEndpointOptions,Steeltoe.Management.IManagementOptions)
  commentId: M:Steeltoe.Management.Endpoint.EndPointExtensions.GetContextPath(Steeltoe.Management.IEndpointOptions,Steeltoe.Management.IManagementOptions)
  id: GetContextPath(Steeltoe.Management.IEndpointOptions,Steeltoe.Management.IManagementOptions)
  isExtensionMethod: true
  parent: Steeltoe.Management.Endpoint.EndPointExtensions
  langs:
  - csharp
  - vb
  name: GetContextPath(IEndpointOptions, IManagementOptions)
  nameWithType: EndPointExtensions.GetContextPath(IEndpointOptions, IManagementOptions)
  fullName: Steeltoe.Management.Endpoint.EndPointExtensions.GetContextPath(Steeltoe.Management.IEndpointOptions, Steeltoe.Management.IManagementOptions)
  type: Method
  source:
    remote:
      path: src/Management/src/EndpointBase/EndpointExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetContextPath
    path: ../Steeltoe/src/Management/src/EndpointBase/EndpointExtensions.cs
    startLine: 105
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint
  syntax:
    content: public static string GetContextPath(this IEndpointOptions options, IManagementOptions mgmtContext)
    parameters:
    - id: options
      type: Steeltoe.Management.IEndpointOptions
    - id: mgmtContext
      type: Steeltoe.Management.IManagementOptions
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetContextPath(options As IEndpointOptions, mgmtContext As IManagementOptions) As String
  overload: Steeltoe.Management.Endpoint.EndPointExtensions.GetContextPath*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Steeltoe.Management.Endpoint
  commentId: N:Steeltoe.Management.Endpoint
  name: Steeltoe.Management.Endpoint
  nameWithType: Steeltoe.Management.Endpoint
  fullName: Steeltoe.Management.Endpoint
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled*
  commentId: Overload:Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled
  name: IsEnabled
  nameWithType: EndPointExtensions.IsEnabled
  fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled
- uid: Steeltoe.Management.IEndpointOptions
  commentId: T:Steeltoe.Management.IEndpointOptions
  parent: Steeltoe.Management
  name: IEndpointOptions
  nameWithType: IEndpointOptions
  fullName: Steeltoe.Management.IEndpointOptions
- uid: Steeltoe.Management.IManagementOptions
  commentId: T:Steeltoe.Management.IManagementOptions
  parent: Steeltoe.Management
  name: IManagementOptions
  nameWithType: IManagementOptions
  fullName: Steeltoe.Management.IManagementOptions
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Management
  commentId: N:Steeltoe.Management
  name: Steeltoe.Management
  nameWithType: Steeltoe.Management
  fullName: Steeltoe.Management
- uid: Steeltoe.Management.IEndpoint
  commentId: T:Steeltoe.Management.IEndpoint
  parent: Steeltoe.Management
  name: IEndpoint
  nameWithType: IEndpoint
  fullName: Steeltoe.Management.IEndpoint
- uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed*
  commentId: Overload:Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed
  name: IsExposed
  nameWithType: EndPointExtensions.IsExposed
  fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed
- uid: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke*
  commentId: Overload:Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke
  name: ShouldInvoke
  nameWithType: EndPointExtensions.ShouldInvoke
  fullName: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke
- uid: ILogger
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: ILogger
- uid: Steeltoe.Management.Endpoint.EndPointExtensions.OptionsForContext*
  commentId: Overload:Steeltoe.Management.Endpoint.EndPointExtensions.OptionsForContext
  name: OptionsForContext
  nameWithType: EndPointExtensions.OptionsForContext
  fullName: Steeltoe.Management.Endpoint.EndPointExtensions.OptionsForContext
- uid: System.Collections.Generic.IEnumerable{Steeltoe.Management.IManagementOptions}
  commentId: T:System.Collections.Generic.IEnumerable{Steeltoe.Management.IManagementOptions}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IManagementOptions>
  nameWithType: IEnumerable<IManagementOptions>
  fullName: System.Collections.Generic.IEnumerable<Steeltoe.Management.IManagementOptions>
  nameWithType.vb: IEnumerable(Of IManagementOptions)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Steeltoe.Management.IManagementOptions)
  name.vb: IEnumerable(Of IManagementOptions)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Management.Endpoint.EndPointExtensions.GetContextPath*
  commentId: Overload:Steeltoe.Management.Endpoint.EndPointExtensions.GetContextPath
  name: GetContextPath
  nameWithType: EndPointExtensions.GetContextPath
  fullName: Steeltoe.Management.Endpoint.EndPointExtensions.GetContextPath
