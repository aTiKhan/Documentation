### YamlMime:ManagedReference
items:
- uid: Steeltoe.Management.Endpoint.Trace.ITraceRepository
  commentId: T:Steeltoe.Management.Endpoint.Trace.ITraceRepository
  id: ITraceRepository
  parent: Steeltoe.Management.Endpoint.Trace
  children:
  - Steeltoe.Management.Endpoint.Trace.ITraceRepository.GetTraces
  langs:
  - csharp
  - vb
  name: ITraceRepository
  nameWithType: ITraceRepository
  fullName: Steeltoe.Management.Endpoint.Trace.ITraceRepository
  type: Interface
  source:
    remote:
      path: src/Management/src/EndpointBase/Trace/ITraceRepository.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ITraceRepository
    path: ../Steeltoe/src/Management/src/EndpointBase/Trace/ITraceRepository.cs
    startLine: 8
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Trace
  syntax:
    content: public interface ITraceRepository
    content.vb: Public Interface ITraceRepository
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Steeltoe.Management.Endpoint.Trace.ITraceRepository.GetTraces
  commentId: M:Steeltoe.Management.Endpoint.Trace.ITraceRepository.GetTraces
  id: GetTraces
  parent: Steeltoe.Management.Endpoint.Trace.ITraceRepository
  langs:
  - csharp
  - vb
  name: GetTraces()
  nameWithType: ITraceRepository.GetTraces()
  fullName: Steeltoe.Management.Endpoint.Trace.ITraceRepository.GetTraces()
  type: Method
  source:
    remote:
      path: src/Management/src/EndpointBase/Trace/ITraceRepository.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetTraces
    path: ../Steeltoe/src/Management/src/EndpointBase/Trace/ITraceRepository.cs
    startLine: 10
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Trace
  syntax:
    content: List<TraceResult> GetTraces()
    return:
      type: System.Collections.Generic.List{Steeltoe.Management.Endpoint.Trace.TraceResult}
    content.vb: Function GetTraces As List(Of TraceResult)
  overload: Steeltoe.Management.Endpoint.Trace.ITraceRepository.GetTraces*
references:
- uid: Steeltoe.Management.Endpoint.Trace
  commentId: N:Steeltoe.Management.Endpoint.Trace
  name: Steeltoe.Management.Endpoint.Trace
  nameWithType: Steeltoe.Management.Endpoint.Trace
  fullName: Steeltoe.Management.Endpoint.Trace
- uid: Steeltoe.Management.Endpoint.Trace.ITraceRepository.GetTraces*
  commentId: Overload:Steeltoe.Management.Endpoint.Trace.ITraceRepository.GetTraces
  name: GetTraces
  nameWithType: ITraceRepository.GetTraces
  fullName: Steeltoe.Management.Endpoint.Trace.ITraceRepository.GetTraces
- uid: System.Collections.Generic.List{Steeltoe.Management.Endpoint.Trace.TraceResult}
  commentId: T:System.Collections.Generic.List{Steeltoe.Management.Endpoint.Trace.TraceResult}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<TraceResult>
  nameWithType: List<TraceResult>
  fullName: System.Collections.Generic.List<Steeltoe.Management.Endpoint.Trace.TraceResult>
  nameWithType.vb: List(Of TraceResult)
  fullName.vb: System.Collections.Generic.List(Of Steeltoe.Management.Endpoint.Trace.TraceResult)
  name.vb: List(Of TraceResult)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Management.Endpoint.Trace.TraceResult
    name: TraceResult
    nameWithType: TraceResult
    fullName: Steeltoe.Management.Endpoint.Trace.TraceResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Management.Endpoint.Trace.TraceResult
    name: TraceResult
    nameWithType: TraceResult
    fullName: Steeltoe.Management.Endpoint.Trace.TraceResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
