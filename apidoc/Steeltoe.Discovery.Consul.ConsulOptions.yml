### YamlMime:ManagedReference
items:
- uid: Steeltoe.Discovery.Consul.ConsulOptions
  commentId: T:Steeltoe.Discovery.Consul.ConsulOptions
  id: ConsulOptions
  parent: Steeltoe.Discovery.Consul
  children:
  - Steeltoe.Discovery.Consul.ConsulOptions.CONSUL_CONFIGURATION_PREFIX
  - Steeltoe.Discovery.Consul.ConsulOptions.Datacenter
  - Steeltoe.Discovery.Consul.ConsulOptions.Host
  - Steeltoe.Discovery.Consul.ConsulOptions.Password
  - Steeltoe.Discovery.Consul.ConsulOptions.Port
  - Steeltoe.Discovery.Consul.ConsulOptions.Scheme
  - Steeltoe.Discovery.Consul.ConsulOptions.Token
  - Steeltoe.Discovery.Consul.ConsulOptions.Username
  - Steeltoe.Discovery.Consul.ConsulOptions.WaitTime
  langs:
  - csharp
  - vb
  name: ConsulOptions
  nameWithType: ConsulOptions
  fullName: Steeltoe.Discovery.Consul.ConsulOptions
  type: Class
  source:
    remote:
      path: src/Discovery/src/Consul/ConsulOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConsulOptions
    path: ../Steeltoe/src/Discovery/src/Consul/ConsulOptions.cs
    startLine: 10
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul
  summary: "\nConfiguration options to use in creating a Consul client. See the documentation\nof the Consul client for more details\n"
  example: []
  syntax:
    content: public class ConsulOptions
    content.vb: Public Class ConsulOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Discovery.Consul.ConsulOptions.CONSUL_CONFIGURATION_PREFIX
  commentId: F:Steeltoe.Discovery.Consul.ConsulOptions.CONSUL_CONFIGURATION_PREFIX
  id: CONSUL_CONFIGURATION_PREFIX
  parent: Steeltoe.Discovery.Consul.ConsulOptions
  langs:
  - csharp
  - vb
  name: CONSUL_CONFIGURATION_PREFIX
  nameWithType: ConsulOptions.CONSUL_CONFIGURATION_PREFIX
  fullName: Steeltoe.Discovery.Consul.ConsulOptions.CONSUL_CONFIGURATION_PREFIX
  type: Field
  source:
    remote:
      path: src/Discovery/src/Consul/ConsulOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CONSUL_CONFIGURATION_PREFIX
    path: ../Steeltoe/src/Discovery/src/Consul/ConsulOptions.cs
    startLine: 12
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul
  syntax:
    content: public const string CONSUL_CONFIGURATION_PREFIX = "consul"
    return:
      type: System.String
    content.vb: Public Const CONSUL_CONFIGURATION_PREFIX As String = "consul"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Discovery.Consul.ConsulOptions.Host
  commentId: P:Steeltoe.Discovery.Consul.ConsulOptions.Host
  id: Host
  parent: Steeltoe.Discovery.Consul.ConsulOptions
  langs:
  - csharp
  - vb
  name: Host
  nameWithType: ConsulOptions.Host
  fullName: Steeltoe.Discovery.Consul.ConsulOptions.Host
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/ConsulOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Host
    path: ../Steeltoe/src/Discovery/src/Consul/ConsulOptions.cs
    startLine: 17
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul
  summary: "\nGets or sets the host address of the Consul server, default localhost\n"
  example: []
  syntax:
    content: public string Host { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Host As String
  overload: Steeltoe.Discovery.Consul.ConsulOptions.Host*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.ConsulOptions.Scheme
  commentId: P:Steeltoe.Discovery.Consul.ConsulOptions.Scheme
  id: Scheme
  parent: Steeltoe.Discovery.Consul.ConsulOptions
  langs:
  - csharp
  - vb
  name: Scheme
  nameWithType: ConsulOptions.Scheme
  fullName: Steeltoe.Discovery.Consul.ConsulOptions.Scheme
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/ConsulOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Scheme
    path: ../Steeltoe/src/Discovery/src/Consul/ConsulOptions.cs
    startLine: 22
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul
  summary: "\nGets or sets the scheme used for the Consul server, default http\n"
  example: []
  syntax:
    content: public string Scheme { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Scheme As String
  overload: Steeltoe.Discovery.Consul.ConsulOptions.Scheme*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.ConsulOptions.Port
  commentId: P:Steeltoe.Discovery.Consul.ConsulOptions.Port
  id: Port
  parent: Steeltoe.Discovery.Consul.ConsulOptions
  langs:
  - csharp
  - vb
  name: Port
  nameWithType: ConsulOptions.Port
  fullName: Steeltoe.Discovery.Consul.ConsulOptions.Port
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/ConsulOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Port
    path: ../Steeltoe/src/Discovery/src/Consul/ConsulOptions.cs
    startLine: 27
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul
  summary: "\nGets or sets the port number used for the Consul server, default 8500\n"
  example: []
  syntax:
    content: public int Port { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Port As Integer
  overload: Steeltoe.Discovery.Consul.ConsulOptions.Port*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.ConsulOptions.Datacenter
  commentId: P:Steeltoe.Discovery.Consul.ConsulOptions.Datacenter
  id: Datacenter
  parent: Steeltoe.Discovery.Consul.ConsulOptions
  langs:
  - csharp
  - vb
  name: Datacenter
  nameWithType: ConsulOptions.Datacenter
  fullName: Steeltoe.Discovery.Consul.ConsulOptions.Datacenter
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/ConsulOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Datacenter
    path: ../Steeltoe/src/Discovery/src/Consul/ConsulOptions.cs
    startLine: 32
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul
  summary: "\nGets or sets the data center to use\n"
  example: []
  syntax:
    content: public string Datacenter { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Datacenter As String
  overload: Steeltoe.Discovery.Consul.ConsulOptions.Datacenter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.ConsulOptions.Token
  commentId: P:Steeltoe.Discovery.Consul.ConsulOptions.Token
  id: Token
  parent: Steeltoe.Discovery.Consul.ConsulOptions
  langs:
  - csharp
  - vb
  name: Token
  nameWithType: ConsulOptions.Token
  fullName: Steeltoe.Discovery.Consul.ConsulOptions.Token
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/ConsulOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Token
    path: ../Steeltoe/src/Discovery/src/Consul/ConsulOptions.cs
    startLine: 37
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul
  summary: "\nGets or sets the access token to use\n"
  example: []
  syntax:
    content: public string Token { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Token As String
  overload: Steeltoe.Discovery.Consul.ConsulOptions.Token*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.ConsulOptions.WaitTime
  commentId: P:Steeltoe.Discovery.Consul.ConsulOptions.WaitTime
  id: WaitTime
  parent: Steeltoe.Discovery.Consul.ConsulOptions
  langs:
  - csharp
  - vb
  name: WaitTime
  nameWithType: ConsulOptions.WaitTime
  fullName: Steeltoe.Discovery.Consul.ConsulOptions.WaitTime
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/ConsulOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: WaitTime
    path: ../Steeltoe/src/Discovery/src/Consul/ConsulOptions.cs
    startLine: 42
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul
  summary: "\nGets or sets the wait time to use\n"
  example: []
  syntax:
    content: public string WaitTime { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property WaitTime As String
  overload: Steeltoe.Discovery.Consul.ConsulOptions.WaitTime*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.ConsulOptions.Username
  commentId: P:Steeltoe.Discovery.Consul.ConsulOptions.Username
  id: Username
  parent: Steeltoe.Discovery.Consul.ConsulOptions
  langs:
  - csharp
  - vb
  name: Username
  nameWithType: ConsulOptions.Username
  fullName: Steeltoe.Discovery.Consul.ConsulOptions.Username
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/ConsulOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Username
    path: ../Steeltoe/src/Discovery/src/Consul/ConsulOptions.cs
    startLine: 47
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul
  summary: "\nGets or sets the user name to use\n"
  example: []
  syntax:
    content: public string Username { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Username As String
  overload: Steeltoe.Discovery.Consul.ConsulOptions.Username*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.ConsulOptions.Password
  commentId: P:Steeltoe.Discovery.Consul.ConsulOptions.Password
  id: Password
  parent: Steeltoe.Discovery.Consul.ConsulOptions
  langs:
  - csharp
  - vb
  name: Password
  nameWithType: ConsulOptions.Password
  fullName: Steeltoe.Discovery.Consul.ConsulOptions.Password
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/ConsulOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Password
    path: ../Steeltoe/src/Discovery/src/Consul/ConsulOptions.cs
    startLine: 52
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul
  summary: "\nGets or sets password to use\n"
  example: []
  syntax:
    content: public string Password { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Password As String
  overload: Steeltoe.Discovery.Consul.ConsulOptions.Password*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Discovery.Consul
  commentId: N:Steeltoe.Discovery.Consul
  name: Steeltoe.Discovery.Consul
  nameWithType: Steeltoe.Discovery.Consul
  fullName: Steeltoe.Discovery.Consul
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Discovery.Consul.ConsulOptions.Host*
  commentId: Overload:Steeltoe.Discovery.Consul.ConsulOptions.Host
  name: Host
  nameWithType: ConsulOptions.Host
  fullName: Steeltoe.Discovery.Consul.ConsulOptions.Host
- uid: Steeltoe.Discovery.Consul.ConsulOptions.Scheme*
  commentId: Overload:Steeltoe.Discovery.Consul.ConsulOptions.Scheme
  name: Scheme
  nameWithType: ConsulOptions.Scheme
  fullName: Steeltoe.Discovery.Consul.ConsulOptions.Scheme
- uid: Steeltoe.Discovery.Consul.ConsulOptions.Port*
  commentId: Overload:Steeltoe.Discovery.Consul.ConsulOptions.Port
  name: Port
  nameWithType: ConsulOptions.Port
  fullName: Steeltoe.Discovery.Consul.ConsulOptions.Port
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Steeltoe.Discovery.Consul.ConsulOptions.Datacenter*
  commentId: Overload:Steeltoe.Discovery.Consul.ConsulOptions.Datacenter
  name: Datacenter
  nameWithType: ConsulOptions.Datacenter
  fullName: Steeltoe.Discovery.Consul.ConsulOptions.Datacenter
- uid: Steeltoe.Discovery.Consul.ConsulOptions.Token*
  commentId: Overload:Steeltoe.Discovery.Consul.ConsulOptions.Token
  name: Token
  nameWithType: ConsulOptions.Token
  fullName: Steeltoe.Discovery.Consul.ConsulOptions.Token
- uid: Steeltoe.Discovery.Consul.ConsulOptions.WaitTime*
  commentId: Overload:Steeltoe.Discovery.Consul.ConsulOptions.WaitTime
  name: WaitTime
  nameWithType: ConsulOptions.WaitTime
  fullName: Steeltoe.Discovery.Consul.ConsulOptions.WaitTime
- uid: Steeltoe.Discovery.Consul.ConsulOptions.Username*
  commentId: Overload:Steeltoe.Discovery.Consul.ConsulOptions.Username
  name: Username
  nameWithType: ConsulOptions.Username
  fullName: Steeltoe.Discovery.Consul.ConsulOptions.Username
- uid: Steeltoe.Discovery.Consul.ConsulOptions.Password*
  commentId: Overload:Steeltoe.Discovery.Consul.ConsulOptions.Password
  name: Password
  nameWithType: ConsulOptions.Password
  fullName: Steeltoe.Discovery.Consul.ConsulOptions.Password
