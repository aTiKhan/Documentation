### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator
  id: QueueBuilder.MasterLocator
  parent: Steeltoe.Messaging.RabbitMQ.Config
  children:
  - Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator.ClientLocal
  - Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator.MinMasters
  - Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator.Random
  - Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator.Value
  langs:
  - csharp
  - vb
  name: QueueBuilder.MasterLocator
  nameWithType: QueueBuilder.MasterLocator
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MasterLocator
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
    startLine: 25
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public class MasterLocator
    content.vb: Public Class MasterLocator
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator.MinMasters
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator.MinMasters
  id: MinMasters
  parent: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator
  langs:
  - csharp
  - vb
  name: MinMasters
  nameWithType: QueueBuilder.MasterLocator.MinMasters
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator.MinMasters
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MinMasters
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
    startLine: 27
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public static QueueBuilder.MasterLocator MinMasters { get; }
    parameters: []
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator
    content.vb: Public Shared ReadOnly Property MinMasters As QueueBuilder.MasterLocator
  overload: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator.MinMasters*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator.ClientLocal
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator.ClientLocal
  id: ClientLocal
  parent: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator
  langs:
  - csharp
  - vb
  name: ClientLocal
  nameWithType: QueueBuilder.MasterLocator.ClientLocal
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator.ClientLocal
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ClientLocal
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
    startLine: 29
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public static QueueBuilder.MasterLocator ClientLocal { get; }
    parameters: []
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator
    content.vb: Public Shared ReadOnly Property ClientLocal As QueueBuilder.MasterLocator
  overload: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator.ClientLocal*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator.Random
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator.Random
  id: Random
  parent: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator
  langs:
  - csharp
  - vb
  name: Random
  nameWithType: QueueBuilder.MasterLocator.Random
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator.Random
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Random
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
    startLine: 31
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public static QueueBuilder.MasterLocator Random { get; }
    parameters: []
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator
    content.vb: Public Shared ReadOnly Property Random As QueueBuilder.MasterLocator
  overload: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator.Random*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator.Value
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator.Value
  id: Value
  parent: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: QueueBuilder.MasterLocator.Value
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator.Value
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Value
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
    startLine: 33
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public string Value { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Value As String
  overload: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator.Value*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Steeltoe.Messaging.RabbitMQ.Config
  commentId: N:Steeltoe.Messaging.RabbitMQ.Config
  name: Steeltoe.Messaging.RabbitMQ.Config
  nameWithType: Steeltoe.Messaging.RabbitMQ.Config
  fullName: Steeltoe.Messaging.RabbitMQ.Config
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator.MinMasters*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator.MinMasters
  name: MinMasters
  nameWithType: QueueBuilder.MasterLocator.MinMasters
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator.MinMasters
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator
  parent: Steeltoe.Messaging.RabbitMQ.Config
  name: QueueBuilder.MasterLocator
  nameWithType: QueueBuilder.MasterLocator
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator.ClientLocal*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator.ClientLocal
  name: ClientLocal
  nameWithType: QueueBuilder.MasterLocator.ClientLocal
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator.ClientLocal
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator.Random*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator.Random
  name: Random
  nameWithType: QueueBuilder.MasterLocator.Random
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator.Random
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator.Value*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator.Value
  name: Value
  nameWithType: QueueBuilder.MasterLocator.Value
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator.Value
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
