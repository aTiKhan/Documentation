### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  commentId: T:Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  id: RabbitDestination
  parent: Steeltoe.Messaging.RabbitMQ.Core
  children:
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.#ctor(System.String)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.#ctor(System.String,System.String)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.ExchangeName
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.op_Implicit(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination)~System.String
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.op_Implicit(System.String)~Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.QueueName
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.RoutingKey
  langs:
  - csharp
  - vb
  name: RabbitDestination
  nameWithType: RabbitDestination
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/RabbitDestination.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RabbitDestination
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/RabbitDestination.cs
    startLine: 10
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: public class RabbitDestination
    content.vb: Public Class RabbitDestination
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.QueueName
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.QueueName
  id: QueueName
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  langs:
  - csharp
  - vb
  name: QueueName
  nameWithType: RabbitDestination.QueueName
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.QueueName
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/RabbitDestination.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: QueueName
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/RabbitDestination.cs
    startLine: 15
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: public string QueueName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property QueueName As String
  overload: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.QueueName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.RoutingKey
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.RoutingKey
  id: RoutingKey
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  langs:
  - csharp
  - vb
  name: RoutingKey
  nameWithType: RabbitDestination.RoutingKey
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.RoutingKey
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/RabbitDestination.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RoutingKey
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/RabbitDestination.cs
    startLine: 23
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: public string RoutingKey { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property RoutingKey As String
  overload: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.RoutingKey*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.ExchangeName
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.ExchangeName
  id: ExchangeName
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  langs:
  - csharp
  - vb
  name: ExchangeName
  nameWithType: RabbitDestination.ExchangeName
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.ExchangeName
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/RabbitDestination.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ExchangeName
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/RabbitDestination.cs
    startLine: 31
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: public string ExchangeName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ExchangeName As String
  overload: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.ExchangeName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.#ctor(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  langs:
  - csharp
  - vb
  name: RabbitDestination(String)
  nameWithType: RabbitDestination.RabbitDestination(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.RabbitDestination(System.String)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/RabbitDestination.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/RabbitDestination.cs
    startLine: 39
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: public RabbitDestination(string queueName)
    parameters:
    - id: queueName
      type: System.String
    content.vb: Public Sub New(queueName As String)
  overload: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.#ctor(System.String,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  langs:
  - csharp
  - vb
  name: RabbitDestination(String, String)
  nameWithType: RabbitDestination.RabbitDestination(String, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.RabbitDestination(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/RabbitDestination.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/RabbitDestination.cs
    startLine: 44
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: public RabbitDestination(string exchangeName, string routingKey)
    parameters:
    - id: exchangeName
      type: System.String
    - id: routingKey
      type: System.String
    content.vb: Public Sub New(exchangeName As String, routingKey As String)
  overload: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.op_Implicit(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination)~System.String
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.op_Implicit(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination)~System.String
  id: op_Implicit(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination)~System.String
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  langs:
  - csharp
  - vb
  name: Implicit(RabbitDestination to String)
  nameWithType: RabbitDestination.Implicit(RabbitDestination to String)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.Implicit(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination to System.String)
  type: Operator
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/RabbitDestination.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: op_Implicit
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/RabbitDestination.cs
    startLine: 50
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: public static implicit operator string (RabbitDestination destination)
    parameters:
    - id: destination
      type: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    return:
      type: System.String
    content.vb: Public Shared Widening Operator CType(destination As RabbitDestination) As String
  overload: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.op_Implicit*
  nameWithType.vb: RabbitDestination.Widening(RabbitDestination to String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.Widening(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination to System.String)
  name.vb: Widening(RabbitDestination to String)
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.op_Implicit(System.String)~Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.op_Implicit(System.String)~Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  id: op_Implicit(System.String)~Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  langs:
  - csharp
  - vb
  name: Implicit(String to RabbitDestination)
  nameWithType: RabbitDestination.Implicit(String to RabbitDestination)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.Implicit(System.String to Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination)
  type: Operator
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/RabbitDestination.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: op_Implicit
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/RabbitDestination.cs
    startLine: 60
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: public static implicit operator RabbitDestination(string destination)
    parameters:
    - id: destination
      type: System.String
    return:
      type: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    content.vb: Public Shared Widening Operator CType(destination As String) As RabbitDestination
  overload: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.op_Implicit*
  nameWithType.vb: RabbitDestination.Widening(String to RabbitDestination)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.Widening(System.String to Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination)
  name.vb: Widening(String to RabbitDestination)
references:
- uid: Steeltoe.Messaging.RabbitMQ.Core
  commentId: N:Steeltoe.Messaging.RabbitMQ.Core
  name: Steeltoe.Messaging.RabbitMQ.Core
  nameWithType: Steeltoe.Messaging.RabbitMQ.Core
  fullName: Steeltoe.Messaging.RabbitMQ.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.QueueName*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.QueueName
  name: QueueName
  nameWithType: RabbitDestination.QueueName
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.QueueName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.RoutingKey*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.RoutingKey
  name: RoutingKey
  nameWithType: RabbitDestination.RoutingKey
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.RoutingKey
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.ExchangeName*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.ExchangeName
  name: ExchangeName
  nameWithType: RabbitDestination.ExchangeName
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.ExchangeName
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.#ctor*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.#ctor
  name: RabbitDestination
  nameWithType: RabbitDestination.RabbitDestination
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.RabbitDestination
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.op_Implicit*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.op_Implicit
  name: Implicit
  nameWithType: RabbitDestination.Implicit
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.Implicit
  nameWithType.vb: RabbitDestination.Widening
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination.Widening
  name.vb: Widening
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  commentId: T:Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  parent: Steeltoe.Messaging.RabbitMQ.Core
  name: RabbitDestination
  nameWithType: RabbitDestination
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
