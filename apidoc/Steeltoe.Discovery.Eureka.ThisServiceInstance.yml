### YamlMime:ManagedReference
items:
- uid: Steeltoe.Discovery.Eureka.ThisServiceInstance
  commentId: T:Steeltoe.Discovery.Eureka.ThisServiceInstance
  id: ThisServiceInstance
  parent: Steeltoe.Discovery.Eureka
  children:
  - Steeltoe.Discovery.Eureka.ThisServiceInstance.#ctor(IOptionsMonitor{Steeltoe.Discovery.Eureka.EurekaInstanceOptions})
  - Steeltoe.Discovery.Eureka.ThisServiceInstance.GetHost
  - Steeltoe.Discovery.Eureka.ThisServiceInstance.Host
  - Steeltoe.Discovery.Eureka.ThisServiceInstance.IsSecure
  - Steeltoe.Discovery.Eureka.ThisServiceInstance.Metadata
  - Steeltoe.Discovery.Eureka.ThisServiceInstance.Port
  - Steeltoe.Discovery.Eureka.ThisServiceInstance.SecurePort
  - Steeltoe.Discovery.Eureka.ThisServiceInstance.ServiceId
  - Steeltoe.Discovery.Eureka.ThisServiceInstance.Uri
  langs:
  - csharp
  - vb
  name: ThisServiceInstance
  nameWithType: ThisServiceInstance
  fullName: Steeltoe.Discovery.Eureka.ThisServiceInstance
  type: Class
  source:
    remote:
      path: src/Discovery/src/Eureka/ThisServiceInstance.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ThisServiceInstance
    path: ../Steeltoe/src/Discovery/src/Eureka/ThisServiceInstance.cs
    startLine: 11
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: 'public class ThisServiceInstance : IServiceInstance'
    content.vb: >-
      Public Class ThisServiceInstance

          Inherits IServiceInstance
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Discovery.Eureka.ThisServiceInstance.#ctor(IOptionsMonitor{Steeltoe.Discovery.Eureka.EurekaInstanceOptions})
  commentId: M:Steeltoe.Discovery.Eureka.ThisServiceInstance.#ctor(IOptionsMonitor{Steeltoe.Discovery.Eureka.EurekaInstanceOptions})
  id: '#ctor(IOptionsMonitor{Steeltoe.Discovery.Eureka.EurekaInstanceOptions})'
  parent: Steeltoe.Discovery.Eureka.ThisServiceInstance
  langs:
  - csharp
  - vb
  name: ThisServiceInstance(IOptionsMonitor<EurekaInstanceOptions>)
  nameWithType: ThisServiceInstance.ThisServiceInstance(IOptionsMonitor<EurekaInstanceOptions>)
  fullName: Steeltoe.Discovery.Eureka.ThisServiceInstance.ThisServiceInstance(IOptionsMonitor<Steeltoe.Discovery.Eureka.EurekaInstanceOptions>)
  type: Constructor
  source:
    remote:
      path: src/Discovery/src/Eureka/ThisServiceInstance.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Discovery/src/Eureka/ThisServiceInstance.cs
    startLine: 23
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: public ThisServiceInstance(IOptionsMonitor<EurekaInstanceOptions> instConfig)
    parameters:
    - id: instConfig
      type: IOptionsMonitor{Steeltoe.Discovery.Eureka.EurekaInstanceOptions}
    content.vb: Public Sub New(instConfig As IOptionsMonitor(Of EurekaInstanceOptions))
  overload: Steeltoe.Discovery.Eureka.ThisServiceInstance.#ctor*
  nameWithType.vb: ThisServiceInstance.ThisServiceInstance(IOptionsMonitor(Of EurekaInstanceOptions))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Discovery.Eureka.ThisServiceInstance.ThisServiceInstance(IOptionsMonitor(Of Steeltoe.Discovery.Eureka.EurekaInstanceOptions))
  name.vb: ThisServiceInstance(IOptionsMonitor(Of EurekaInstanceOptions))
- uid: Steeltoe.Discovery.Eureka.ThisServiceInstance.GetHost
  commentId: M:Steeltoe.Discovery.Eureka.ThisServiceInstance.GetHost
  id: GetHost
  parent: Steeltoe.Discovery.Eureka.ThisServiceInstance
  langs:
  - csharp
  - vb
  name: GetHost()
  nameWithType: ThisServiceInstance.GetHost()
  fullName: Steeltoe.Discovery.Eureka.ThisServiceInstance.GetHost()
  type: Method
  source:
    remote:
      path: src/Discovery/src/Eureka/ThisServiceInstance.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetHost
    path: ../Steeltoe/src/Discovery/src/Eureka/ThisServiceInstance.cs
    startLine: 28
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: public string GetHost()
    return:
      type: System.String
    content.vb: Public Function GetHost As String
  overload: Steeltoe.Discovery.Eureka.ThisServiceInstance.GetHost*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Eureka.ThisServiceInstance.IsSecure
  commentId: P:Steeltoe.Discovery.Eureka.ThisServiceInstance.IsSecure
  id: IsSecure
  parent: Steeltoe.Discovery.Eureka.ThisServiceInstance
  langs:
  - csharp
  - vb
  name: IsSecure
  nameWithType: ThisServiceInstance.IsSecure
  fullName: Steeltoe.Discovery.Eureka.ThisServiceInstance.IsSecure
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/ThisServiceInstance.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsSecure
    path: ../Steeltoe/src/Discovery/src/Eureka/ThisServiceInstance.cs
    startLine: 33
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: public bool IsSecure { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsSecure As Boolean
  overload: Steeltoe.Discovery.Eureka.ThisServiceInstance.IsSecure*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Discovery.Eureka.ThisServiceInstance.Metadata
  commentId: P:Steeltoe.Discovery.Eureka.ThisServiceInstance.Metadata
  id: Metadata
  parent: Steeltoe.Discovery.Eureka.ThisServiceInstance
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: ThisServiceInstance.Metadata
  fullName: Steeltoe.Discovery.Eureka.ThisServiceInstance.Metadata
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/ThisServiceInstance.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Metadata
    path: ../Steeltoe/src/Discovery/src/Eureka/ThisServiceInstance.cs
    startLine: 35
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: public IDictionary<string, string> Metadata { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    content.vb: Public ReadOnly Property Metadata As IDictionary(Of String, String)
  overload: Steeltoe.Discovery.Eureka.ThisServiceInstance.Metadata*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Discovery.Eureka.ThisServiceInstance.Port
  commentId: P:Steeltoe.Discovery.Eureka.ThisServiceInstance.Port
  id: Port
  parent: Steeltoe.Discovery.Eureka.ThisServiceInstance
  langs:
  - csharp
  - vb
  name: Port
  nameWithType: ThisServiceInstance.Port
  fullName: Steeltoe.Discovery.Eureka.ThisServiceInstance.Port
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/ThisServiceInstance.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Port
    path: ../Steeltoe/src/Discovery/src/Eureka/ThisServiceInstance.cs
    startLine: 37
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: public int Port { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Port As Integer
  overload: Steeltoe.Discovery.Eureka.ThisServiceInstance.Port*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Discovery.Eureka.ThisServiceInstance.SecurePort
  commentId: P:Steeltoe.Discovery.Eureka.ThisServiceInstance.SecurePort
  id: SecurePort
  parent: Steeltoe.Discovery.Eureka.ThisServiceInstance
  langs:
  - csharp
  - vb
  name: SecurePort
  nameWithType: ThisServiceInstance.SecurePort
  fullName: Steeltoe.Discovery.Eureka.ThisServiceInstance.SecurePort
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/ThisServiceInstance.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SecurePort
    path: ../Steeltoe/src/Discovery/src/Eureka/ThisServiceInstance.cs
    startLine: 39
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: public int SecurePort { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property SecurePort As Integer
  overload: Steeltoe.Discovery.Eureka.ThisServiceInstance.SecurePort*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Discovery.Eureka.ThisServiceInstance.ServiceId
  commentId: P:Steeltoe.Discovery.Eureka.ThisServiceInstance.ServiceId
  id: ServiceId
  parent: Steeltoe.Discovery.Eureka.ThisServiceInstance
  langs:
  - csharp
  - vb
  name: ServiceId
  nameWithType: ThisServiceInstance.ServiceId
  fullName: Steeltoe.Discovery.Eureka.ThisServiceInstance.ServiceId
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/ThisServiceInstance.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ServiceId
    path: ../Steeltoe/src/Discovery/src/Eureka/ThisServiceInstance.cs
    startLine: 41
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: public string ServiceId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ServiceId As String
  overload: Steeltoe.Discovery.Eureka.ThisServiceInstance.ServiceId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Discovery.Eureka.ThisServiceInstance.Uri
  commentId: P:Steeltoe.Discovery.Eureka.ThisServiceInstance.Uri
  id: Uri
  parent: Steeltoe.Discovery.Eureka.ThisServiceInstance
  langs:
  - csharp
  - vb
  name: Uri
  nameWithType: ThisServiceInstance.Uri
  fullName: Steeltoe.Discovery.Eureka.ThisServiceInstance.Uri
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/ThisServiceInstance.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Uri
    path: ../Steeltoe/src/Discovery/src/Eureka/ThisServiceInstance.cs
    startLine: 43
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: public Uri Uri { get; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public ReadOnly Property Uri As Uri
  overload: Steeltoe.Discovery.Eureka.ThisServiceInstance.Uri*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Discovery.Eureka.ThisServiceInstance.Host
  commentId: P:Steeltoe.Discovery.Eureka.ThisServiceInstance.Host
  id: Host
  parent: Steeltoe.Discovery.Eureka.ThisServiceInstance
  langs:
  - csharp
  - vb
  name: Host
  nameWithType: ThisServiceInstance.Host
  fullName: Steeltoe.Discovery.Eureka.ThisServiceInstance.Host
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/ThisServiceInstance.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Host
    path: ../Steeltoe/src/Discovery/src/Eureka/ThisServiceInstance.cs
    startLine: 54
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: public string Host { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Host As String
  overload: Steeltoe.Discovery.Eureka.ThisServiceInstance.Host*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Steeltoe.Discovery.Eureka
  commentId: N:Steeltoe.Discovery.Eureka
  name: Steeltoe.Discovery.Eureka
  nameWithType: Steeltoe.Discovery.Eureka
  fullName: Steeltoe.Discovery.Eureka
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Discovery.Eureka.ThisServiceInstance.#ctor*
  commentId: Overload:Steeltoe.Discovery.Eureka.ThisServiceInstance.#ctor
  name: ThisServiceInstance
  nameWithType: ThisServiceInstance.ThisServiceInstance
  fullName: Steeltoe.Discovery.Eureka.ThisServiceInstance.ThisServiceInstance
- uid: IOptionsMonitor{Steeltoe.Discovery.Eureka.EurekaInstanceOptions}
  commentId: '!:IOptionsMonitor{Steeltoe.Discovery.Eureka.EurekaInstanceOptions}'
  definition: IOptionsMonitor`1
  name: IOptionsMonitor<EurekaInstanceOptions>
  nameWithType: IOptionsMonitor<EurekaInstanceOptions>
  fullName: IOptionsMonitor<Steeltoe.Discovery.Eureka.EurekaInstanceOptions>
  nameWithType.vb: IOptionsMonitor(Of EurekaInstanceOptions)
  fullName.vb: IOptionsMonitor(Of Steeltoe.Discovery.Eureka.EurekaInstanceOptions)
  name.vb: IOptionsMonitor(Of EurekaInstanceOptions)
  spec.csharp:
  - uid: IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: IOptionsMonitor
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Discovery.Eureka.EurekaInstanceOptions
    name: EurekaInstanceOptions
    nameWithType: EurekaInstanceOptions
    fullName: Steeltoe.Discovery.Eureka.EurekaInstanceOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: IOptionsMonitor
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Discovery.Eureka.EurekaInstanceOptions
    name: EurekaInstanceOptions
    nameWithType: EurekaInstanceOptions
    fullName: Steeltoe.Discovery.Eureka.EurekaInstanceOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: IOptionsMonitor`1
  isExternal: true
  name: IOptionsMonitor<>
  nameWithType: IOptionsMonitor<>
  fullName: IOptionsMonitor<>
  nameWithType.vb: IOptionsMonitor(Of )
  fullName.vb: IOptionsMonitor(Of )
  name.vb: IOptionsMonitor(Of )
  spec.csharp:
  - uid: IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: IOptionsMonitor
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: IOptionsMonitor
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Eureka.ThisServiceInstance.GetHost*
  commentId: Overload:Steeltoe.Discovery.Eureka.ThisServiceInstance.GetHost
  name: GetHost
  nameWithType: ThisServiceInstance.GetHost
  fullName: Steeltoe.Discovery.Eureka.ThisServiceInstance.GetHost
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Discovery.Eureka.ThisServiceInstance.IsSecure*
  commentId: Overload:Steeltoe.Discovery.Eureka.ThisServiceInstance.IsSecure
  name: IsSecure
  nameWithType: ThisServiceInstance.IsSecure
  fullName: Steeltoe.Discovery.Eureka.ThisServiceInstance.IsSecure
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Discovery.Eureka.ThisServiceInstance.Metadata*
  commentId: Overload:Steeltoe.Discovery.Eureka.ThisServiceInstance.Metadata
  name: Metadata
  nameWithType: ThisServiceInstance.Metadata
  fullName: Steeltoe.Discovery.Eureka.ThisServiceInstance.Metadata
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Discovery.Eureka.ThisServiceInstance.Port*
  commentId: Overload:Steeltoe.Discovery.Eureka.ThisServiceInstance.Port
  name: Port
  nameWithType: ThisServiceInstance.Port
  fullName: Steeltoe.Discovery.Eureka.ThisServiceInstance.Port
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Steeltoe.Discovery.Eureka.ThisServiceInstance.SecurePort*
  commentId: Overload:Steeltoe.Discovery.Eureka.ThisServiceInstance.SecurePort
  name: SecurePort
  nameWithType: ThisServiceInstance.SecurePort
  fullName: Steeltoe.Discovery.Eureka.ThisServiceInstance.SecurePort
- uid: Steeltoe.Discovery.Eureka.ThisServiceInstance.ServiceId*
  commentId: Overload:Steeltoe.Discovery.Eureka.ThisServiceInstance.ServiceId
  name: ServiceId
  nameWithType: ThisServiceInstance.ServiceId
  fullName: Steeltoe.Discovery.Eureka.ThisServiceInstance.ServiceId
- uid: Steeltoe.Discovery.Eureka.ThisServiceInstance.Uri*
  commentId: Overload:Steeltoe.Discovery.Eureka.ThisServiceInstance.Uri
  name: Uri
  nameWithType: ThisServiceInstance.Uri
  fullName: Steeltoe.Discovery.Eureka.ThisServiceInstance.Uri
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Steeltoe.Discovery.Eureka.ThisServiceInstance.Host*
  commentId: Overload:Steeltoe.Discovery.Eureka.ThisServiceInstance.Host
  name: Host
  nameWithType: ThisServiceInstance.Host
  fullName: Steeltoe.Discovery.Eureka.ThisServiceInstance.Host
