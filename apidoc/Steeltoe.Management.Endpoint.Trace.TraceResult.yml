### YamlMime:ManagedReference
items:
- uid: Steeltoe.Management.Endpoint.Trace.TraceResult
  commentId: T:Steeltoe.Management.Endpoint.Trace.TraceResult
  id: TraceResult
  parent: Steeltoe.Management.Endpoint.Trace
  children:
  - Steeltoe.Management.Endpoint.Trace.TraceResult.#ctor(System.Int64,System.Collections.Generic.Dictionary{System.String,System.Object})
  - Steeltoe.Management.Endpoint.Trace.TraceResult.Info
  - Steeltoe.Management.Endpoint.Trace.TraceResult.TimeStamp
  langs:
  - csharp
  - vb
  name: TraceResult
  nameWithType: TraceResult
  fullName: Steeltoe.Management.Endpoint.Trace.TraceResult
  type: Class
  source:
    remote:
      path: src/Management/src/EndpointBase/Trace/TraceResult.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: TraceResult
    path: ../Steeltoe/src/Management/src/EndpointBase/Trace/TraceResult.cs
    startLine: 10
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Trace
  syntax:
    content: public class TraceResult
    content.vb: Public Class TraceResult
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Management.Endpoint.Trace.TraceResult.#ctor(System.Int64,System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:Steeltoe.Management.Endpoint.Trace.TraceResult.#ctor(System.Int64,System.Collections.Generic.Dictionary{System.String,System.Object})
  id: '#ctor(System.Int64,System.Collections.Generic.Dictionary{System.String,System.Object})'
  parent: Steeltoe.Management.Endpoint.Trace.TraceResult
  langs:
  - csharp
  - vb
  name: TraceResult(Int64, Dictionary<String, Object>)
  nameWithType: TraceResult.TraceResult(Int64, Dictionary<String, Object>)
  fullName: Steeltoe.Management.Endpoint.Trace.TraceResult.TraceResult(System.Int64, System.Collections.Generic.Dictionary<System.String, System.Object>)
  type: Constructor
  source:
    remote:
      path: src/Management/src/EndpointBase/Trace/TraceResult.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Management/src/EndpointBase/Trace/TraceResult.cs
    startLine: 12
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Trace
  syntax:
    content: public TraceResult(long timestamp, Dictionary<string, object> info)
    parameters:
    - id: timestamp
      type: System.Int64
    - id: info
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    content.vb: Public Sub New(timestamp As Long, info As Dictionary(Of String, Object))
  overload: Steeltoe.Management.Endpoint.Trace.TraceResult.#ctor*
  nameWithType.vb: TraceResult.TraceResult(Int64, Dictionary(Of String, Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Management.Endpoint.Trace.TraceResult.TraceResult(System.Int64, System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: TraceResult(Int64, Dictionary(Of String, Object))
- uid: Steeltoe.Management.Endpoint.Trace.TraceResult.TimeStamp
  commentId: P:Steeltoe.Management.Endpoint.Trace.TraceResult.TimeStamp
  id: TimeStamp
  parent: Steeltoe.Management.Endpoint.Trace.TraceResult
  langs:
  - csharp
  - vb
  name: TimeStamp
  nameWithType: TraceResult.TimeStamp
  fullName: Steeltoe.Management.Endpoint.Trace.TraceResult.TimeStamp
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointBase/Trace/TraceResult.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: TimeStamp
    path: ../Steeltoe/src/Management/src/EndpointBase/Trace/TraceResult.cs
    startLine: 18
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Trace
  syntax:
    content: >-
      [JsonPropertyName("timestamp")]

      public long TimeStamp { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: >-
      <JsonPropertyName("timestamp")>

      Public ReadOnly Property TimeStamp As Long
  overload: Steeltoe.Management.Endpoint.Trace.TraceResult.TimeStamp*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: timestamp
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Management.Endpoint.Trace.TraceResult.Info
  commentId: P:Steeltoe.Management.Endpoint.Trace.TraceResult.Info
  id: Info
  parent: Steeltoe.Management.Endpoint.Trace.TraceResult
  langs:
  - csharp
  - vb
  name: Info
  nameWithType: TraceResult.Info
  fullName: Steeltoe.Management.Endpoint.Trace.TraceResult.Info
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointBase/Trace/TraceResult.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Info
    path: ../Steeltoe/src/Management/src/EndpointBase/Trace/TraceResult.cs
    startLine: 21
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Trace
  syntax:
    content: >-
      [JsonPropertyName("info")]

      public Dictionary<string, object> Info { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    content.vb: >-
      <JsonPropertyName("info")>

      Public ReadOnly Property Info As Dictionary(Of String, Object)
  overload: Steeltoe.Management.Endpoint.Trace.TraceResult.Info*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: info
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Steeltoe.Management.Endpoint.Trace
  commentId: N:Steeltoe.Management.Endpoint.Trace
  name: Steeltoe.Management.Endpoint.Trace
  nameWithType: Steeltoe.Management.Endpoint.Trace
  fullName: Steeltoe.Management.Endpoint.Trace
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Management.Endpoint.Trace.TraceResult.#ctor*
  commentId: Overload:Steeltoe.Management.Endpoint.Trace.TraceResult.#ctor
  name: TraceResult
  nameWithType: TraceResult.TraceResult
  fullName: Steeltoe.Management.Endpoint.Trace.TraceResult.TraceResult
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Object>
  nameWithType: Dictionary<String, Object>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Management.Endpoint.Trace.TraceResult.TimeStamp*
  commentId: Overload:Steeltoe.Management.Endpoint.Trace.TraceResult.TimeStamp
  name: TimeStamp
  nameWithType: TraceResult.TimeStamp
  fullName: Steeltoe.Management.Endpoint.Trace.TraceResult.TimeStamp
- uid: Steeltoe.Management.Endpoint.Trace.TraceResult.Info*
  commentId: Overload:Steeltoe.Management.Endpoint.Trace.TraceResult.Info
  name: Info
  nameWithType: TraceResult.Info
  fullName: Steeltoe.Management.Endpoint.Trace.TraceResult.Info
