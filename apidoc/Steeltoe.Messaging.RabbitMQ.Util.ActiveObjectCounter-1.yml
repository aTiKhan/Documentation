### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1
  commentId: T:Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1
  id: ActiveObjectCounter`1
  parent: Steeltoe.Messaging.RabbitMQ.Util
  children:
  - Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1.Add(`0)
  - Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1.Count
  - Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1.Deactivate
  - Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1.IsActive
  - Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1.Release(`0)
  - Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1.Reset
  - Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1.Wait(System.TimeSpan)
  langs:
  - csharp
  - vb
  name: ActiveObjectCounter<T>
  nameWithType: ActiveObjectCounter<T>
  fullName: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter<T>
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Util/ActiveObjectCounter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ActiveObjectCounter
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Util/ActiveObjectCounter.cs
    startLine: 11
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Util
  syntax:
    content: public class ActiveObjectCounter<T>
    typeParameters:
    - id: T
    content.vb: Public Class ActiveObjectCounter(Of T)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: ActiveObjectCounter(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter(Of T)
  name.vb: ActiveObjectCounter(Of T)
- uid: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1.Add(`0)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1.Add(`0)
  id: Add(`0)
  parent: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1
  langs:
  - csharp
  - vb
  name: Add(T)
  nameWithType: ActiveObjectCounter<T>.Add(T)
  fullName: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter<T>.Add(T)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Util/ActiveObjectCounter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Add
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Util/ActiveObjectCounter.cs
    startLine: 15
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Util
  syntax:
    content: public void Add(T activeObject)
    parameters:
    - id: activeObject
      type: '{T}'
    content.vb: Public Sub Add(activeObject As T)
  overload: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1.Add*
  nameWithType.vb: ActiveObjectCounter(Of T).Add(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter(Of T).Add(T)
- uid: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1.Release(`0)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1.Release(`0)
  id: Release(`0)
  parent: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1
  langs:
  - csharp
  - vb
  name: Release(T)
  nameWithType: ActiveObjectCounter<T>.Release(T)
  fullName: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter<T>.Release(T)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Util/ActiveObjectCounter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Release
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Util/ActiveObjectCounter.cs
    startLine: 21
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Util
  syntax:
    content: public void Release(T activeObject)
    parameters:
    - id: activeObject
      type: '{T}'
    content.vb: Public Sub Release(activeObject As T)
  overload: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1.Release*
  nameWithType.vb: ActiveObjectCounter(Of T).Release(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter(Of T).Release(T)
- uid: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1.Wait(System.TimeSpan)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1.Wait(System.TimeSpan)
  id: Wait(System.TimeSpan)
  parent: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1
  langs:
  - csharp
  - vb
  name: Wait(TimeSpan)
  nameWithType: ActiveObjectCounter<T>.Wait(TimeSpan)
  fullName: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter<T>.Wait(System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Util/ActiveObjectCounter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Wait
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Util/ActiveObjectCounter.cs
    startLine: 29
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Util
  syntax:
    content: public bool Wait(TimeSpan timeout)
    parameters:
    - id: timeout
      type: System.TimeSpan
    return:
      type: System.Boolean
    content.vb: Public Function Wait(timeout As TimeSpan) As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1.Wait*
  nameWithType.vb: ActiveObjectCounter(Of T).Wait(TimeSpan)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter(Of T).Wait(System.TimeSpan)
- uid: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1.Count
  commentId: P:Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1.Count
  id: Count
  parent: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: ActiveObjectCounter<T>.Count
  fullName: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter<T>.Count
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Util/ActiveObjectCounter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Count
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Util/ActiveObjectCounter.cs
    startLine: 60
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Util
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1.Count*
  nameWithType.vb: ActiveObjectCounter(Of T).Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter(Of T).Count
- uid: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1.IsActive
  commentId: P:Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1.IsActive
  id: IsActive
  parent: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1
  langs:
  - csharp
  - vb
  name: IsActive
  nameWithType: ActiveObjectCounter<T>.IsActive
  fullName: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter<T>.IsActive
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Util/ActiveObjectCounter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsActive
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Util/ActiveObjectCounter.cs
    startLine: 62
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Util
  syntax:
    content: public bool IsActive { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsActive As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1.IsActive*
  nameWithType.vb: ActiveObjectCounter(Of T).IsActive
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter(Of T).IsActive
- uid: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1.Deactivate
  commentId: M:Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1.Deactivate
  id: Deactivate
  parent: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1
  langs:
  - csharp
  - vb
  name: Deactivate()
  nameWithType: ActiveObjectCounter<T>.Deactivate()
  fullName: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter<T>.Deactivate()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Util/ActiveObjectCounter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Deactivate
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Util/ActiveObjectCounter.cs
    startLine: 64
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Util
  syntax:
    content: public void Deactivate()
    content.vb: Public Sub Deactivate
  overload: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1.Deactivate*
  nameWithType.vb: ActiveObjectCounter(Of T).Deactivate()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter(Of T).Deactivate()
- uid: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1.Reset
  commentId: M:Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1.Reset
  id: Reset
  parent: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: ActiveObjectCounter<T>.Reset()
  fullName: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter<T>.Reset()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Util/ActiveObjectCounter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Reset
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Util/ActiveObjectCounter.cs
    startLine: 66
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Util
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset
  overload: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1.Reset*
  nameWithType.vb: ActiveObjectCounter(Of T).Reset()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter(Of T).Reset()
references:
- uid: Steeltoe.Messaging.RabbitMQ.Util
  commentId: N:Steeltoe.Messaging.RabbitMQ.Util
  name: Steeltoe.Messaging.RabbitMQ.Util
  nameWithType: Steeltoe.Messaging.RabbitMQ.Util
  fullName: Steeltoe.Messaging.RabbitMQ.Util
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1.Add*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1.Add
  name: Add
  nameWithType: ActiveObjectCounter<T>.Add
  fullName: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter<T>.Add
  nameWithType.vb: ActiveObjectCounter(Of T).Add
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter(Of T).Add
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1.Release*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1.Release
  name: Release
  nameWithType: ActiveObjectCounter<T>.Release
  fullName: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter<T>.Release
  nameWithType.vb: ActiveObjectCounter(Of T).Release
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter(Of T).Release
- uid: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1.Wait*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1.Wait
  name: Wait
  nameWithType: ActiveObjectCounter<T>.Wait
  fullName: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter<T>.Wait
  nameWithType.vb: ActiveObjectCounter(Of T).Wait
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter(Of T).Wait
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1.Count*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1.Count
  name: Count
  nameWithType: ActiveObjectCounter<T>.Count
  fullName: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter<T>.Count
  nameWithType.vb: ActiveObjectCounter(Of T).Count
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter(Of T).Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1.IsActive*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1.IsActive
  name: IsActive
  nameWithType: ActiveObjectCounter<T>.IsActive
  fullName: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter<T>.IsActive
  nameWithType.vb: ActiveObjectCounter(Of T).IsActive
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter(Of T).IsActive
- uid: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1.Deactivate*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1.Deactivate
  name: Deactivate
  nameWithType: ActiveObjectCounter<T>.Deactivate
  fullName: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter<T>.Deactivate
  nameWithType.vb: ActiveObjectCounter(Of T).Deactivate
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter(Of T).Deactivate
- uid: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1.Reset*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1.Reset
  name: Reset
  nameWithType: ActiveObjectCounter<T>.Reset
  fullName: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter<T>.Reset
  nameWithType.vb: ActiveObjectCounter(Of T).Reset
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter(Of T).Reset
