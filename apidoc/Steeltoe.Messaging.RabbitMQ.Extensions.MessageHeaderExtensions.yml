### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  commentId: T:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  id: MessageHeaderExtensions
  parent: Steeltoe.Messaging.RabbitMQ.Extensions
  children:
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.AppId(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ClusterId(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerQueue(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerTag(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentEncoding(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentLength(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentType(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.CorrelationId(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Delay(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryMode(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryTag(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Expiration(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.FinalRetryForMessageWithNoId(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.InferredArgumentType(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsContentLengthSet(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsDeliveryTagSet(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsFinalRetryForMessageWithNoId(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.LastInBatch(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageCount(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageId(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Priority(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.PublishSequenceNumber(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDelay(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDeliveryMode(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedExchange(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedRoutingKey(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedUserId(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Redelivered(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyTo(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyToAddress(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Target(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.TargetMethod(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Timestamp(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Type(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.UserId(Steeltoe.Messaging.IMessageHeaders)
  langs:
  - csharp
  - vb
  name: MessageHeaderExtensions
  nameWithType: MessageHeaderExtensions
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MessageHeaderExtensions
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
    startLine: 11
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static class MessageHeaderExtensions
    content.vb: Public Module MessageHeaderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.AppId(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.AppId(Steeltoe.Messaging.IMessageHeaders)
  id: AppId(Steeltoe.Messaging.IMessageHeaders)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  langs:
  - csharp
  - vb
  name: AppId(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.AppId(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.AppId(Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AppId
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
    startLine: 13
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static string AppId(this IMessageHeaders headers)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AppId(headers As IMessageHeaders) As String
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.AppId*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ClusterId(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ClusterId(Steeltoe.Messaging.IMessageHeaders)
  id: ClusterId(Steeltoe.Messaging.IMessageHeaders)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  langs:
  - csharp
  - vb
  name: ClusterId(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.ClusterId(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ClusterId(Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ClusterId
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
    startLine: 18
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static string ClusterId(this IMessageHeaders headers)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ClusterId(headers As IMessageHeaders) As String
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ClusterId*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerQueue(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerQueue(Steeltoe.Messaging.IMessageHeaders)
  id: ConsumerQueue(Steeltoe.Messaging.IMessageHeaders)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  langs:
  - csharp
  - vb
  name: ConsumerQueue(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.ConsumerQueue(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerQueue(Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConsumerQueue
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
    startLine: 23
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static string ConsumerQueue(this IMessageHeaders headers)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ConsumerQueue(headers As IMessageHeaders) As String
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerQueue*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerTag(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerTag(Steeltoe.Messaging.IMessageHeaders)
  id: ConsumerTag(Steeltoe.Messaging.IMessageHeaders)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  langs:
  - csharp
  - vb
  name: ConsumerTag(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.ConsumerTag(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerTag(Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConsumerTag
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
    startLine: 28
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static string ConsumerTag(this IMessageHeaders headers)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ConsumerTag(headers As IMessageHeaders) As String
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerTag*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentEncoding(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentEncoding(Steeltoe.Messaging.IMessageHeaders)
  id: ContentEncoding(Steeltoe.Messaging.IMessageHeaders)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  langs:
  - csharp
  - vb
  name: ContentEncoding(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.ContentEncoding(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentEncoding(Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ContentEncoding
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
    startLine: 33
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static string ContentEncoding(this IMessageHeaders headers)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ContentEncoding(headers As IMessageHeaders) As String
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentEncoding*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentLength(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentLength(Steeltoe.Messaging.IMessageHeaders)
  id: ContentLength(Steeltoe.Messaging.IMessageHeaders)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  langs:
  - csharp
  - vb
  name: ContentLength(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.ContentLength(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentLength(Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ContentLength
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
    startLine: 38
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static long? ContentLength(this IMessageHeaders headers)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ContentLength(headers As IMessageHeaders) As Long?
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentLength*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsContentLengthSet(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsContentLengthSet(Steeltoe.Messaging.IMessageHeaders)
  id: IsContentLengthSet(Steeltoe.Messaging.IMessageHeaders)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  langs:
  - csharp
  - vb
  name: IsContentLengthSet(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.IsContentLengthSet(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsContentLengthSet(Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsContentLengthSet
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
    startLine: 43
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static bool IsContentLengthSet(this IMessageHeaders headers)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsContentLengthSet(headers As IMessageHeaders) As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsContentLengthSet*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentType(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentType(Steeltoe.Messaging.IMessageHeaders)
  id: ContentType(Steeltoe.Messaging.IMessageHeaders)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  langs:
  - csharp
  - vb
  name: ContentType(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.ContentType(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentType(Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ContentType
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
    startLine: 54
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static string ContentType(this IMessageHeaders headers)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ContentType(headers As IMessageHeaders) As String
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.CorrelationId(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.CorrelationId(Steeltoe.Messaging.IMessageHeaders)
  id: CorrelationId(Steeltoe.Messaging.IMessageHeaders)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  langs:
  - csharp
  - vb
  name: CorrelationId(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.CorrelationId(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.CorrelationId(Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CorrelationId
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
    startLine: 60
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static string CorrelationId(this IMessageHeaders headers)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CorrelationId(headers As IMessageHeaders) As String
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.CorrelationId*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Delay(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Delay(Steeltoe.Messaging.IMessageHeaders)
  id: Delay(Steeltoe.Messaging.IMessageHeaders)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  langs:
  - csharp
  - vb
  name: Delay(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.Delay(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Delay(Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Delay
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
    startLine: 65
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static int? Delay(this IMessageHeaders headers)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Delay(headers As IMessageHeaders) As Integer?
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Delay*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryMode(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryMode(Steeltoe.Messaging.IMessageHeaders)
  id: DeliveryMode(Steeltoe.Messaging.IMessageHeaders)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  langs:
  - csharp
  - vb
  name: DeliveryMode(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.DeliveryMode(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryMode(Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DeliveryMode
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
    startLine: 70
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static MessageDeliveryMode? DeliveryMode(this IMessageHeaders headers)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    return:
      type: System.Nullable{Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeliveryMode(headers As IMessageHeaders) As MessageDeliveryMode?
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryMode*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryTag(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryTag(Steeltoe.Messaging.IMessageHeaders)
  id: DeliveryTag(Steeltoe.Messaging.IMessageHeaders)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  langs:
  - csharp
  - vb
  name: DeliveryTag(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.DeliveryTag(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryTag(Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DeliveryTag
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
    startLine: 75
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static ulong? DeliveryTag(this IMessageHeaders headers)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    return:
      type: System.Nullable{System.UInt64}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeliveryTag(headers As IMessageHeaders) As ULong?
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryTag*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsDeliveryTagSet(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsDeliveryTagSet(Steeltoe.Messaging.IMessageHeaders)
  id: IsDeliveryTagSet(Steeltoe.Messaging.IMessageHeaders)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  langs:
  - csharp
  - vb
  name: IsDeliveryTagSet(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.IsDeliveryTagSet(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsDeliveryTagSet(Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsDeliveryTagSet
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
    startLine: 80
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static bool IsDeliveryTagSet(this IMessageHeaders headers)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsDeliveryTagSet(headers As IMessageHeaders) As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsDeliveryTagSet*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Expiration(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Expiration(Steeltoe.Messaging.IMessageHeaders)
  id: Expiration(Steeltoe.Messaging.IMessageHeaders)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  langs:
  - csharp
  - vb
  name: Expiration(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.Expiration(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Expiration(Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Expiration
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
    startLine: 91
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static string Expiration(this IMessageHeaders headers)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Expiration(headers As IMessageHeaders) As String
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Expiration*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.InferredArgumentType(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.InferredArgumentType(Steeltoe.Messaging.IMessageHeaders)
  id: InferredArgumentType(Steeltoe.Messaging.IMessageHeaders)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  langs:
  - csharp
  - vb
  name: InferredArgumentType(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.InferredArgumentType(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.InferredArgumentType(Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: InferredArgumentType
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
    startLine: 96
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static Type InferredArgumentType(this IMessageHeaders headers)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    return:
      type: System.Type
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function InferredArgumentType(headers As IMessageHeaders) As Type
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.InferredArgumentType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageCount(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageCount(Steeltoe.Messaging.IMessageHeaders)
  id: MessageCount(Steeltoe.Messaging.IMessageHeaders)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  langs:
  - csharp
  - vb
  name: MessageCount(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.MessageCount(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageCount(Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MessageCount
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
    startLine: 101
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static uint? MessageCount(this IMessageHeaders headers)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    return:
      type: System.Nullable{System.UInt32}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function MessageCount(headers As IMessageHeaders) As UInteger?
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageCount*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageId(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageId(Steeltoe.Messaging.IMessageHeaders)
  id: MessageId(Steeltoe.Messaging.IMessageHeaders)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  langs:
  - csharp
  - vb
  name: MessageId(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.MessageId(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageId(Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MessageId
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
    startLine: 106
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static string MessageId(this IMessageHeaders headers)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function MessageId(headers As IMessageHeaders) As String
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageId*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Priority(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Priority(Steeltoe.Messaging.IMessageHeaders)
  id: Priority(Steeltoe.Messaging.IMessageHeaders)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  langs:
  - csharp
  - vb
  name: Priority(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.Priority(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Priority(Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Priority
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
    startLine: 111
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static int? Priority(this IMessageHeaders headers)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Priority(headers As IMessageHeaders) As Integer?
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Priority*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.PublishSequenceNumber(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.PublishSequenceNumber(Steeltoe.Messaging.IMessageHeaders)
  id: PublishSequenceNumber(Steeltoe.Messaging.IMessageHeaders)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  langs:
  - csharp
  - vb
  name: PublishSequenceNumber(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.PublishSequenceNumber(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.PublishSequenceNumber(Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: PublishSequenceNumber
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
    startLine: 116
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static ulong? PublishSequenceNumber(this IMessageHeaders headers)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    return:
      type: System.Nullable{System.UInt64}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PublishSequenceNumber(headers As IMessageHeaders) As ULong?
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.PublishSequenceNumber*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDelay(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDelay(Steeltoe.Messaging.IMessageHeaders)
  id: ReceivedDelay(Steeltoe.Messaging.IMessageHeaders)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  langs:
  - csharp
  - vb
  name: ReceivedDelay(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.ReceivedDelay(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDelay(Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReceivedDelay
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
    startLine: 121
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static int? ReceivedDelay(this IMessageHeaders headers)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ReceivedDelay(headers As IMessageHeaders) As Integer?
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDelay*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDeliveryMode(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDeliveryMode(Steeltoe.Messaging.IMessageHeaders)
  id: ReceivedDeliveryMode(Steeltoe.Messaging.IMessageHeaders)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  langs:
  - csharp
  - vb
  name: ReceivedDeliveryMode(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.ReceivedDeliveryMode(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDeliveryMode(Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReceivedDeliveryMode
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
    startLine: 126
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static MessageDeliveryMode? ReceivedDeliveryMode(this IMessageHeaders headers)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    return:
      type: System.Nullable{Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ReceivedDeliveryMode(headers As IMessageHeaders) As MessageDeliveryMode?
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDeliveryMode*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedExchange(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedExchange(Steeltoe.Messaging.IMessageHeaders)
  id: ReceivedExchange(Steeltoe.Messaging.IMessageHeaders)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  langs:
  - csharp
  - vb
  name: ReceivedExchange(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.ReceivedExchange(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedExchange(Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReceivedExchange
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
    startLine: 131
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static string ReceivedExchange(this IMessageHeaders headers)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ReceivedExchange(headers As IMessageHeaders) As String
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedExchange*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedRoutingKey(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedRoutingKey(Steeltoe.Messaging.IMessageHeaders)
  id: ReceivedRoutingKey(Steeltoe.Messaging.IMessageHeaders)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  langs:
  - csharp
  - vb
  name: ReceivedRoutingKey(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.ReceivedRoutingKey(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedRoutingKey(Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReceivedRoutingKey
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
    startLine: 136
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static string ReceivedRoutingKey(this IMessageHeaders headers)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ReceivedRoutingKey(headers As IMessageHeaders) As String
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedRoutingKey*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedUserId(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedUserId(Steeltoe.Messaging.IMessageHeaders)
  id: ReceivedUserId(Steeltoe.Messaging.IMessageHeaders)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  langs:
  - csharp
  - vb
  name: ReceivedUserId(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.ReceivedUserId(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedUserId(Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReceivedUserId
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
    startLine: 141
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static string ReceivedUserId(this IMessageHeaders headers)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ReceivedUserId(headers As IMessageHeaders) As String
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedUserId*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Redelivered(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Redelivered(Steeltoe.Messaging.IMessageHeaders)
  id: Redelivered(Steeltoe.Messaging.IMessageHeaders)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  langs:
  - csharp
  - vb
  name: Redelivered(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.Redelivered(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Redelivered(Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Redelivered
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
    startLine: 146
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static bool? Redelivered(this IMessageHeaders headers)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Redelivered(headers As IMessageHeaders) As Boolean?
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Redelivered*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyTo(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyTo(Steeltoe.Messaging.IMessageHeaders)
  id: ReplyTo(Steeltoe.Messaging.IMessageHeaders)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  langs:
  - csharp
  - vb
  name: ReplyTo(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.ReplyTo(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyTo(Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReplyTo
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
    startLine: 151
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static string ReplyTo(this IMessageHeaders headers)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ReplyTo(headers As IMessageHeaders) As String
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyTo*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyToAddress(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyToAddress(Steeltoe.Messaging.IMessageHeaders)
  id: ReplyToAddress(Steeltoe.Messaging.IMessageHeaders)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  langs:
  - csharp
  - vb
  name: ReplyToAddress(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.ReplyToAddress(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyToAddress(Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReplyToAddress
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
    startLine: 156
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static Address ReplyToAddress(this IMessageHeaders headers)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    return:
      type: Steeltoe.Messaging.RabbitMQ.Core.Address
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ReplyToAddress(headers As IMessageHeaders) As Address
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyToAddress*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Target(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Target(Steeltoe.Messaging.IMessageHeaders)
  id: Target(Steeltoe.Messaging.IMessageHeaders)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  langs:
  - csharp
  - vb
  name: Target(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.Target(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Target(Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Target
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
    startLine: 167
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static object Target(this IMessageHeaders headers)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    return:
      type: System.Object
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Target(headers As IMessageHeaders) As Object
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Target*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.TargetMethod(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.TargetMethod(Steeltoe.Messaging.IMessageHeaders)
  id: TargetMethod(Steeltoe.Messaging.IMessageHeaders)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  langs:
  - csharp
  - vb
  name: TargetMethod(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.TargetMethod(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.TargetMethod(Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: TargetMethod
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
    startLine: 172
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static MethodInfo TargetMethod(this IMessageHeaders headers)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    return:
      type: System.Reflection.MethodInfo
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TargetMethod(headers As IMessageHeaders) As MethodInfo
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.TargetMethod*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Timestamp(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Timestamp(Steeltoe.Messaging.IMessageHeaders)
  id: Timestamp(Steeltoe.Messaging.IMessageHeaders)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  langs:
  - csharp
  - vb
  name: Timestamp(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.Timestamp(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Timestamp(Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Timestamp
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
    startLine: 177
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static long? Timestamp(this IMessageHeaders headers)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Timestamp(headers As IMessageHeaders) As Long?
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Timestamp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Type(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Type(Steeltoe.Messaging.IMessageHeaders)
  id: Type(Steeltoe.Messaging.IMessageHeaders)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  langs:
  - csharp
  - vb
  name: Type(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.Type(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Type(Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Type
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
    startLine: 182
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static string Type(this IMessageHeaders headers)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Type(headers As IMessageHeaders) As String
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Type*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.UserId(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.UserId(Steeltoe.Messaging.IMessageHeaders)
  id: UserId(Steeltoe.Messaging.IMessageHeaders)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  langs:
  - csharp
  - vb
  name: UserId(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.UserId(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.UserId(Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: UserId
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
    startLine: 187
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static string UserId(this IMessageHeaders headers)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UserId(headers As IMessageHeaders) As String
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.UserId*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.FinalRetryForMessageWithNoId(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.FinalRetryForMessageWithNoId(Steeltoe.Messaging.IMessageHeaders)
  id: FinalRetryForMessageWithNoId(Steeltoe.Messaging.IMessageHeaders)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  langs:
  - csharp
  - vb
  name: FinalRetryForMessageWithNoId(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.FinalRetryForMessageWithNoId(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.FinalRetryForMessageWithNoId(Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: FinalRetryForMessageWithNoId
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
    startLine: 192
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static bool? FinalRetryForMessageWithNoId(this IMessageHeaders headers)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function FinalRetryForMessageWithNoId(headers As IMessageHeaders) As Boolean?
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.FinalRetryForMessageWithNoId*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsFinalRetryForMessageWithNoId(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsFinalRetryForMessageWithNoId(Steeltoe.Messaging.IMessageHeaders)
  id: IsFinalRetryForMessageWithNoId(Steeltoe.Messaging.IMessageHeaders)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  langs:
  - csharp
  - vb
  name: IsFinalRetryForMessageWithNoId(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.IsFinalRetryForMessageWithNoId(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsFinalRetryForMessageWithNoId(Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsFinalRetryForMessageWithNoId
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
    startLine: 197
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static bool IsFinalRetryForMessageWithNoId(this IMessageHeaders headers)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsFinalRetryForMessageWithNoId(headers As IMessageHeaders) As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsFinalRetryForMessageWithNoId*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.LastInBatch(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.LastInBatch(Steeltoe.Messaging.IMessageHeaders)
  id: LastInBatch(Steeltoe.Messaging.IMessageHeaders)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  langs:
  - csharp
  - vb
  name: LastInBatch(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.LastInBatch(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.LastInBatch(Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: LastInBatch
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageHeaderExtensions.cs
    startLine: 208
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static bool? LastInBatch(this IMessageHeaders headers)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function LastInBatch(headers As IMessageHeaders) As Boolean?
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.LastInBatch*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Steeltoe.Messaging.RabbitMQ.Extensions
  commentId: N:Steeltoe.Messaging.RabbitMQ.Extensions
  name: Steeltoe.Messaging.RabbitMQ.Extensions
  nameWithType: Steeltoe.Messaging.RabbitMQ.Extensions
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.AppId*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.AppId
  name: AppId
  nameWithType: MessageHeaderExtensions.AppId
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.AppId
- uid: Steeltoe.Messaging.IMessageHeaders
  commentId: T:Steeltoe.Messaging.IMessageHeaders
  parent: Steeltoe.Messaging
  name: IMessageHeaders
  nameWithType: IMessageHeaders
  fullName: Steeltoe.Messaging.IMessageHeaders
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ClusterId*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ClusterId
  name: ClusterId
  nameWithType: MessageHeaderExtensions.ClusterId
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ClusterId
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerQueue*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerQueue
  name: ConsumerQueue
  nameWithType: MessageHeaderExtensions.ConsumerQueue
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerQueue
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerTag*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerTag
  name: ConsumerTag
  nameWithType: MessageHeaderExtensions.ConsumerTag
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerTag
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentEncoding*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentEncoding
  name: ContentEncoding
  nameWithType: MessageHeaderExtensions.ContentEncoding
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentEncoding
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentLength*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentLength
  name: ContentLength
  nameWithType: MessageHeaderExtensions.ContentLength
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentLength
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsContentLengthSet*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsContentLengthSet
  name: IsContentLengthSet
  nameWithType: MessageHeaderExtensions.IsContentLengthSet
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsContentLengthSet
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentType*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentType
  name: ContentType
  nameWithType: MessageHeaderExtensions.ContentType
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentType
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.CorrelationId*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.CorrelationId
  name: CorrelationId
  nameWithType: MessageHeaderExtensions.CorrelationId
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.CorrelationId
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Delay*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Delay
  name: Delay
  nameWithType: MessageHeaderExtensions.Delay
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Delay
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryMode*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryMode
  name: DeliveryMode
  nameWithType: MessageHeaderExtensions.DeliveryMode
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryMode
- uid: System.Nullable{Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode}
  commentId: T:System.Nullable{Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode}
  parent: System
  definition: System.Nullable`1
  name: Nullable<MessageDeliveryMode>
  nameWithType: Nullable<MessageDeliveryMode>
  fullName: System.Nullable<Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode>
  nameWithType.vb: Nullable(Of MessageDeliveryMode)
  fullName.vb: System.Nullable(Of Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode)
  name.vb: Nullable(Of MessageDeliveryMode)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode
    name: MessageDeliveryMode
    nameWithType: MessageDeliveryMode
    fullName: Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode
    name: MessageDeliveryMode
    nameWithType: MessageDeliveryMode
    fullName: Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryTag*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryTag
  name: DeliveryTag
  nameWithType: MessageHeaderExtensions.DeliveryTag
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryTag
- uid: System.Nullable{System.UInt64}
  commentId: T:System.Nullable{System.UInt64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<UInt64>
  nameWithType: Nullable<UInt64>
  fullName: System.Nullable<System.UInt64>
  nameWithType.vb: Nullable(Of UInt64)
  fullName.vb: System.Nullable(Of System.UInt64)
  name.vb: Nullable(Of UInt64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsDeliveryTagSet*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsDeliveryTagSet
  name: IsDeliveryTagSet
  nameWithType: MessageHeaderExtensions.IsDeliveryTagSet
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsDeliveryTagSet
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Expiration*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Expiration
  name: Expiration
  nameWithType: MessageHeaderExtensions.Expiration
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Expiration
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.InferredArgumentType*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.InferredArgumentType
  name: InferredArgumentType
  nameWithType: MessageHeaderExtensions.InferredArgumentType
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.InferredArgumentType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageCount*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageCount
  name: MessageCount
  nameWithType: MessageHeaderExtensions.MessageCount
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageCount
- uid: System.Nullable{System.UInt32}
  commentId: T:System.Nullable{System.UInt32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<UInt32>
  nameWithType: Nullable<UInt32>
  fullName: System.Nullable<System.UInt32>
  nameWithType.vb: Nullable(Of UInt32)
  fullName.vb: System.Nullable(Of System.UInt32)
  name.vb: Nullable(Of UInt32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageId*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageId
  name: MessageId
  nameWithType: MessageHeaderExtensions.MessageId
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageId
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Priority*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Priority
  name: Priority
  nameWithType: MessageHeaderExtensions.Priority
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Priority
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.PublishSequenceNumber*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.PublishSequenceNumber
  name: PublishSequenceNumber
  nameWithType: MessageHeaderExtensions.PublishSequenceNumber
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.PublishSequenceNumber
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDelay*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDelay
  name: ReceivedDelay
  nameWithType: MessageHeaderExtensions.ReceivedDelay
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDelay
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDeliveryMode*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDeliveryMode
  name: ReceivedDeliveryMode
  nameWithType: MessageHeaderExtensions.ReceivedDeliveryMode
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDeliveryMode
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedExchange*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedExchange
  name: ReceivedExchange
  nameWithType: MessageHeaderExtensions.ReceivedExchange
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedExchange
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedRoutingKey*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedRoutingKey
  name: ReceivedRoutingKey
  nameWithType: MessageHeaderExtensions.ReceivedRoutingKey
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedRoutingKey
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedUserId*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedUserId
  name: ReceivedUserId
  nameWithType: MessageHeaderExtensions.ReceivedUserId
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedUserId
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Redelivered*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Redelivered
  name: Redelivered
  nameWithType: MessageHeaderExtensions.Redelivered
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Redelivered
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyTo*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyTo
  name: ReplyTo
  nameWithType: MessageHeaderExtensions.ReplyTo
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyTo
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyToAddress*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyToAddress
  name: ReplyToAddress
  nameWithType: MessageHeaderExtensions.ReplyToAddress
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyToAddress
- uid: Steeltoe.Messaging.RabbitMQ.Core.Address
  commentId: T:Steeltoe.Messaging.RabbitMQ.Core.Address
  parent: Steeltoe.Messaging.RabbitMQ.Core
  name: Address
  nameWithType: Address
  fullName: Steeltoe.Messaging.RabbitMQ.Core.Address
- uid: Steeltoe.Messaging.RabbitMQ.Core
  commentId: N:Steeltoe.Messaging.RabbitMQ.Core
  name: Steeltoe.Messaging.RabbitMQ.Core
  nameWithType: Steeltoe.Messaging.RabbitMQ.Core
  fullName: Steeltoe.Messaging.RabbitMQ.Core
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Target*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Target
  name: Target
  nameWithType: MessageHeaderExtensions.Target
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Target
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.TargetMethod*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.TargetMethod
  name: TargetMethod
  nameWithType: MessageHeaderExtensions.TargetMethod
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.TargetMethod
- uid: System.Reflection.MethodInfo
  commentId: T:System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Timestamp*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Timestamp
  name: Timestamp
  nameWithType: MessageHeaderExtensions.Timestamp
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Timestamp
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Type*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Type
  name: Type
  nameWithType: MessageHeaderExtensions.Type
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Type
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.UserId*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.UserId
  name: UserId
  nameWithType: MessageHeaderExtensions.UserId
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.UserId
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.FinalRetryForMessageWithNoId*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.FinalRetryForMessageWithNoId
  name: FinalRetryForMessageWithNoId
  nameWithType: MessageHeaderExtensions.FinalRetryForMessageWithNoId
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.FinalRetryForMessageWithNoId
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsFinalRetryForMessageWithNoId*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsFinalRetryForMessageWithNoId
  name: IsFinalRetryForMessageWithNoId
  nameWithType: MessageHeaderExtensions.IsFinalRetryForMessageWithNoId
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsFinalRetryForMessageWithNoId
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.LastInBatch*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.LastInBatch
  name: LastInBatch
  nameWithType: MessageHeaderExtensions.LastInBatch
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.LastInBatch
