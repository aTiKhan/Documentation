### YamlMime:ManagedReference
items:
- uid: Steeltoe.Integration.IIntegrationServices
  commentId: T:Steeltoe.Integration.IIntegrationServices
  id: IIntegrationServices
  parent: Steeltoe.Integration
  children:
  - Steeltoe.Integration.IIntegrationServices.ChannelResolver
  - Steeltoe.Integration.IIntegrationServices.ConversionService
  - Steeltoe.Integration.IIntegrationServices.ExpressionParser
  - Steeltoe.Integration.IIntegrationServices.IdGenerator
  - Steeltoe.Integration.IIntegrationServices.MessageBuilderFactory
  langs:
  - csharp
  - vb
  name: IIntegrationServices
  nameWithType: IIntegrationServices
  fullName: Steeltoe.Integration.IIntegrationServices
  type: Interface
  source:
    remote:
      path: src/Integration/src/Abstractions/IIntegrationServices.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IIntegrationServices
    path: ../Steeltoe/src/Integration/src/Abstractions/IIntegrationServices.cs
    startLine: 16
  assemblies:
  - Steeltoe.Integration.Abstractions
  namespace: Steeltoe.Integration
  summary: "\nA group of commonly used services used by the integration components\n"
  example: []
  syntax:
    content: public interface IIntegrationServices
    content.vb: Public Interface IIntegrationServices
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Steeltoe.Integration.IIntegrationServices.MessageBuilderFactory
  commentId: P:Steeltoe.Integration.IIntegrationServices.MessageBuilderFactory
  id: MessageBuilderFactory
  parent: Steeltoe.Integration.IIntegrationServices
  langs:
  - csharp
  - vb
  name: MessageBuilderFactory
  nameWithType: IIntegrationServices.MessageBuilderFactory
  fullName: Steeltoe.Integration.IIntegrationServices.MessageBuilderFactory
  type: Property
  source:
    remote:
      path: src/Integration/src/Abstractions/IIntegrationServices.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MessageBuilderFactory
    path: ../Steeltoe/src/Integration/src/Abstractions/IIntegrationServices.cs
    startLine: 21
  assemblies:
  - Steeltoe.Integration.Abstractions
  namespace: Steeltoe.Integration
  summary: "\nGets or sets the current message builder factory\n"
  example: []
  syntax:
    content: IMessageBuilderFactory MessageBuilderFactory { get; set; }
    parameters: []
    return:
      type: Steeltoe.Integration.Support.IMessageBuilderFactory
    content.vb: Property MessageBuilderFactory As IMessageBuilderFactory
  overload: Steeltoe.Integration.IIntegrationServices.MessageBuilderFactory*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Integration.IIntegrationServices.ChannelResolver
  commentId: P:Steeltoe.Integration.IIntegrationServices.ChannelResolver
  id: ChannelResolver
  parent: Steeltoe.Integration.IIntegrationServices
  langs:
  - csharp
  - vb
  name: ChannelResolver
  nameWithType: IIntegrationServices.ChannelResolver
  fullName: Steeltoe.Integration.IIntegrationServices.ChannelResolver
  type: Property
  source:
    remote:
      path: src/Integration/src/Abstractions/IIntegrationServices.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ChannelResolver
    path: ../Steeltoe/src/Integration/src/Abstractions/IIntegrationServices.cs
    startLine: 26
  assemblies:
  - Steeltoe.Integration.Abstractions
  namespace: Steeltoe.Integration
  summary: "\nGets or sets the current channel resolver\n"
  example: []
  syntax:
    content: IDestinationResolver<IMessageChannel> ChannelResolver { get; set; }
    parameters: []
    return:
      type: Steeltoe.Messaging.Core.IDestinationResolver{Steeltoe.Messaging.IMessageChannel}
    content.vb: Property ChannelResolver As IDestinationResolver(Of IMessageChannel)
  overload: Steeltoe.Integration.IIntegrationServices.ChannelResolver*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Integration.IIntegrationServices.ConversionService
  commentId: P:Steeltoe.Integration.IIntegrationServices.ConversionService
  id: ConversionService
  parent: Steeltoe.Integration.IIntegrationServices
  langs:
  - csharp
  - vb
  name: ConversionService
  nameWithType: IIntegrationServices.ConversionService
  fullName: Steeltoe.Integration.IIntegrationServices.ConversionService
  type: Property
  source:
    remote:
      path: src/Integration/src/Abstractions/IIntegrationServices.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConversionService
    path: ../Steeltoe/src/Integration/src/Abstractions/IIntegrationServices.cs
    startLine: 31
  assemblies:
  - Steeltoe.Integration.Abstractions
  namespace: Steeltoe.Integration
  summary: "\nGets or sets the current conversion service\n"
  example: []
  syntax:
    content: IConversionService ConversionService { get; set; }
    parameters: []
    return:
      type: Steeltoe.Common.Converter.IConversionService
    content.vb: Property ConversionService As IConversionService
  overload: Steeltoe.Integration.IIntegrationServices.ConversionService*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Integration.IIntegrationServices.IdGenerator
  commentId: P:Steeltoe.Integration.IIntegrationServices.IdGenerator
  id: IdGenerator
  parent: Steeltoe.Integration.IIntegrationServices
  langs:
  - csharp
  - vb
  name: IdGenerator
  nameWithType: IIntegrationServices.IdGenerator
  fullName: Steeltoe.Integration.IIntegrationServices.IdGenerator
  type: Property
  source:
    remote:
      path: src/Integration/src/Abstractions/IIntegrationServices.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IdGenerator
    path: ../Steeltoe/src/Integration/src/Abstractions/IIntegrationServices.cs
    startLine: 36
  assemblies:
  - Steeltoe.Integration.Abstractions
  namespace: Steeltoe.Integration
  summary: "\nGets or sets the current id generator\n"
  example: []
  syntax:
    content: IIDGenerator IdGenerator { get; set; }
    parameters: []
    return:
      type: Steeltoe.Common.Util.IIDGenerator
    content.vb: Property IdGenerator As IIDGenerator
  overload: Steeltoe.Integration.IIntegrationServices.IdGenerator*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Integration.IIntegrationServices.ExpressionParser
  commentId: P:Steeltoe.Integration.IIntegrationServices.ExpressionParser
  id: ExpressionParser
  parent: Steeltoe.Integration.IIntegrationServices
  langs:
  - csharp
  - vb
  name: ExpressionParser
  nameWithType: IIntegrationServices.ExpressionParser
  fullName: Steeltoe.Integration.IIntegrationServices.ExpressionParser
  type: Property
  source:
    remote:
      path: src/Integration/src/Abstractions/IIntegrationServices.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ExpressionParser
    path: ../Steeltoe/src/Integration/src/Abstractions/IIntegrationServices.cs
    startLine: 41
  assemblies:
  - Steeltoe.Integration.Abstractions
  namespace: Steeltoe.Integration
  summary: "\nGets or sets the current id expression parser\n"
  example: []
  syntax:
    content: IExpressionParser ExpressionParser { get; set; }
    parameters: []
    return:
      type: Steeltoe.Common.Expression.IExpressionParser
    content.vb: Property ExpressionParser As IExpressionParser
  overload: Steeltoe.Integration.IIntegrationServices.ExpressionParser*
  modifiers.csharp:
  - get
  - set
references:
- uid: Steeltoe.Integration
  commentId: N:Steeltoe.Integration
  name: Steeltoe.Integration
  nameWithType: Steeltoe.Integration
  fullName: Steeltoe.Integration
- uid: Steeltoe.Integration.IIntegrationServices.MessageBuilderFactory*
  commentId: Overload:Steeltoe.Integration.IIntegrationServices.MessageBuilderFactory
  name: MessageBuilderFactory
  nameWithType: IIntegrationServices.MessageBuilderFactory
  fullName: Steeltoe.Integration.IIntegrationServices.MessageBuilderFactory
- uid: Steeltoe.Integration.Support.IMessageBuilderFactory
  commentId: T:Steeltoe.Integration.Support.IMessageBuilderFactory
  parent: Steeltoe.Integration.Support
  name: IMessageBuilderFactory
  nameWithType: IMessageBuilderFactory
  fullName: Steeltoe.Integration.Support.IMessageBuilderFactory
- uid: Steeltoe.Integration.Support
  commentId: N:Steeltoe.Integration.Support
  name: Steeltoe.Integration.Support
  nameWithType: Steeltoe.Integration.Support
  fullName: Steeltoe.Integration.Support
- uid: Steeltoe.Integration.IIntegrationServices.ChannelResolver*
  commentId: Overload:Steeltoe.Integration.IIntegrationServices.ChannelResolver
  name: ChannelResolver
  nameWithType: IIntegrationServices.ChannelResolver
  fullName: Steeltoe.Integration.IIntegrationServices.ChannelResolver
- uid: Steeltoe.Messaging.Core.IDestinationResolver{Steeltoe.Messaging.IMessageChannel}
  commentId: T:Steeltoe.Messaging.Core.IDestinationResolver{Steeltoe.Messaging.IMessageChannel}
  parent: Steeltoe.Messaging.Core
  definition: Steeltoe.Messaging.Core.IDestinationResolver`1
  name: IDestinationResolver<IMessageChannel>
  nameWithType: IDestinationResolver<IMessageChannel>
  fullName: Steeltoe.Messaging.Core.IDestinationResolver<Steeltoe.Messaging.IMessageChannel>
  nameWithType.vb: IDestinationResolver(Of IMessageChannel)
  fullName.vb: Steeltoe.Messaging.Core.IDestinationResolver(Of Steeltoe.Messaging.IMessageChannel)
  name.vb: IDestinationResolver(Of IMessageChannel)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IDestinationResolver`1
    name: IDestinationResolver
    nameWithType: IDestinationResolver
    fullName: Steeltoe.Messaging.Core.IDestinationResolver
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IDestinationResolver`1
    name: IDestinationResolver
    nameWithType: IDestinationResolver
    fullName: Steeltoe.Messaging.Core.IDestinationResolver
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.IDestinationResolver`1
  commentId: T:Steeltoe.Messaging.Core.IDestinationResolver`1
  name: IDestinationResolver<T>
  nameWithType: IDestinationResolver<T>
  fullName: Steeltoe.Messaging.Core.IDestinationResolver<T>
  nameWithType.vb: IDestinationResolver(Of T)
  fullName.vb: Steeltoe.Messaging.Core.IDestinationResolver(Of T)
  name.vb: IDestinationResolver(Of T)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IDestinationResolver`1
    name: IDestinationResolver
    nameWithType: IDestinationResolver
    fullName: Steeltoe.Messaging.Core.IDestinationResolver
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IDestinationResolver`1
    name: IDestinationResolver
    nameWithType: IDestinationResolver
    fullName: Steeltoe.Messaging.Core.IDestinationResolver
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core
  commentId: N:Steeltoe.Messaging.Core
  name: Steeltoe.Messaging.Core
  nameWithType: Steeltoe.Messaging.Core
  fullName: Steeltoe.Messaging.Core
- uid: Steeltoe.Integration.IIntegrationServices.ConversionService*
  commentId: Overload:Steeltoe.Integration.IIntegrationServices.ConversionService
  name: ConversionService
  nameWithType: IIntegrationServices.ConversionService
  fullName: Steeltoe.Integration.IIntegrationServices.ConversionService
- uid: Steeltoe.Common.Converter.IConversionService
  commentId: T:Steeltoe.Common.Converter.IConversionService
  parent: Steeltoe.Common.Converter
  name: IConversionService
  nameWithType: IConversionService
  fullName: Steeltoe.Common.Converter.IConversionService
- uid: Steeltoe.Common.Converter
  commentId: N:Steeltoe.Common.Converter
  name: Steeltoe.Common.Converter
  nameWithType: Steeltoe.Common.Converter
  fullName: Steeltoe.Common.Converter
- uid: Steeltoe.Integration.IIntegrationServices.IdGenerator*
  commentId: Overload:Steeltoe.Integration.IIntegrationServices.IdGenerator
  name: IdGenerator
  nameWithType: IIntegrationServices.IdGenerator
  fullName: Steeltoe.Integration.IIntegrationServices.IdGenerator
- uid: Steeltoe.Common.Util.IIDGenerator
  commentId: T:Steeltoe.Common.Util.IIDGenerator
  parent: Steeltoe.Common.Util
  name: IIDGenerator
  nameWithType: IIDGenerator
  fullName: Steeltoe.Common.Util.IIDGenerator
- uid: Steeltoe.Common.Util
  commentId: N:Steeltoe.Common.Util
  name: Steeltoe.Common.Util
  nameWithType: Steeltoe.Common.Util
  fullName: Steeltoe.Common.Util
- uid: Steeltoe.Integration.IIntegrationServices.ExpressionParser*
  commentId: Overload:Steeltoe.Integration.IIntegrationServices.ExpressionParser
  name: ExpressionParser
  nameWithType: IIntegrationServices.ExpressionParser
  fullName: Steeltoe.Integration.IIntegrationServices.ExpressionParser
- uid: Steeltoe.Common.Expression.IExpressionParser
  commentId: T:Steeltoe.Common.Expression.IExpressionParser
  parent: Steeltoe.Common.Expression
  name: IExpressionParser
  nameWithType: IExpressionParser
  fullName: Steeltoe.Common.Expression.IExpressionParser
- uid: Steeltoe.Common.Expression
  commentId: N:Steeltoe.Common.Expression
  name: Steeltoe.Common.Expression
  nameWithType: Steeltoe.Common.Expression
  fullName: Steeltoe.Common.Expression
