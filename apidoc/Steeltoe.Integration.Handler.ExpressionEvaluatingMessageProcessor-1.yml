### YamlMime:ManagedReference
items:
- uid: Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor`1
  commentId: T:Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor`1
  id: ExpressionEvaluatingMessageProcessor`1
  parent: Steeltoe.Integration.Handler
  children:
  - Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor`1.#ctor(Steeltoe.Common.Contexts.IApplicationContext,Steeltoe.Common.Expression.IExpression)
  - Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor`1.#ctor(Steeltoe.Common.Contexts.IApplicationContext,Steeltoe.Common.Expression.IExpression,System.Type)
  - Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor`1.#ctor(Steeltoe.Common.Contexts.IApplicationContext,System.String)
  - Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor`1.#ctor(Steeltoe.Common.Contexts.IApplicationContext,System.String,System.Type)
  - Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor`1.ProcessMessage(Steeltoe.Messaging.IMessage)
  - Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor`1.ToString
  langs:
  - csharp
  - vb
  name: ExpressionEvaluatingMessageProcessor<T>
  nameWithType: ExpressionEvaluatingMessageProcessor<T>
  fullName: Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor<T>
  type: Class
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Handler/ExpressionEvaluatingMessageProcessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ExpressionEvaluatingMessageProcessor
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Handler/ExpressionEvaluatingMessageProcessor.cs
    startLine: 11
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Handler
  syntax:
    content: 'public class ExpressionEvaluatingMessageProcessor<T> : AbstractMessageProcessor<T>'
    typeParameters:
    - id: T
    content.vb: >-
      Public Class ExpressionEvaluatingMessageProcessor(Of T)

          Inherits AbstractMessageProcessor(Of T)
  inheritance:
  - System.Object
  - Steeltoe.Integration.Util.AbstractExpressionEvaluator
  - Steeltoe.Integration.Handler.AbstractMessageProcessor{{T}}
  inheritedMembers:
  - Steeltoe.Integration.Util.AbstractExpressionEvaluator.ExpressionParser
  - Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluationContext
  - Steeltoe.Integration.Util.AbstractExpressionEvaluator.IntegrationServices
  - Steeltoe.Integration.Util.AbstractExpressionEvaluator.MessageBuilderFactory
  - Steeltoe.Integration.Util.AbstractExpressionEvaluator.TypeConverter
  - Steeltoe.Integration.Util.AbstractExpressionEvaluator.ApplicationContext
  - Steeltoe.Integration.Util.AbstractExpressionEvaluator.GetMessageBuilderFactory
  - Steeltoe.Integration.Util.AbstractExpressionEvaluator.GetEvaluationContext(System.Boolean)
  - Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression``1(Steeltoe.Common.Expression.IExpression,Steeltoe.Messaging.IMessage)
  - Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression(Steeltoe.Common.Expression.IExpression,Steeltoe.Messaging.IMessage,System.Type)
  - Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression(System.String,System.Object)
  - Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression(System.String,System.Object,System.Type)
  - Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression(Steeltoe.Common.Expression.IExpression)
  - Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression(Steeltoe.Common.Expression.IExpression,System.Object,System.Type)
  - Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression``1(Steeltoe.Common.Expression.IExpression,System.Object)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType.vb: ExpressionEvaluatingMessageProcessor(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor(Of T)
  name.vb: ExpressionEvaluatingMessageProcessor(Of T)
- uid: Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor`1.#ctor(Steeltoe.Common.Contexts.IApplicationContext,Steeltoe.Common.Expression.IExpression)
  commentId: M:Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor`1.#ctor(Steeltoe.Common.Contexts.IApplicationContext,Steeltoe.Common.Expression.IExpression)
  id: '#ctor(Steeltoe.Common.Contexts.IApplicationContext,Steeltoe.Common.Expression.IExpression)'
  parent: Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor`1
  langs:
  - csharp
  - vb
  name: ExpressionEvaluatingMessageProcessor(IApplicationContext, IExpression)
  nameWithType: ExpressionEvaluatingMessageProcessor<T>.ExpressionEvaluatingMessageProcessor(IApplicationContext, IExpression)
  fullName: Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor<T>.ExpressionEvaluatingMessageProcessor(Steeltoe.Common.Contexts.IApplicationContext, Steeltoe.Common.Expression.IExpression)
  type: Constructor
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Handler/ExpressionEvaluatingMessageProcessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Handler/ExpressionEvaluatingMessageProcessor.cs
    startLine: 17
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Handler
  syntax:
    content: public ExpressionEvaluatingMessageProcessor(IApplicationContext context, IExpression expression)
    parameters:
    - id: context
      type: Steeltoe.Common.Contexts.IApplicationContext
    - id: expression
      type: Steeltoe.Common.Expression.IExpression
    content.vb: Public Sub New(context As IApplicationContext, expression As IExpression)
  overload: Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor`1.#ctor*
  nameWithType.vb: ExpressionEvaluatingMessageProcessor(Of T).ExpressionEvaluatingMessageProcessor(IApplicationContext, IExpression)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor(Of T).ExpressionEvaluatingMessageProcessor(Steeltoe.Common.Contexts.IApplicationContext, Steeltoe.Common.Expression.IExpression)
- uid: Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor`1.#ctor(Steeltoe.Common.Contexts.IApplicationContext,Steeltoe.Common.Expression.IExpression,System.Type)
  commentId: M:Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor`1.#ctor(Steeltoe.Common.Contexts.IApplicationContext,Steeltoe.Common.Expression.IExpression,System.Type)
  id: '#ctor(Steeltoe.Common.Contexts.IApplicationContext,Steeltoe.Common.Expression.IExpression,System.Type)'
  parent: Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor`1
  langs:
  - csharp
  - vb
  name: ExpressionEvaluatingMessageProcessor(IApplicationContext, IExpression, Type)
  nameWithType: ExpressionEvaluatingMessageProcessor<T>.ExpressionEvaluatingMessageProcessor(IApplicationContext, IExpression, Type)
  fullName: Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor<T>.ExpressionEvaluatingMessageProcessor(Steeltoe.Common.Contexts.IApplicationContext, Steeltoe.Common.Expression.IExpression, System.Type)
  type: Constructor
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Handler/ExpressionEvaluatingMessageProcessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Handler/ExpressionEvaluatingMessageProcessor.cs
    startLine: 22
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Handler
  syntax:
    content: public ExpressionEvaluatingMessageProcessor(IApplicationContext context, IExpression expression, Type expectedType)
    parameters:
    - id: context
      type: Steeltoe.Common.Contexts.IApplicationContext
    - id: expression
      type: Steeltoe.Common.Expression.IExpression
    - id: expectedType
      type: System.Type
    content.vb: Public Sub New(context As IApplicationContext, expression As IExpression, expectedType As Type)
  overload: Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor`1.#ctor*
  nameWithType.vb: ExpressionEvaluatingMessageProcessor(Of T).ExpressionEvaluatingMessageProcessor(IApplicationContext, IExpression, Type)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor(Of T).ExpressionEvaluatingMessageProcessor(Steeltoe.Common.Contexts.IApplicationContext, Steeltoe.Common.Expression.IExpression, System.Type)
- uid: Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor`1.#ctor(Steeltoe.Common.Contexts.IApplicationContext,System.String)
  commentId: M:Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor`1.#ctor(Steeltoe.Common.Contexts.IApplicationContext,System.String)
  id: '#ctor(Steeltoe.Common.Contexts.IApplicationContext,System.String)'
  parent: Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor`1
  langs:
  - csharp
  - vb
  name: ExpressionEvaluatingMessageProcessor(IApplicationContext, String)
  nameWithType: ExpressionEvaluatingMessageProcessor<T>.ExpressionEvaluatingMessageProcessor(IApplicationContext, String)
  fullName: Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor<T>.ExpressionEvaluatingMessageProcessor(Steeltoe.Common.Contexts.IApplicationContext, System.String)
  type: Constructor
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Handler/ExpressionEvaluatingMessageProcessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Handler/ExpressionEvaluatingMessageProcessor.cs
    startLine: 34
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Handler
  syntax:
    content: public ExpressionEvaluatingMessageProcessor(IApplicationContext context, string expression)
    parameters:
    - id: context
      type: Steeltoe.Common.Contexts.IApplicationContext
    - id: expression
      type: System.String
    content.vb: Public Sub New(context As IApplicationContext, expression As String)
  overload: Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor`1.#ctor*
  nameWithType.vb: ExpressionEvaluatingMessageProcessor(Of T).ExpressionEvaluatingMessageProcessor(IApplicationContext, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor(Of T).ExpressionEvaluatingMessageProcessor(Steeltoe.Common.Contexts.IApplicationContext, System.String)
- uid: Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor`1.#ctor(Steeltoe.Common.Contexts.IApplicationContext,System.String,System.Type)
  commentId: M:Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor`1.#ctor(Steeltoe.Common.Contexts.IApplicationContext,System.String,System.Type)
  id: '#ctor(Steeltoe.Common.Contexts.IApplicationContext,System.String,System.Type)'
  parent: Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor`1
  langs:
  - csharp
  - vb
  name: ExpressionEvaluatingMessageProcessor(IApplicationContext, String, Type)
  nameWithType: ExpressionEvaluatingMessageProcessor<T>.ExpressionEvaluatingMessageProcessor(IApplicationContext, String, Type)
  fullName: Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor<T>.ExpressionEvaluatingMessageProcessor(Steeltoe.Common.Contexts.IApplicationContext, System.String, System.Type)
  type: Constructor
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Handler/ExpressionEvaluatingMessageProcessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Handler/ExpressionEvaluatingMessageProcessor.cs
    startLine: 48
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Handler
  syntax:
    content: public ExpressionEvaluatingMessageProcessor(IApplicationContext context, string expression, Type expectedType)
    parameters:
    - id: context
      type: Steeltoe.Common.Contexts.IApplicationContext
    - id: expression
      type: System.String
    - id: expectedType
      type: System.Type
    content.vb: Public Sub New(context As IApplicationContext, expression As String, expectedType As Type)
  overload: Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor`1.#ctor*
  nameWithType.vb: ExpressionEvaluatingMessageProcessor(Of T).ExpressionEvaluatingMessageProcessor(IApplicationContext, String, Type)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor(Of T).ExpressionEvaluatingMessageProcessor(Steeltoe.Common.Contexts.IApplicationContext, System.String, System.Type)
- uid: Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor`1.ProcessMessage(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor`1.ProcessMessage(Steeltoe.Messaging.IMessage)
  id: ProcessMessage(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor`1
  langs:
  - csharp
  - vb
  name: ProcessMessage(IMessage)
  nameWithType: ExpressionEvaluatingMessageProcessor<T>.ProcessMessage(IMessage)
  fullName: Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor<T>.ProcessMessage(Steeltoe.Messaging.IMessage)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Handler/ExpressionEvaluatingMessageProcessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ProcessMessage
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Handler/ExpressionEvaluatingMessageProcessor.cs
    startLine: 62
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Handler
  syntax:
    content: public override T ProcessMessage(IMessage message)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    return:
      type: '{T}'
    content.vb: Public Overrides Function ProcessMessage(message As IMessage) As T
  overridden: Steeltoe.Integration.Handler.AbstractMessageProcessor{{T}}.ProcessMessage(Steeltoe.Messaging.IMessage)
  overload: Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor`1.ProcessMessage*
  nameWithType.vb: ExpressionEvaluatingMessageProcessor(Of T).ProcessMessage(IMessage)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor(Of T).ProcessMessage(Steeltoe.Messaging.IMessage)
- uid: Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor`1.ToString
  commentId: M:Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor`1.ToString
  id: ToString
  parent: Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor`1
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ExpressionEvaluatingMessageProcessor<T>.ToString()
  fullName: Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor<T>.ToString()
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Handler/ExpressionEvaluatingMessageProcessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ToString
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Handler/ExpressionEvaluatingMessageProcessor.cs
    startLine: 67
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Handler
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor`1.ToString*
  nameWithType.vb: ExpressionEvaluatingMessageProcessor(Of T).ToString()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor(Of T).ToString()
references:
- uid: Steeltoe.Integration.Handler
  commentId: N:Steeltoe.Integration.Handler
  name: Steeltoe.Integration.Handler
  nameWithType: Steeltoe.Integration.Handler
  fullName: Steeltoe.Integration.Handler
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Integration.Util.AbstractExpressionEvaluator
  commentId: T:Steeltoe.Integration.Util.AbstractExpressionEvaluator
  parent: Steeltoe.Integration.Util
  name: AbstractExpressionEvaluator
  nameWithType: AbstractExpressionEvaluator
  fullName: Steeltoe.Integration.Util.AbstractExpressionEvaluator
- uid: Steeltoe.Integration.Handler.AbstractMessageProcessor{{T}}
  commentId: T:Steeltoe.Integration.Handler.AbstractMessageProcessor{`0}
  parent: Steeltoe.Integration.Handler
  definition: Steeltoe.Integration.Handler.AbstractMessageProcessor`1
  name: AbstractMessageProcessor<T>
  nameWithType: AbstractMessageProcessor<T>
  fullName: Steeltoe.Integration.Handler.AbstractMessageProcessor<T>
  nameWithType.vb: AbstractMessageProcessor(Of T)
  fullName.vb: Steeltoe.Integration.Handler.AbstractMessageProcessor(Of T)
  name.vb: AbstractMessageProcessor(Of T)
  spec.csharp:
  - uid: Steeltoe.Integration.Handler.AbstractMessageProcessor`1
    name: AbstractMessageProcessor
    nameWithType: AbstractMessageProcessor
    fullName: Steeltoe.Integration.Handler.AbstractMessageProcessor
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Integration.Handler.AbstractMessageProcessor`1
    name: AbstractMessageProcessor
    nameWithType: AbstractMessageProcessor
    fullName: Steeltoe.Integration.Handler.AbstractMessageProcessor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Util.AbstractExpressionEvaluator.ExpressionParser
  commentId: P:Steeltoe.Integration.Util.AbstractExpressionEvaluator.ExpressionParser
  parent: Steeltoe.Integration.Util.AbstractExpressionEvaluator
  name: ExpressionParser
  nameWithType: AbstractExpressionEvaluator.ExpressionParser
  fullName: Steeltoe.Integration.Util.AbstractExpressionEvaluator.ExpressionParser
- uid: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluationContext
  commentId: P:Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluationContext
  parent: Steeltoe.Integration.Util.AbstractExpressionEvaluator
  name: EvaluationContext
  nameWithType: AbstractExpressionEvaluator.EvaluationContext
  fullName: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluationContext
- uid: Steeltoe.Integration.Util.AbstractExpressionEvaluator.IntegrationServices
  commentId: P:Steeltoe.Integration.Util.AbstractExpressionEvaluator.IntegrationServices
  parent: Steeltoe.Integration.Util.AbstractExpressionEvaluator
  name: IntegrationServices
  nameWithType: AbstractExpressionEvaluator.IntegrationServices
  fullName: Steeltoe.Integration.Util.AbstractExpressionEvaluator.IntegrationServices
- uid: Steeltoe.Integration.Util.AbstractExpressionEvaluator.MessageBuilderFactory
  commentId: P:Steeltoe.Integration.Util.AbstractExpressionEvaluator.MessageBuilderFactory
  parent: Steeltoe.Integration.Util.AbstractExpressionEvaluator
  name: MessageBuilderFactory
  nameWithType: AbstractExpressionEvaluator.MessageBuilderFactory
  fullName: Steeltoe.Integration.Util.AbstractExpressionEvaluator.MessageBuilderFactory
- uid: Steeltoe.Integration.Util.AbstractExpressionEvaluator.TypeConverter
  commentId: P:Steeltoe.Integration.Util.AbstractExpressionEvaluator.TypeConverter
  parent: Steeltoe.Integration.Util.AbstractExpressionEvaluator
  name: TypeConverter
  nameWithType: AbstractExpressionEvaluator.TypeConverter
  fullName: Steeltoe.Integration.Util.AbstractExpressionEvaluator.TypeConverter
- uid: Steeltoe.Integration.Util.AbstractExpressionEvaluator.ApplicationContext
  commentId: P:Steeltoe.Integration.Util.AbstractExpressionEvaluator.ApplicationContext
  parent: Steeltoe.Integration.Util.AbstractExpressionEvaluator
  name: ApplicationContext
  nameWithType: AbstractExpressionEvaluator.ApplicationContext
  fullName: Steeltoe.Integration.Util.AbstractExpressionEvaluator.ApplicationContext
- uid: Steeltoe.Integration.Util.AbstractExpressionEvaluator.GetMessageBuilderFactory
  commentId: M:Steeltoe.Integration.Util.AbstractExpressionEvaluator.GetMessageBuilderFactory
  parent: Steeltoe.Integration.Util.AbstractExpressionEvaluator
  name: GetMessageBuilderFactory()
  nameWithType: AbstractExpressionEvaluator.GetMessageBuilderFactory()
  fullName: Steeltoe.Integration.Util.AbstractExpressionEvaluator.GetMessageBuilderFactory()
  spec.csharp:
  - uid: Steeltoe.Integration.Util.AbstractExpressionEvaluator.GetMessageBuilderFactory
    name: GetMessageBuilderFactory
    nameWithType: AbstractExpressionEvaluator.GetMessageBuilderFactory
    fullName: Steeltoe.Integration.Util.AbstractExpressionEvaluator.GetMessageBuilderFactory
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Util.AbstractExpressionEvaluator.GetMessageBuilderFactory
    name: GetMessageBuilderFactory
    nameWithType: AbstractExpressionEvaluator.GetMessageBuilderFactory
    fullName: Steeltoe.Integration.Util.AbstractExpressionEvaluator.GetMessageBuilderFactory
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Util.AbstractExpressionEvaluator.GetEvaluationContext(System.Boolean)
  commentId: M:Steeltoe.Integration.Util.AbstractExpressionEvaluator.GetEvaluationContext(System.Boolean)
  parent: Steeltoe.Integration.Util.AbstractExpressionEvaluator
  isExternal: true
  name: GetEvaluationContext(Boolean)
  nameWithType: AbstractExpressionEvaluator.GetEvaluationContext(Boolean)
  fullName: Steeltoe.Integration.Util.AbstractExpressionEvaluator.GetEvaluationContext(System.Boolean)
  spec.csharp:
  - uid: Steeltoe.Integration.Util.AbstractExpressionEvaluator.GetEvaluationContext(System.Boolean)
    name: GetEvaluationContext
    nameWithType: AbstractExpressionEvaluator.GetEvaluationContext
    fullName: Steeltoe.Integration.Util.AbstractExpressionEvaluator.GetEvaluationContext
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Util.AbstractExpressionEvaluator.GetEvaluationContext(System.Boolean)
    name: GetEvaluationContext
    nameWithType: AbstractExpressionEvaluator.GetEvaluationContext
    fullName: Steeltoe.Integration.Util.AbstractExpressionEvaluator.GetEvaluationContext
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression``1(Steeltoe.Common.Expression.IExpression,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression``1(Steeltoe.Common.Expression.IExpression,Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Integration.Util.AbstractExpressionEvaluator
  name: EvaluateExpression<T>(IExpression, IMessage)
  nameWithType: AbstractExpressionEvaluator.EvaluateExpression<T>(IExpression, IMessage)
  fullName: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression<T>(Steeltoe.Common.Expression.IExpression, Steeltoe.Messaging.IMessage)
  nameWithType.vb: AbstractExpressionEvaluator.EvaluateExpression(Of T)(IExpression, IMessage)
  fullName.vb: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression(Of T)(Steeltoe.Common.Expression.IExpression, Steeltoe.Messaging.IMessage)
  name.vb: EvaluateExpression(Of T)(IExpression, IMessage)
  spec.csharp:
  - uid: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression``1(Steeltoe.Common.Expression.IExpression,Steeltoe.Messaging.IMessage)
    name: EvaluateExpression<T>
    nameWithType: AbstractExpressionEvaluator.EvaluateExpression<T>
    fullName: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Common.Expression.IExpression
    name: IExpression
    nameWithType: IExpression
    fullName: Steeltoe.Common.Expression.IExpression
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression``1(Steeltoe.Common.Expression.IExpression,Steeltoe.Messaging.IMessage)
    name: EvaluateExpression(Of T)
    nameWithType: AbstractExpressionEvaluator.EvaluateExpression(Of T)
    fullName: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Common.Expression.IExpression
    name: IExpression
    nameWithType: IExpression
    fullName: Steeltoe.Common.Expression.IExpression
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression(Steeltoe.Common.Expression.IExpression,Steeltoe.Messaging.IMessage,System.Type)
  commentId: M:Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression(Steeltoe.Common.Expression.IExpression,Steeltoe.Messaging.IMessage,System.Type)
  parent: Steeltoe.Integration.Util.AbstractExpressionEvaluator
  isExternal: true
  name: EvaluateExpression(IExpression, IMessage, Type)
  nameWithType: AbstractExpressionEvaluator.EvaluateExpression(IExpression, IMessage, Type)
  fullName: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression(Steeltoe.Common.Expression.IExpression, Steeltoe.Messaging.IMessage, System.Type)
  spec.csharp:
  - uid: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression(Steeltoe.Common.Expression.IExpression,Steeltoe.Messaging.IMessage,System.Type)
    name: EvaluateExpression
    nameWithType: AbstractExpressionEvaluator.EvaluateExpression
    fullName: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Common.Expression.IExpression
    name: IExpression
    nameWithType: IExpression
    fullName: Steeltoe.Common.Expression.IExpression
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression(Steeltoe.Common.Expression.IExpression,Steeltoe.Messaging.IMessage,System.Type)
    name: EvaluateExpression
    nameWithType: AbstractExpressionEvaluator.EvaluateExpression
    fullName: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Common.Expression.IExpression
    name: IExpression
    nameWithType: IExpression
    fullName: Steeltoe.Common.Expression.IExpression
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression(System.String,System.Object)
  commentId: M:Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression(System.String,System.Object)
  parent: Steeltoe.Integration.Util.AbstractExpressionEvaluator
  isExternal: true
  name: EvaluateExpression(String, Object)
  nameWithType: AbstractExpressionEvaluator.EvaluateExpression(String, Object)
  fullName: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression(System.String, System.Object)
  spec.csharp:
  - uid: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression(System.String,System.Object)
    name: EvaluateExpression
    nameWithType: AbstractExpressionEvaluator.EvaluateExpression
    fullName: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression(System.String,System.Object)
    name: EvaluateExpression
    nameWithType: AbstractExpressionEvaluator.EvaluateExpression
    fullName: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression(System.String,System.Object,System.Type)
  commentId: M:Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression(System.String,System.Object,System.Type)
  parent: Steeltoe.Integration.Util.AbstractExpressionEvaluator
  isExternal: true
  name: EvaluateExpression(String, Object, Type)
  nameWithType: AbstractExpressionEvaluator.EvaluateExpression(String, Object, Type)
  fullName: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression(System.String, System.Object, System.Type)
  spec.csharp:
  - uid: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression(System.String,System.Object,System.Type)
    name: EvaluateExpression
    nameWithType: AbstractExpressionEvaluator.EvaluateExpression
    fullName: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression(System.String,System.Object,System.Type)
    name: EvaluateExpression
    nameWithType: AbstractExpressionEvaluator.EvaluateExpression
    fullName: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression(Steeltoe.Common.Expression.IExpression)
  commentId: M:Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression(Steeltoe.Common.Expression.IExpression)
  parent: Steeltoe.Integration.Util.AbstractExpressionEvaluator
  name: EvaluateExpression(IExpression)
  nameWithType: AbstractExpressionEvaluator.EvaluateExpression(IExpression)
  fullName: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression(Steeltoe.Common.Expression.IExpression)
  spec.csharp:
  - uid: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression(Steeltoe.Common.Expression.IExpression)
    name: EvaluateExpression
    nameWithType: AbstractExpressionEvaluator.EvaluateExpression
    fullName: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Common.Expression.IExpression
    name: IExpression
    nameWithType: IExpression
    fullName: Steeltoe.Common.Expression.IExpression
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression(Steeltoe.Common.Expression.IExpression)
    name: EvaluateExpression
    nameWithType: AbstractExpressionEvaluator.EvaluateExpression
    fullName: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Common.Expression.IExpression
    name: IExpression
    nameWithType: IExpression
    fullName: Steeltoe.Common.Expression.IExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression(Steeltoe.Common.Expression.IExpression,System.Object,System.Type)
  commentId: M:Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression(Steeltoe.Common.Expression.IExpression,System.Object,System.Type)
  parent: Steeltoe.Integration.Util.AbstractExpressionEvaluator
  isExternal: true
  name: EvaluateExpression(IExpression, Object, Type)
  nameWithType: AbstractExpressionEvaluator.EvaluateExpression(IExpression, Object, Type)
  fullName: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression(Steeltoe.Common.Expression.IExpression, System.Object, System.Type)
  spec.csharp:
  - uid: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression(Steeltoe.Common.Expression.IExpression,System.Object,System.Type)
    name: EvaluateExpression
    nameWithType: AbstractExpressionEvaluator.EvaluateExpression
    fullName: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Common.Expression.IExpression
    name: IExpression
    nameWithType: IExpression
    fullName: Steeltoe.Common.Expression.IExpression
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression(Steeltoe.Common.Expression.IExpression,System.Object,System.Type)
    name: EvaluateExpression
    nameWithType: AbstractExpressionEvaluator.EvaluateExpression
    fullName: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Common.Expression.IExpression
    name: IExpression
    nameWithType: IExpression
    fullName: Steeltoe.Common.Expression.IExpression
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression``1(Steeltoe.Common.Expression.IExpression,System.Object)
  commentId: M:Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression``1(Steeltoe.Common.Expression.IExpression,System.Object)
  parent: Steeltoe.Integration.Util.AbstractExpressionEvaluator
  isExternal: true
  name: EvaluateExpression<T>(IExpression, Object)
  nameWithType: AbstractExpressionEvaluator.EvaluateExpression<T>(IExpression, Object)
  fullName: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression<T>(Steeltoe.Common.Expression.IExpression, System.Object)
  nameWithType.vb: AbstractExpressionEvaluator.EvaluateExpression(Of T)(IExpression, Object)
  fullName.vb: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression(Of T)(Steeltoe.Common.Expression.IExpression, System.Object)
  name.vb: EvaluateExpression(Of T)(IExpression, Object)
  spec.csharp:
  - uid: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression``1(Steeltoe.Common.Expression.IExpression,System.Object)
    name: EvaluateExpression<T>
    nameWithType: AbstractExpressionEvaluator.EvaluateExpression<T>
    fullName: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Common.Expression.IExpression
    name: IExpression
    nameWithType: IExpression
    fullName: Steeltoe.Common.Expression.IExpression
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression``1(Steeltoe.Common.Expression.IExpression,System.Object)
    name: EvaluateExpression(Of T)
    nameWithType: AbstractExpressionEvaluator.EvaluateExpression(Of T)
    fullName: Steeltoe.Integration.Util.AbstractExpressionEvaluator.EvaluateExpression(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Common.Expression.IExpression
    name: IExpression
    nameWithType: IExpression
    fullName: Steeltoe.Common.Expression.IExpression
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Integration.Util
  commentId: N:Steeltoe.Integration.Util
  name: Steeltoe.Integration.Util
  nameWithType: Steeltoe.Integration.Util
  fullName: Steeltoe.Integration.Util
- uid: Steeltoe.Integration.Handler.AbstractMessageProcessor`1
  commentId: T:Steeltoe.Integration.Handler.AbstractMessageProcessor`1
  name: AbstractMessageProcessor<T>
  nameWithType: AbstractMessageProcessor<T>
  fullName: Steeltoe.Integration.Handler.AbstractMessageProcessor<T>
  nameWithType.vb: AbstractMessageProcessor(Of T)
  fullName.vb: Steeltoe.Integration.Handler.AbstractMessageProcessor(Of T)
  name.vb: AbstractMessageProcessor(Of T)
  spec.csharp:
  - uid: Steeltoe.Integration.Handler.AbstractMessageProcessor`1
    name: AbstractMessageProcessor
    nameWithType: AbstractMessageProcessor
    fullName: Steeltoe.Integration.Handler.AbstractMessageProcessor
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Integration.Handler.AbstractMessageProcessor`1
    name: AbstractMessageProcessor
    nameWithType: AbstractMessageProcessor
    fullName: Steeltoe.Integration.Handler.AbstractMessageProcessor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor`1.#ctor*
  commentId: Overload:Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor`1.#ctor
  name: ExpressionEvaluatingMessageProcessor
  nameWithType: ExpressionEvaluatingMessageProcessor<T>.ExpressionEvaluatingMessageProcessor
  fullName: Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor<T>.ExpressionEvaluatingMessageProcessor
  nameWithType.vb: ExpressionEvaluatingMessageProcessor(Of T).ExpressionEvaluatingMessageProcessor
  fullName.vb: Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor(Of T).ExpressionEvaluatingMessageProcessor
- uid: Steeltoe.Common.Contexts.IApplicationContext
  commentId: T:Steeltoe.Common.Contexts.IApplicationContext
  parent: Steeltoe.Common.Contexts
  name: IApplicationContext
  nameWithType: IApplicationContext
  fullName: Steeltoe.Common.Contexts.IApplicationContext
- uid: Steeltoe.Common.Expression.IExpression
  commentId: T:Steeltoe.Common.Expression.IExpression
  parent: Steeltoe.Common.Expression
  name: IExpression
  nameWithType: IExpression
  fullName: Steeltoe.Common.Expression.IExpression
- uid: Steeltoe.Common.Contexts
  commentId: N:Steeltoe.Common.Contexts
  name: Steeltoe.Common.Contexts
  nameWithType: Steeltoe.Common.Contexts
  fullName: Steeltoe.Common.Contexts
- uid: Steeltoe.Common.Expression
  commentId: N:Steeltoe.Common.Expression
  name: Steeltoe.Common.Expression
  nameWithType: Steeltoe.Common.Expression
  fullName: Steeltoe.Common.Expression
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Integration.Handler.AbstractMessageProcessor{{T}}.ProcessMessage(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Integration.Handler.AbstractMessageProcessor{`0}.ProcessMessage(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Integration.Handler.AbstractMessageProcessor{{T}}
  definition: Steeltoe.Integration.Handler.AbstractMessageProcessor`1.ProcessMessage(Steeltoe.Messaging.IMessage)
  name: ProcessMessage(IMessage)
  nameWithType: AbstractMessageProcessor<T>.ProcessMessage(IMessage)
  fullName: Steeltoe.Integration.Handler.AbstractMessageProcessor<T>.ProcessMessage(Steeltoe.Messaging.IMessage)
  nameWithType.vb: AbstractMessageProcessor(Of T).ProcessMessage(IMessage)
  fullName.vb: Steeltoe.Integration.Handler.AbstractMessageProcessor(Of T).ProcessMessage(Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Integration.Handler.AbstractMessageProcessor`1.ProcessMessage(Steeltoe.Messaging.IMessage)
    name: ProcessMessage
    nameWithType: AbstractMessageProcessor<T>.ProcessMessage
    fullName: Steeltoe.Integration.Handler.AbstractMessageProcessor<T>.ProcessMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Handler.AbstractMessageProcessor`1.ProcessMessage(Steeltoe.Messaging.IMessage)
    name: ProcessMessage
    nameWithType: AbstractMessageProcessor(Of T).ProcessMessage
    fullName: Steeltoe.Integration.Handler.AbstractMessageProcessor(Of T).ProcessMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor`1.ProcessMessage*
  commentId: Overload:Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor`1.ProcessMessage
  name: ProcessMessage
  nameWithType: ExpressionEvaluatingMessageProcessor<T>.ProcessMessage
  fullName: Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor<T>.ProcessMessage
  nameWithType.vb: ExpressionEvaluatingMessageProcessor(Of T).ProcessMessage
  fullName.vb: Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor(Of T).ProcessMessage
- uid: Steeltoe.Messaging.IMessage
  commentId: T:Steeltoe.Messaging.IMessage
  parent: Steeltoe.Messaging
  name: IMessage
  nameWithType: IMessage
  fullName: Steeltoe.Messaging.IMessage
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: Steeltoe.Integration.Handler.AbstractMessageProcessor`1.ProcessMessage(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Integration.Handler.AbstractMessageProcessor`1.ProcessMessage(Steeltoe.Messaging.IMessage)
  name: ProcessMessage(IMessage)
  nameWithType: AbstractMessageProcessor<T>.ProcessMessage(IMessage)
  fullName: Steeltoe.Integration.Handler.AbstractMessageProcessor<T>.ProcessMessage(Steeltoe.Messaging.IMessage)
  nameWithType.vb: AbstractMessageProcessor(Of T).ProcessMessage(IMessage)
  fullName.vb: Steeltoe.Integration.Handler.AbstractMessageProcessor(Of T).ProcessMessage(Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Integration.Handler.AbstractMessageProcessor`1.ProcessMessage(Steeltoe.Messaging.IMessage)
    name: ProcessMessage
    nameWithType: AbstractMessageProcessor<T>.ProcessMessage
    fullName: Steeltoe.Integration.Handler.AbstractMessageProcessor<T>.ProcessMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Handler.AbstractMessageProcessor`1.ProcessMessage(Steeltoe.Messaging.IMessage)
    name: ProcessMessage
    nameWithType: AbstractMessageProcessor(Of T).ProcessMessage
    fullName: Steeltoe.Integration.Handler.AbstractMessageProcessor(Of T).ProcessMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor`1.ToString*
  commentId: Overload:Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor`1.ToString
  name: ToString
  nameWithType: ExpressionEvaluatingMessageProcessor<T>.ToString
  fullName: Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor<T>.ToString
  nameWithType.vb: ExpressionEvaluatingMessageProcessor(Of T).ToString
  fullName.vb: Steeltoe.Integration.Handler.ExpressionEvaluatingMessageProcessor(Of T).ToString
