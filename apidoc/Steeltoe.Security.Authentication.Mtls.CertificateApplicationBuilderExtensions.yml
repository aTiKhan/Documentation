### YamlMime:ManagedReference
items:
- uid: Steeltoe.Security.Authentication.Mtls.CertificateApplicationBuilderExtensions
  commentId: T:Steeltoe.Security.Authentication.Mtls.CertificateApplicationBuilderExtensions
  id: CertificateApplicationBuilderExtensions
  parent: Steeltoe.Security.Authentication.Mtls
  children:
  - Steeltoe.Security.Authentication.Mtls.CertificateApplicationBuilderExtensions.AddMutualTls(Microsoft.AspNetCore.Authentication.AuthenticationBuilder)
  - Steeltoe.Security.Authentication.Mtls.CertificateApplicationBuilderExtensions.AddMutualTls(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.Action{Steeltoe.Security.Authentication.Mtls.MutualTlsAuthenticationOptions})
  - Steeltoe.Security.Authentication.Mtls.CertificateApplicationBuilderExtensions.AddMutualTls(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String)
  - Steeltoe.Security.Authentication.Mtls.CertificateApplicationBuilderExtensions.AddMutualTls(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.Action{Steeltoe.Security.Authentication.Mtls.MutualTlsAuthenticationOptions})
  - Steeltoe.Security.Authentication.Mtls.CertificateApplicationBuilderExtensions.UseCertificateRotation(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  langs:
  - csharp
  - vb
  name: CertificateApplicationBuilderExtensions
  nameWithType: CertificateApplicationBuilderExtensions
  fullName: Steeltoe.Security.Authentication.Mtls.CertificateApplicationBuilderExtensions
  type: Class
  source:
    remote:
      path: src/Security/src/Authentication.MtlsCore/CertificateApplicationBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CertificateApplicationBuilderExtensions
    path: ../Steeltoe/src/Security/src/Authentication.MtlsCore/CertificateApplicationBuilderExtensions.cs
    startLine: 13
  assemblies:
  - Steeltoe.Security.Authentication.MtlsCore
  namespace: Steeltoe.Security.Authentication.Mtls
  syntax:
    content: public static class CertificateApplicationBuilderExtensions
    content.vb: Public Module CertificateApplicationBuilderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Steeltoe.Security.Authentication.Mtls.CertificateApplicationBuilderExtensions.UseCertificateRotation(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  commentId: M:Steeltoe.Security.Authentication.Mtls.CertificateApplicationBuilderExtensions.UseCertificateRotation(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  id: UseCertificateRotation(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  isExtensionMethod: true
  parent: Steeltoe.Security.Authentication.Mtls.CertificateApplicationBuilderExtensions
  langs:
  - csharp
  - vb
  name: UseCertificateRotation(IApplicationBuilder)
  nameWithType: CertificateApplicationBuilderExtensions.UseCertificateRotation(IApplicationBuilder)
  fullName: Steeltoe.Security.Authentication.Mtls.CertificateApplicationBuilderExtensions.UseCertificateRotation(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  type: Method
  source:
    remote:
      path: src/Security/src/Authentication.MtlsCore/CertificateApplicationBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: UseCertificateRotation
    path: ../Steeltoe/src/Security/src/Authentication.MtlsCore/CertificateApplicationBuilderExtensions.cs
    startLine: 19
  assemblies:
  - Steeltoe.Security.Authentication.MtlsCore
  namespace: Steeltoe.Security.Authentication.Mtls
  summary: "\nStart the certificate rotation service\n"
  example: []
  syntax:
    content: public static IApplicationBuilder UseCertificateRotation(this IApplicationBuilder applicationBuilder)
    parameters:
    - id: applicationBuilder
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
      description: The <xref href="Microsoft.AspNetCore.Builder.ApplicationBuilder" data-throw-if-not-resolved="false"></xref>
    return:
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseCertificateRotation(applicationBuilder As IApplicationBuilder) As IApplicationBuilder
  overload: Steeltoe.Security.Authentication.Mtls.CertificateApplicationBuilderExtensions.UseCertificateRotation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Security.Authentication.Mtls.CertificateApplicationBuilderExtensions.AddMutualTls(Microsoft.AspNetCore.Authentication.AuthenticationBuilder)
  commentId: M:Steeltoe.Security.Authentication.Mtls.CertificateApplicationBuilderExtensions.AddMutualTls(Microsoft.AspNetCore.Authentication.AuthenticationBuilder)
  id: AddMutualTls(Microsoft.AspNetCore.Authentication.AuthenticationBuilder)
  isExtensionMethod: true
  parent: Steeltoe.Security.Authentication.Mtls.CertificateApplicationBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddMutualTls(AuthenticationBuilder)
  nameWithType: CertificateApplicationBuilderExtensions.AddMutualTls(AuthenticationBuilder)
  fullName: Steeltoe.Security.Authentication.Mtls.CertificateApplicationBuilderExtensions.AddMutualTls(Microsoft.AspNetCore.Authentication.AuthenticationBuilder)
  type: Method
  source:
    remote:
      path: src/Security/src/Authentication.MtlsCore/CertificateApplicationBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddMutualTls
    path: ../Steeltoe/src/Security/src/Authentication.MtlsCore/CertificateApplicationBuilderExtensions.cs
    startLine: 30
  assemblies:
  - Steeltoe.Security.Authentication.MtlsCore
  namespace: Steeltoe.Security.Authentication.Mtls
  summary: "\nAdds certificate authentication.\n"
  example: []
  syntax:
    content: public static AuthenticationBuilder AddMutualTls(this AuthenticationBuilder builder)
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
      description: The <xref href="Microsoft.AspNetCore.Authentication.AuthenticationBuilder" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddMutualTls(builder As AuthenticationBuilder) As AuthenticationBuilder
  overload: Steeltoe.Security.Authentication.Mtls.CertificateApplicationBuilderExtensions.AddMutualTls*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Security.Authentication.Mtls.CertificateApplicationBuilderExtensions.AddMutualTls(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String)
  commentId: M:Steeltoe.Security.Authentication.Mtls.CertificateApplicationBuilderExtensions.AddMutualTls(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String)
  id: AddMutualTls(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String)
  isExtensionMethod: true
  parent: Steeltoe.Security.Authentication.Mtls.CertificateApplicationBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddMutualTls(AuthenticationBuilder, String)
  nameWithType: CertificateApplicationBuilderExtensions.AddMutualTls(AuthenticationBuilder, String)
  fullName: Steeltoe.Security.Authentication.Mtls.CertificateApplicationBuilderExtensions.AddMutualTls(Microsoft.AspNetCore.Authentication.AuthenticationBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Security/src/Authentication.MtlsCore/CertificateApplicationBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddMutualTls
    path: ../Steeltoe/src/Security/src/Authentication.MtlsCore/CertificateApplicationBuilderExtensions.cs
    startLine: 38
  assemblies:
  - Steeltoe.Security.Authentication.MtlsCore
  namespace: Steeltoe.Security.Authentication.Mtls
  summary: "\nAdds certificate authentication.\n"
  example: []
  syntax:
    content: public static AuthenticationBuilder AddMutualTls(this AuthenticationBuilder builder, string authenticationScheme)
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
      description: The <xref href="Microsoft.AspNetCore.Authentication.AuthenticationBuilder" data-throw-if-not-resolved="false"></xref>.
    - id: authenticationScheme
      type: System.String
      description: Scheme identifier
    return:
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddMutualTls(builder As AuthenticationBuilder, authenticationScheme As String) As AuthenticationBuilder
  overload: Steeltoe.Security.Authentication.Mtls.CertificateApplicationBuilderExtensions.AddMutualTls*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Security.Authentication.Mtls.CertificateApplicationBuilderExtensions.AddMutualTls(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.Action{Steeltoe.Security.Authentication.Mtls.MutualTlsAuthenticationOptions})
  commentId: M:Steeltoe.Security.Authentication.Mtls.CertificateApplicationBuilderExtensions.AddMutualTls(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.Action{Steeltoe.Security.Authentication.Mtls.MutualTlsAuthenticationOptions})
  id: AddMutualTls(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.Action{Steeltoe.Security.Authentication.Mtls.MutualTlsAuthenticationOptions})
  isExtensionMethod: true
  parent: Steeltoe.Security.Authentication.Mtls.CertificateApplicationBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddMutualTls(AuthenticationBuilder, Action<MutualTlsAuthenticationOptions>)
  nameWithType: CertificateApplicationBuilderExtensions.AddMutualTls(AuthenticationBuilder, Action<MutualTlsAuthenticationOptions>)
  fullName: Steeltoe.Security.Authentication.Mtls.CertificateApplicationBuilderExtensions.AddMutualTls(Microsoft.AspNetCore.Authentication.AuthenticationBuilder, System.Action<Steeltoe.Security.Authentication.Mtls.MutualTlsAuthenticationOptions>)
  type: Method
  source:
    remote:
      path: src/Security/src/Authentication.MtlsCore/CertificateApplicationBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddMutualTls
    path: ../Steeltoe/src/Security/src/Authentication.MtlsCore/CertificateApplicationBuilderExtensions.cs
    startLine: 46
  assemblies:
  - Steeltoe.Security.Authentication.MtlsCore
  namespace: Steeltoe.Security.Authentication.Mtls
  summary: "\nAdds certificate authentication.\n"
  example: []
  syntax:
    content: public static AuthenticationBuilder AddMutualTls(this AuthenticationBuilder builder, Action<MutualTlsAuthenticationOptions> configureOptions)
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
      description: The <xref href="Microsoft.AspNetCore.Authentication.AuthenticationBuilder" data-throw-if-not-resolved="false"></xref>.
    - id: configureOptions
      type: System.Action{Steeltoe.Security.Authentication.Mtls.MutualTlsAuthenticationOptions}
      description: Additional options configuration
    return:
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddMutualTls(builder As AuthenticationBuilder, configureOptions As Action(Of MutualTlsAuthenticationOptions)) As AuthenticationBuilder
  overload: Steeltoe.Security.Authentication.Mtls.CertificateApplicationBuilderExtensions.AddMutualTls*
  nameWithType.vb: CertificateApplicationBuilderExtensions.AddMutualTls(AuthenticationBuilder, Action(Of MutualTlsAuthenticationOptions))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Security.Authentication.Mtls.CertificateApplicationBuilderExtensions.AddMutualTls(Microsoft.AspNetCore.Authentication.AuthenticationBuilder, System.Action(Of Steeltoe.Security.Authentication.Mtls.MutualTlsAuthenticationOptions))
  name.vb: AddMutualTls(AuthenticationBuilder, Action(Of MutualTlsAuthenticationOptions))
- uid: Steeltoe.Security.Authentication.Mtls.CertificateApplicationBuilderExtensions.AddMutualTls(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.Action{Steeltoe.Security.Authentication.Mtls.MutualTlsAuthenticationOptions})
  commentId: M:Steeltoe.Security.Authentication.Mtls.CertificateApplicationBuilderExtensions.AddMutualTls(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.Action{Steeltoe.Security.Authentication.Mtls.MutualTlsAuthenticationOptions})
  id: AddMutualTls(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.Action{Steeltoe.Security.Authentication.Mtls.MutualTlsAuthenticationOptions})
  isExtensionMethod: true
  parent: Steeltoe.Security.Authentication.Mtls.CertificateApplicationBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddMutualTls(AuthenticationBuilder, String, Action<MutualTlsAuthenticationOptions>)
  nameWithType: CertificateApplicationBuilderExtensions.AddMutualTls(AuthenticationBuilder, String, Action<MutualTlsAuthenticationOptions>)
  fullName: Steeltoe.Security.Authentication.Mtls.CertificateApplicationBuilderExtensions.AddMutualTls(Microsoft.AspNetCore.Authentication.AuthenticationBuilder, System.String, System.Action<Steeltoe.Security.Authentication.Mtls.MutualTlsAuthenticationOptions>)
  type: Method
  source:
    remote:
      path: src/Security/src/Authentication.MtlsCore/CertificateApplicationBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddMutualTls
    path: ../Steeltoe/src/Security/src/Authentication.MtlsCore/CertificateApplicationBuilderExtensions.cs
    startLine: 55
  assemblies:
  - Steeltoe.Security.Authentication.MtlsCore
  namespace: Steeltoe.Security.Authentication.Mtls
  summary: "\nAdds certificate authentication.\n"
  example: []
  syntax:
    content: public static AuthenticationBuilder AddMutualTls(this AuthenticationBuilder builder, string authenticationScheme, Action<MutualTlsAuthenticationOptions> configureOptions)
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
      description: The <xref href="Microsoft.AspNetCore.Authentication.AuthenticationBuilder" data-throw-if-not-resolved="false"></xref>.
    - id: authenticationScheme
      type: System.String
      description: Scheme identifier
    - id: configureOptions
      type: System.Action{Steeltoe.Security.Authentication.Mtls.MutualTlsAuthenticationOptions}
      description: Additional options configuration
    return:
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddMutualTls(builder As AuthenticationBuilder, authenticationScheme As String, configureOptions As Action(Of MutualTlsAuthenticationOptions)) As AuthenticationBuilder
  overload: Steeltoe.Security.Authentication.Mtls.CertificateApplicationBuilderExtensions.AddMutualTls*
  nameWithType.vb: CertificateApplicationBuilderExtensions.AddMutualTls(AuthenticationBuilder, String, Action(Of MutualTlsAuthenticationOptions))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Security.Authentication.Mtls.CertificateApplicationBuilderExtensions.AddMutualTls(Microsoft.AspNetCore.Authentication.AuthenticationBuilder, System.String, System.Action(Of Steeltoe.Security.Authentication.Mtls.MutualTlsAuthenticationOptions))
  name.vb: AddMutualTls(AuthenticationBuilder, String, Action(Of MutualTlsAuthenticationOptions))
references:
- uid: Steeltoe.Security.Authentication.Mtls
  commentId: N:Steeltoe.Security.Authentication.Mtls
  name: Steeltoe.Security.Authentication.Mtls
  nameWithType: Steeltoe.Security.Authentication.Mtls
  fullName: Steeltoe.Security.Authentication.Mtls
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Builder.ApplicationBuilder
  commentId: T:Microsoft.AspNetCore.Builder.ApplicationBuilder
  isExternal: true
- uid: Steeltoe.Security.Authentication.Mtls.CertificateApplicationBuilderExtensions.UseCertificateRotation*
  commentId: Overload:Steeltoe.Security.Authentication.Mtls.CertificateApplicationBuilderExtensions.UseCertificateRotation
  name: UseCertificateRotation
  nameWithType: CertificateApplicationBuilderExtensions.UseCertificateRotation
  fullName: Steeltoe.Security.Authentication.Mtls.CertificateApplicationBuilderExtensions.UseCertificateRotation
- uid: Microsoft.AspNetCore.Builder.IApplicationBuilder
  commentId: T:Microsoft.AspNetCore.Builder.IApplicationBuilder
  parent: Microsoft.AspNetCore.Builder
  isExternal: true
  name: IApplicationBuilder
  nameWithType: IApplicationBuilder
  fullName: Microsoft.AspNetCore.Builder.IApplicationBuilder
- uid: Microsoft.AspNetCore.Builder
  commentId: N:Microsoft.AspNetCore.Builder
  isExternal: true
  name: Microsoft.AspNetCore.Builder
  nameWithType: Microsoft.AspNetCore.Builder
  fullName: Microsoft.AspNetCore.Builder
- uid: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
  commentId: T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder
  parent: Microsoft.AspNetCore.Authentication
  isExternal: true
  name: AuthenticationBuilder
  nameWithType: AuthenticationBuilder
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
- uid: Steeltoe.Security.Authentication.Mtls.CertificateApplicationBuilderExtensions.AddMutualTls*
  commentId: Overload:Steeltoe.Security.Authentication.Mtls.CertificateApplicationBuilderExtensions.AddMutualTls
  name: AddMutualTls
  nameWithType: CertificateApplicationBuilderExtensions.AddMutualTls
  fullName: Steeltoe.Security.Authentication.Mtls.CertificateApplicationBuilderExtensions.AddMutualTls
- uid: Microsoft.AspNetCore.Authentication
  commentId: N:Microsoft.AspNetCore.Authentication
  isExternal: true
  name: Microsoft.AspNetCore.Authentication
  nameWithType: Microsoft.AspNetCore.Authentication
  fullName: Microsoft.AspNetCore.Authentication
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Action{Steeltoe.Security.Authentication.Mtls.MutualTlsAuthenticationOptions}
  commentId: T:System.Action{Steeltoe.Security.Authentication.Mtls.MutualTlsAuthenticationOptions}
  parent: System
  definition: System.Action`1
  name: Action<MutualTlsAuthenticationOptions>
  nameWithType: Action<MutualTlsAuthenticationOptions>
  fullName: System.Action<Steeltoe.Security.Authentication.Mtls.MutualTlsAuthenticationOptions>
  nameWithType.vb: Action(Of MutualTlsAuthenticationOptions)
  fullName.vb: System.Action(Of Steeltoe.Security.Authentication.Mtls.MutualTlsAuthenticationOptions)
  name.vb: Action(Of MutualTlsAuthenticationOptions)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Security.Authentication.Mtls.MutualTlsAuthenticationOptions
    name: MutualTlsAuthenticationOptions
    nameWithType: MutualTlsAuthenticationOptions
    fullName: Steeltoe.Security.Authentication.Mtls.MutualTlsAuthenticationOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Security.Authentication.Mtls.MutualTlsAuthenticationOptions
    name: MutualTlsAuthenticationOptions
    nameWithType: MutualTlsAuthenticationOptions
    fullName: Steeltoe.Security.Authentication.Mtls.MutualTlsAuthenticationOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
