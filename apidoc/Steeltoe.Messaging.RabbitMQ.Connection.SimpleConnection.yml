### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection
  commentId: T:Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection
  id: SimpleConnection
  parent: Steeltoe.Messaging.RabbitMQ.Connection
  children:
  - Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.#ctor(RabbitMQ.Client.IConnection,System.Int32,Microsoft.Extensions.Logging.ILogger)
  - Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.AddBlockedListener(Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener)
  - Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.Address
  - Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.Close
  - Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.Connection
  - Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.CreateChannel(System.Boolean)
  - Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.Dispose
  - Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.IsOpen
  - Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.LocalPort
  - Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.Port
  - Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.RemotePort
  - Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.RemoveBlockedListener(Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener)
  langs:
  - csharp
  - vb
  name: SimpleConnection
  nameWithType: SimpleConnection
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/SimpleConnection.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SimpleConnection
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/SimpleConnection.cs
    startLine: 14
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: 'public class SimpleConnection : IConnection, IDisposable, NetworkConnection'
    content.vb: >-
      Public Class SimpleConnection

          Implements IConnection, IDisposable, NetworkConnection
  inheritance:
  - System.Object
  implements:
  - Steeltoe.Messaging.RabbitMQ.Connection.IConnection
  - System.IDisposable
  - RabbitMQ.Client.NetworkConnection
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.LocalPort
  commentId: P:Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.LocalPort
  id: LocalPort
  parent: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection
  langs:
  - csharp
  - vb
  name: LocalPort
  nameWithType: SimpleConnection.LocalPort
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.LocalPort
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/SimpleConnection.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: LocalPort
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/SimpleConnection.cs
    startLine: 21
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public int LocalPort { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property LocalPort As Integer
  overload: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.LocalPort*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Connection.IConnection.LocalPort
  - RabbitMQ.Client.NetworkConnection.LocalPort
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.Connection
  commentId: P:Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.Connection
  id: Connection
  parent: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection
  langs:
  - csharp
  - vb
  name: Connection
  nameWithType: SimpleConnection.Connection
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.Connection
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/SimpleConnection.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Connection
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/SimpleConnection.cs
    startLine: 23
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public IConnection Connection { get; }
    parameters: []
    return:
      type: RabbitMQ.Client.IConnection
    content.vb: Public ReadOnly Property Connection As IConnection
  overload: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.Connection*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Connection.IConnection.Connection
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.IsOpen
  commentId: P:Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.IsOpen
  id: IsOpen
  parent: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection
  langs:
  - csharp
  - vb
  name: IsOpen
  nameWithType: SimpleConnection.IsOpen
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.IsOpen
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/SimpleConnection.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsOpen
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/SimpleConnection.cs
    startLine: 25
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public bool IsOpen { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOpen As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.IsOpen*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Connection.IConnection.IsOpen
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.Address
  commentId: P:Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.Address
  id: Address
  parent: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection
  langs:
  - csharp
  - vb
  name: Address
  nameWithType: SimpleConnection.Address
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.Address
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/SimpleConnection.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Address
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/SimpleConnection.cs
    startLine: 27
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public string Address { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Address As String
  overload: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.Address*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.Port
  commentId: P:Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.Port
  id: Port
  parent: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection
  langs:
  - csharp
  - vb
  name: Port
  nameWithType: SimpleConnection.Port
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.Port
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/SimpleConnection.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Port
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/SimpleConnection.cs
    startLine: 29
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public int Port { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Port As Integer
  overload: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.Port*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.RemotePort
  commentId: P:Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.RemotePort
  id: RemotePort
  parent: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection
  langs:
  - csharp
  - vb
  name: RemotePort
  nameWithType: SimpleConnection.RemotePort
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.RemotePort
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/SimpleConnection.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RemotePort
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/SimpleConnection.cs
    startLine: 31
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public int RemotePort { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property RemotePort As Integer
  overload: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.RemotePort*
  implements:
  - RabbitMQ.Client.NetworkConnection.RemotePort
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.#ctor(RabbitMQ.Client.IConnection,System.Int32,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.#ctor(RabbitMQ.Client.IConnection,System.Int32,Microsoft.Extensions.Logging.ILogger)
  id: '#ctor(RabbitMQ.Client.IConnection,System.Int32,Microsoft.Extensions.Logging.ILogger)'
  parent: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection
  langs:
  - csharp
  - vb
  name: SimpleConnection(IConnection, Int32, ILogger)
  nameWithType: SimpleConnection.SimpleConnection(IConnection, Int32, ILogger)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.SimpleConnection(RabbitMQ.Client.IConnection, System.Int32, Microsoft.Extensions.Logging.ILogger)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/SimpleConnection.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/SimpleConnection.cs
    startLine: 33
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public SimpleConnection(IConnection connection, int closeTimeout, ILogger logger = null)
    parameters:
    - id: connection
      type: RabbitMQ.Client.IConnection
    - id: closeTimeout
      type: System.Int32
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Public Sub New(connection As IConnection, closeTimeout As Integer, logger As ILogger = Nothing)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.CreateChannel(System.Boolean)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.CreateChannel(System.Boolean)
  id: CreateChannel(System.Boolean)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection
  langs:
  - csharp
  - vb
  name: CreateChannel(Boolean)
  nameWithType: SimpleConnection.CreateChannel(Boolean)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.CreateChannel(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/SimpleConnection.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CreateChannel
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/SimpleConnection.cs
    startLine: 40
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public IModel CreateChannel(bool transactional = false)
    parameters:
    - id: transactional
      type: System.Boolean
    return:
      type: RabbitMQ.Client.IModel
    content.vb: Public Function CreateChannel(transactional As Boolean = False) As IModel
  overload: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.CreateChannel*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Connection.IConnection.CreateChannel(System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.Close
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.Close
  id: Close
  parent: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection
  langs:
  - csharp
  - vb
  name: Close()
  nameWithType: SimpleConnection.Close()
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.Close()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/SimpleConnection.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Close
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/SimpleConnection.cs
    startLine: 63
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public void Close()
    content.vb: Public Sub Close
  overload: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.Close*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Connection.IConnection.Close
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.Dispose
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.Dispose
  id: Dispose
  parent: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: SimpleConnection.Dispose()
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.Dispose()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/SimpleConnection.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Dispose
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/SimpleConnection.cs
    startLine: 82
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.AddBlockedListener(Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.AddBlockedListener(Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener)
  id: AddBlockedListener(Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection
  langs:
  - csharp
  - vb
  name: AddBlockedListener(IBlockedListener)
  nameWithType: SimpleConnection.AddBlockedListener(IBlockedListener)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.AddBlockedListener(Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/SimpleConnection.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddBlockedListener
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/SimpleConnection.cs
    startLine: 87
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public void AddBlockedListener(IBlockedListener listener)
    parameters:
    - id: listener
      type: Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener
    content.vb: Public Sub AddBlockedListener(listener As IBlockedListener)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.AddBlockedListener*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Connection.IConnection.AddBlockedListener(Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.RemoveBlockedListener(Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.RemoveBlockedListener(Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener)
  id: RemoveBlockedListener(Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection
  langs:
  - csharp
  - vb
  name: RemoveBlockedListener(IBlockedListener)
  nameWithType: SimpleConnection.RemoveBlockedListener(IBlockedListener)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.RemoveBlockedListener(Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/SimpleConnection.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RemoveBlockedListener
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/SimpleConnection.cs
    startLine: 93
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public bool RemoveBlockedListener(IBlockedListener listener)
    parameters:
    - id: listener
      type: Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener
    return:
      type: System.Boolean
    content.vb: Public Function RemoveBlockedListener(listener As IBlockedListener) As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.RemoveBlockedListener*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Connection.IConnection.RemoveBlockedListener(Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Messaging.RabbitMQ.Connection
  commentId: N:Steeltoe.Messaging.RabbitMQ.Connection
  name: Steeltoe.Messaging.RabbitMQ.Connection
  nameWithType: Steeltoe.Messaging.RabbitMQ.Connection
  fullName: Steeltoe.Messaging.RabbitMQ.Connection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnection
  commentId: T:Steeltoe.Messaging.RabbitMQ.Connection.IConnection
  parent: Steeltoe.Messaging.RabbitMQ.Connection
  name: IConnection
  nameWithType: IConnection
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnection
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: RabbitMQ.Client.NetworkConnection
  commentId: T:RabbitMQ.Client.NetworkConnection
  parent: RabbitMQ.Client
  isExternal: true
  name: NetworkConnection
  nameWithType: NetworkConnection
  fullName: RabbitMQ.Client.NetworkConnection
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: RabbitMQ.Client
  commentId: N:RabbitMQ.Client
  isExternal: true
  name: RabbitMQ.Client
  nameWithType: RabbitMQ.Client
  fullName: RabbitMQ.Client
- uid: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.LocalPort*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.LocalPort
  name: LocalPort
  nameWithType: SimpleConnection.LocalPort
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.LocalPort
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.LocalPort
  commentId: P:Steeltoe.Messaging.RabbitMQ.Connection.IConnection.LocalPort
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IConnection
  name: LocalPort
  nameWithType: IConnection.LocalPort
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.LocalPort
- uid: RabbitMQ.Client.NetworkConnection.LocalPort
  commentId: P:RabbitMQ.Client.NetworkConnection.LocalPort
  parent: RabbitMQ.Client.NetworkConnection
  isExternal: true
  name: LocalPort
  nameWithType: NetworkConnection.LocalPort
  fullName: RabbitMQ.Client.NetworkConnection.LocalPort
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.Connection*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.Connection
  name: Connection
  nameWithType: SimpleConnection.Connection
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.Connection
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.Connection
  commentId: P:Steeltoe.Messaging.RabbitMQ.Connection.IConnection.Connection
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IConnection
  name: Connection
  nameWithType: IConnection.Connection
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.Connection
- uid: RabbitMQ.Client.IConnection
  commentId: T:RabbitMQ.Client.IConnection
  parent: RabbitMQ.Client
  isExternal: true
  name: IConnection
  nameWithType: IConnection
  fullName: RabbitMQ.Client.IConnection
- uid: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.IsOpen*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.IsOpen
  name: IsOpen
  nameWithType: SimpleConnection.IsOpen
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.IsOpen
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.IsOpen
  commentId: P:Steeltoe.Messaging.RabbitMQ.Connection.IConnection.IsOpen
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IConnection
  name: IsOpen
  nameWithType: IConnection.IsOpen
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.IsOpen
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.Address*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.Address
  name: Address
  nameWithType: SimpleConnection.Address
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.Address
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.Port*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.Port
  name: Port
  nameWithType: SimpleConnection.Port
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.Port
- uid: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.RemotePort*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.RemotePort
  name: RemotePort
  nameWithType: SimpleConnection.RemotePort
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.RemotePort
- uid: RabbitMQ.Client.NetworkConnection.RemotePort
  commentId: P:RabbitMQ.Client.NetworkConnection.RemotePort
  parent: RabbitMQ.Client.NetworkConnection
  isExternal: true
  name: RemotePort
  nameWithType: NetworkConnection.RemotePort
  fullName: RabbitMQ.Client.NetworkConnection.RemotePort
- uid: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.#ctor*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.#ctor
  name: SimpleConnection
  nameWithType: SimpleConnection.SimpleConnection
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.SimpleConnection
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.CreateChannel*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.CreateChannel
  name: CreateChannel
  nameWithType: SimpleConnection.CreateChannel
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.CreateChannel
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.CreateChannel(System.Boolean)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.IConnection.CreateChannel(System.Boolean)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IConnection
  isExternal: true
  name: CreateChannel(Boolean)
  nameWithType: IConnection.CreateChannel(Boolean)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.CreateChannel(System.Boolean)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.CreateChannel(System.Boolean)
    name: CreateChannel
    nameWithType: IConnection.CreateChannel
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.CreateChannel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.CreateChannel(System.Boolean)
    name: CreateChannel
    nameWithType: IConnection.CreateChannel
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.CreateChannel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel
  commentId: T:RabbitMQ.Client.IModel
  parent: RabbitMQ.Client
  isExternal: true
  name: IModel
  nameWithType: IModel
  fullName: RabbitMQ.Client.IModel
- uid: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.Close*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.Close
  name: Close
  nameWithType: SimpleConnection.Close
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.Close
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.Close
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.IConnection.Close
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IConnection
  name: Close()
  nameWithType: IConnection.Close()
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.Close()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.Close
    name: Close
    nameWithType: IConnection.Close
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.Close
    name: Close
    nameWithType: IConnection.Close
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.Dispose*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.Dispose
  name: Dispose
  nameWithType: SimpleConnection.Dispose
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.AddBlockedListener*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.AddBlockedListener
  name: AddBlockedListener
  nameWithType: SimpleConnection.AddBlockedListener
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.AddBlockedListener
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.AddBlockedListener(Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.IConnection.AddBlockedListener(Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IConnection
  name: AddBlockedListener(IBlockedListener)
  nameWithType: IConnection.AddBlockedListener(IBlockedListener)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.AddBlockedListener(Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.AddBlockedListener(Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener)
    name: AddBlockedListener
    nameWithType: IConnection.AddBlockedListener
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.AddBlockedListener
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener
    name: IBlockedListener
    nameWithType: IBlockedListener
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.AddBlockedListener(Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener)
    name: AddBlockedListener
    nameWithType: IConnection.AddBlockedListener
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.AddBlockedListener
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener
    name: IBlockedListener
    nameWithType: IBlockedListener
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener
  commentId: T:Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener
  parent: Steeltoe.Messaging.RabbitMQ.Connection
  name: IBlockedListener
  nameWithType: IBlockedListener
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener
- uid: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.RemoveBlockedListener*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.RemoveBlockedListener
  name: RemoveBlockedListener
  nameWithType: SimpleConnection.RemoveBlockedListener
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.SimpleConnection.RemoveBlockedListener
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.RemoveBlockedListener(Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.IConnection.RemoveBlockedListener(Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IConnection
  name: RemoveBlockedListener(IBlockedListener)
  nameWithType: IConnection.RemoveBlockedListener(IBlockedListener)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.RemoveBlockedListener(Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.RemoveBlockedListener(Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener)
    name: RemoveBlockedListener
    nameWithType: IConnection.RemoveBlockedListener
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.RemoveBlockedListener
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener
    name: IBlockedListener
    nameWithType: IBlockedListener
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.RemoveBlockedListener(Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener)
    name: RemoveBlockedListener
    nameWithType: IConnection.RemoveBlockedListener
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.RemoveBlockedListener
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener
    name: IBlockedListener
    nameWithType: IBlockedListener
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener
  - name: )
    nameWithType: )
    fullName: )
