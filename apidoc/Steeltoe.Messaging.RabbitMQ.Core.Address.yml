### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Core.Address
  commentId: T:Steeltoe.Messaging.RabbitMQ.Core.Address
  id: Address
  parent: Steeltoe.Messaging.RabbitMQ.Core
  children:
  - Steeltoe.Messaging.RabbitMQ.Core.Address.#ctor(System.String)
  - Steeltoe.Messaging.RabbitMQ.Core.Address.#ctor(System.String,System.String)
  - Steeltoe.Messaging.RabbitMQ.Core.Address.AMQ_RABBITMQ_REPLY_TO
  - Steeltoe.Messaging.RabbitMQ.Core.Address.Equals(System.Object)
  - Steeltoe.Messaging.RabbitMQ.Core.Address.ExchangeName
  - Steeltoe.Messaging.RabbitMQ.Core.Address.GetHashCode
  - Steeltoe.Messaging.RabbitMQ.Core.Address.RoutingKey
  - Steeltoe.Messaging.RabbitMQ.Core.Address.ToString
  langs:
  - csharp
  - vb
  name: Address
  nameWithType: Address
  fullName: Steeltoe.Messaging.RabbitMQ.Core.Address
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/Address.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Address
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/Address.cs
    startLine: 9
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: public class Address
    content.vb: Public Class Address
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Messaging.RabbitMQ.Core.Address.AMQ_RABBITMQ_REPLY_TO
  commentId: F:Steeltoe.Messaging.RabbitMQ.Core.Address.AMQ_RABBITMQ_REPLY_TO
  id: AMQ_RABBITMQ_REPLY_TO
  parent: Steeltoe.Messaging.RabbitMQ.Core.Address
  langs:
  - csharp
  - vb
  name: AMQ_RABBITMQ_REPLY_TO
  nameWithType: Address.AMQ_RABBITMQ_REPLY_TO
  fullName: Steeltoe.Messaging.RabbitMQ.Core.Address.AMQ_RABBITMQ_REPLY_TO
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/Address.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AMQ_RABBITMQ_REPLY_TO
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/Address.cs
    startLine: 11
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: public const string AMQ_RABBITMQ_REPLY_TO = "amq.rabbitmq.reply-to"
    return:
      type: System.String
    content.vb: Public Const AMQ_RABBITMQ_REPLY_TO As String = "amq.rabbitmq.reply-to"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.RabbitMQ.Core.Address.#ctor(System.String,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.Address.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Steeltoe.Messaging.RabbitMQ.Core.Address
  langs:
  - csharp
  - vb
  name: Address(String, String)
  nameWithType: Address.Address(String, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.Address.Address(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/Address.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/Address.cs
    startLine: 15
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: public Address(string exchangeName, string routingKey)
    parameters:
    - id: exchangeName
      type: System.String
    - id: routingKey
      type: System.String
    content.vb: Public Sub New(exchangeName As String, routingKey As String)
  overload: Steeltoe.Messaging.RabbitMQ.Core.Address.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Core.Address.#ctor(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.Address.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Steeltoe.Messaging.RabbitMQ.Core.Address
  langs:
  - csharp
  - vb
  name: Address(String)
  nameWithType: Address.Address(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.Address.Address(System.String)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/Address.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/Address.cs
    startLine: 21
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: public Address(string address)
    parameters:
    - id: address
      type: System.String
    content.vb: Public Sub New(address As String)
  overload: Steeltoe.Messaging.RabbitMQ.Core.Address.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Core.Address.ExchangeName
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.Address.ExchangeName
  id: ExchangeName
  parent: Steeltoe.Messaging.RabbitMQ.Core.Address
  langs:
  - csharp
  - vb
  name: ExchangeName
  nameWithType: Address.ExchangeName
  fullName: Steeltoe.Messaging.RabbitMQ.Core.Address.ExchangeName
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/Address.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ExchangeName
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/Address.cs
    startLine: 57
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: public string ExchangeName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ExchangeName As String
  overload: Steeltoe.Messaging.RabbitMQ.Core.Address.ExchangeName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Core.Address.RoutingKey
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.Address.RoutingKey
  id: RoutingKey
  parent: Steeltoe.Messaging.RabbitMQ.Core.Address
  langs:
  - csharp
  - vb
  name: RoutingKey
  nameWithType: Address.RoutingKey
  fullName: Steeltoe.Messaging.RabbitMQ.Core.Address.RoutingKey
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/Address.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RoutingKey
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/Address.cs
    startLine: 59
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: public string RoutingKey { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property RoutingKey As String
  overload: Steeltoe.Messaging.RabbitMQ.Core.Address.RoutingKey*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Core.Address.Equals(System.Object)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.Address.Equals(System.Object)
  id: Equals(System.Object)
  parent: Steeltoe.Messaging.RabbitMQ.Core.Address
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Address.Equals(Object)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.Address.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/Address.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Equals
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/Address.cs
    startLine: 61
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Steeltoe.Messaging.RabbitMQ.Core.Address.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Steeltoe.Messaging.RabbitMQ.Core.Address.GetHashCode
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.Address.GetHashCode
  id: GetHashCode
  parent: Steeltoe.Messaging.RabbitMQ.Core.Address
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Address.GetHashCode()
  fullName: Steeltoe.Messaging.RabbitMQ.Core.Address.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/Address.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetHashCode
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/Address.cs
    startLine: 83
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Steeltoe.Messaging.RabbitMQ.Core.Address.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Steeltoe.Messaging.RabbitMQ.Core.Address.ToString
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.Address.ToString
  id: ToString
  parent: Steeltoe.Messaging.RabbitMQ.Core.Address
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Address.ToString()
  fullName: Steeltoe.Messaging.RabbitMQ.Core.Address.ToString()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/Address.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ToString
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/Address.cs
    startLine: 91
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Steeltoe.Messaging.RabbitMQ.Core.Address.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Steeltoe.Messaging.RabbitMQ.Core
  commentId: N:Steeltoe.Messaging.RabbitMQ.Core
  name: Steeltoe.Messaging.RabbitMQ.Core
  nameWithType: Steeltoe.Messaging.RabbitMQ.Core
  fullName: Steeltoe.Messaging.RabbitMQ.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Messaging.RabbitMQ.Core.Address.#ctor*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Core.Address.#ctor
  name: Address
  nameWithType: Address.Address
  fullName: Steeltoe.Messaging.RabbitMQ.Core.Address.Address
- uid: Steeltoe.Messaging.RabbitMQ.Core.Address.ExchangeName*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Core.Address.ExchangeName
  name: ExchangeName
  nameWithType: Address.ExchangeName
  fullName: Steeltoe.Messaging.RabbitMQ.Core.Address.ExchangeName
- uid: Steeltoe.Messaging.RabbitMQ.Core.Address.RoutingKey*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Core.Address.RoutingKey
  name: RoutingKey
  nameWithType: Address.RoutingKey
  fullName: Steeltoe.Messaging.RabbitMQ.Core.Address.RoutingKey
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.Address.Equals*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Core.Address.Equals
  name: Equals
  nameWithType: Address.Equals
  fullName: Steeltoe.Messaging.RabbitMQ.Core.Address.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.Address.GetHashCode*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Core.Address.GetHashCode
  name: GetHashCode
  nameWithType: Address.GetHashCode
  fullName: Steeltoe.Messaging.RabbitMQ.Core.Address.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.Address.ToString*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Core.Address.ToString
  name: ToString
  nameWithType: Address.ToString
  fullName: Steeltoe.Messaging.RabbitMQ.Core.Address.ToString
