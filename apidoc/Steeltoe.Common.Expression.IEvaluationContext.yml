### YamlMime:ManagedReference
items:
- uid: Steeltoe.Common.Expression.IEvaluationContext
  commentId: T:Steeltoe.Common.Expression.IEvaluationContext
  id: IEvaluationContext
  parent: Steeltoe.Common.Expression
  children:
  - Steeltoe.Common.Expression.IEvaluationContext.TypeConverter
  langs:
  - csharp
  - vb
  name: IEvaluationContext
  nameWithType: IEvaluationContext
  fullName: Steeltoe.Common.Expression.IEvaluationContext
  type: Interface
  source:
    remote:
      path: src/Common/src/Abstractions/Expression/IEvaluationContext.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IEvaluationContext
    path: ../Steeltoe/src/Common/src/Abstractions/Expression/IEvaluationContext.cs
    startLine: 11
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Expression
  summary: "\nExpressions are executed in an evaluation context. It is in this context that\nreferences are resolved when encountered during expression evaluation.\nTODO:  This interface is not complete\n"
  example: []
  syntax:
    content: public interface IEvaluationContext
    content.vb: Public Interface IEvaluationContext
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Steeltoe.Common.Expression.IEvaluationContext.TypeConverter
  commentId: P:Steeltoe.Common.Expression.IEvaluationContext.TypeConverter
  id: TypeConverter
  parent: Steeltoe.Common.Expression.IEvaluationContext
  langs:
  - csharp
  - vb
  name: TypeConverter
  nameWithType: IEvaluationContext.TypeConverter
  fullName: Steeltoe.Common.Expression.IEvaluationContext.TypeConverter
  type: Property
  source:
    remote:
      path: src/Common/src/Abstractions/Expression/IEvaluationContext.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: TypeConverter
    path: ../Steeltoe/src/Common/src/Abstractions/Expression/IEvaluationContext.cs
    startLine: 13
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Expression
  syntax:
    content: ITypeConverter TypeConverter { get; set; }
    parameters: []
    return:
      type: Steeltoe.Common.Expression.ITypeConverter
    content.vb: Property TypeConverter As ITypeConverter
  overload: Steeltoe.Common.Expression.IEvaluationContext.TypeConverter*
  modifiers.csharp:
  - get
  - set
references:
- uid: Steeltoe.Common.Expression
  commentId: N:Steeltoe.Common.Expression
  name: Steeltoe.Common.Expression
  nameWithType: Steeltoe.Common.Expression
  fullName: Steeltoe.Common.Expression
- uid: Steeltoe.Common.Expression.IEvaluationContext.TypeConverter*
  commentId: Overload:Steeltoe.Common.Expression.IEvaluationContext.TypeConverter
  name: TypeConverter
  nameWithType: IEvaluationContext.TypeConverter
  fullName: Steeltoe.Common.Expression.IEvaluationContext.TypeConverter
- uid: Steeltoe.Common.Expression.ITypeConverter
  commentId: T:Steeltoe.Common.Expression.ITypeConverter
  parent: Steeltoe.Common.Expression
  name: ITypeConverter
  nameWithType: ITypeConverter
  fullName: Steeltoe.Common.Expression.ITypeConverter
