### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor
  commentId: T:Steeltoe.Messaging.Support.MessageHeaderAccessor
  id: MessageHeaderAccessor
  parent: Steeltoe.Messaging.Support
  children:
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.#ctor
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.#ctor(Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.#ctor(Steeltoe.Messaging.MessageHeaders)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.ContentType
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.CreateMutableAccessor(Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.CreateMutableAccessor(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.DEFAULT_CHARSET
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.EnableTimestamp
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.ErrorChannel
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.ErrorChannelName
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor(Steeltoe.Messaging.IMessage,System.Type)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor(Steeltoe.Messaging.IMessageHeaders,System.Type)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor``1(Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor``1(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedLogMessage(System.Object)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedPayloadLogMessage(System.Object)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.GetHeader(System.String)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor(Steeltoe.Messaging.IMessage,System.Type)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor(Steeltoe.Messaging.IMessageHeaders,System.Type)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor``1(Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor``1(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortLogMessage(System.Object)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortPayloadLogMessage(System.Object)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.headers
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.Id
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.IdGenerator
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.IsModified
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.IsMutable
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.IsReadableContentType
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.IsReadOnly(System.String)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.LeaveMutable
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.MessageHeaders
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeader(System.String)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeaders(System.String[])
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.ReplyChannel
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.ReplyChannelName
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeader(System.String,System.Object)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeaderIfAbsent(System.String,System.Object)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.SetImmutable
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.Timestamp
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.ToDictionary
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.ToMessageHeaders
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.ToString
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.VerifyType(System.String,System.Object)
  langs:
  - csharp
  - vb
  name: MessageHeaderAccessor
  nameWithType: MessageHeaderAccessor
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor
  type: Class
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MessageHeaderAccessor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 12
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: 'public class MessageHeaderAccessor : IMessageHeaderAccessor'
    content.vb: >-
      Public Class MessageHeaderAccessor

          Implements IMessageHeaderAccessor
  inheritance:
  - System.Object
  derivedClasses:
  - Steeltoe.Integration.IntegrationMessageHeaderAccessor
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  - Steeltoe.Messaging.Support.NativeMessageHeaderAccessor
  implements:
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.DEFAULT_CHARSET
  commentId: F:Steeltoe.Messaging.Support.MessageHeaderAccessor.DEFAULT_CHARSET
  id: DEFAULT_CHARSET
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: DEFAULT_CHARSET
  nameWithType: MessageHeaderAccessor.DEFAULT_CHARSET
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.DEFAULT_CHARSET
  type: Field
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DEFAULT_CHARSET
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 14
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public static readonly Encoding DEFAULT_CHARSET
    return:
      type: System.Text.Encoding
    content.vb: Public Shared ReadOnly DEFAULT_CHARSET As Encoding
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.headers
  commentId: F:Steeltoe.Messaging.Support.MessageHeaderAccessor.headers
  id: headers
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: headers
  nameWithType: MessageHeaderAccessor.headers
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.headers
  type: Field
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: headers
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 16
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: protected MessageHeaderAccessor.AccessorMessageHeaders headers
    return:
      type: Steeltoe.Messaging.Support.MessageHeaderAccessor.AccessorMessageHeaders
    content.vb: Protected headers As MessageHeaderAccessor.AccessorMessageHeaders
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.#ctor
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.#ctor
  id: '#ctor'
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: MessageHeaderAccessor()
  nameWithType: MessageHeaderAccessor.MessageHeaderAccessor()
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.MessageHeaderAccessor()
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 30
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public MessageHeaderAccessor()
    content.vb: Public Sub New
  overload: Steeltoe.Messaging.Support.MessageHeaderAccessor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.#ctor(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.#ctor(Steeltoe.Messaging.IMessage)
  id: '#ctor(Steeltoe.Messaging.IMessage)'
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: MessageHeaderAccessor(IMessage)
  nameWithType: MessageHeaderAccessor.MessageHeaderAccessor(IMessage)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.MessageHeaderAccessor(Steeltoe.Messaging.IMessage)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 35
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public MessageHeaderAccessor(IMessage message)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    content.vb: Public Sub New(message As IMessage)
  overload: Steeltoe.Messaging.Support.MessageHeaderAccessor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.#ctor(Steeltoe.Messaging.MessageHeaders)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.#ctor(Steeltoe.Messaging.MessageHeaders)
  id: '#ctor(Steeltoe.Messaging.MessageHeaders)'
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: MessageHeaderAccessor(MessageHeaders)
  nameWithType: MessageHeaderAccessor.MessageHeaderAccessor(MessageHeaders)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.MessageHeaderAccessor(Steeltoe.Messaging.MessageHeaders)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 40
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public MessageHeaderAccessor(MessageHeaders headers)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.MessageHeaders
    content.vb: Public Sub New(headers As MessageHeaders)
  overload: Steeltoe.Messaging.Support.MessageHeaderAccessor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor``1(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor``1(Steeltoe.Messaging.IMessage)
  id: GetAccessor``1(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: GetAccessor<T>(IMessage)
  nameWithType: MessageHeaderAccessor.GetAccessor<T>(IMessage)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor<T>(Steeltoe.Messaging.IMessage)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetAccessor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 45
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: >-
      public static T GetAccessor<T>(IMessage message)

          where T : MessageHeaderAccessor
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function GetAccessor(Of T As MessageHeaderAccessor)(message As IMessage) As T
  overload: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor*
  nameWithType.vb: MessageHeaderAccessor.GetAccessor(Of T)(IMessage)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor(Of T)(Steeltoe.Messaging.IMessage)
  name.vb: GetAccessor(Of T)(IMessage)
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor(Steeltoe.Messaging.IMessage,System.Type)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor(Steeltoe.Messaging.IMessage,System.Type)
  id: GetAccessor(Steeltoe.Messaging.IMessage,System.Type)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: GetAccessor(IMessage, Type)
  nameWithType: MessageHeaderAccessor.GetAccessor(IMessage, Type)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor(Steeltoe.Messaging.IMessage, System.Type)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetAccessor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 51
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public static MessageHeaderAccessor GetAccessor(IMessage message, Type accessorType)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    - id: accessorType
      type: System.Type
    return:
      type: Steeltoe.Messaging.Support.MessageHeaderAccessor
    content.vb: Public Shared Function GetAccessor(message As IMessage, accessorType As Type) As MessageHeaderAccessor
  overload: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor``1(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor``1(Steeltoe.Messaging.IMessageHeaders)
  id: GetAccessor``1(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: GetAccessor<T>(IMessageHeaders)
  nameWithType: MessageHeaderAccessor.GetAccessor<T>(IMessageHeaders)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor<T>(Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetAccessor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 56
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: >-
      public static T GetAccessor<T>(IMessageHeaders messageHeaders)

          where T : MessageHeaderAccessor
    parameters:
    - id: messageHeaders
      type: Steeltoe.Messaging.IMessageHeaders
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function GetAccessor(Of T As MessageHeaderAccessor)(messageHeaders As IMessageHeaders) As T
  overload: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor*
  nameWithType.vb: MessageHeaderAccessor.GetAccessor(Of T)(IMessageHeaders)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor(Of T)(Steeltoe.Messaging.IMessageHeaders)
  name.vb: GetAccessor(Of T)(IMessageHeaders)
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor(Steeltoe.Messaging.IMessageHeaders,System.Type)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor(Steeltoe.Messaging.IMessageHeaders,System.Type)
  id: GetAccessor(Steeltoe.Messaging.IMessageHeaders,System.Type)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: GetAccessor(IMessageHeaders, Type)
  nameWithType: MessageHeaderAccessor.GetAccessor(IMessageHeaders, Type)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor(Steeltoe.Messaging.IMessageHeaders, System.Type)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetAccessor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 62
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public static MessageHeaderAccessor GetAccessor(IMessageHeaders messageHeaders, Type accessorType)
    parameters:
    - id: messageHeaders
      type: Steeltoe.Messaging.IMessageHeaders
    - id: accessorType
      type: System.Type
    return:
      type: Steeltoe.Messaging.Support.MessageHeaderAccessor
    content.vb: Public Shared Function GetAccessor(messageHeaders As IMessageHeaders, accessorType As Type) As MessageHeaderAccessor
  overload: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor``1(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor``1(Steeltoe.Messaging.IMessage)
  id: GetMutableAccessor``1(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: GetMutableAccessor<T>(IMessage)
  nameWithType: MessageHeaderAccessor.GetMutableAccessor<T>(IMessage)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor<T>(Steeltoe.Messaging.IMessage)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetMutableAccessor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 76
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: >-
      public static T GetMutableAccessor<T>(IMessage message)

          where T : MessageHeaderAccessor
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function GetMutableAccessor(Of T As MessageHeaderAccessor)(message As IMessage) As T
  overload: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor*
  nameWithType.vb: MessageHeaderAccessor.GetMutableAccessor(Of T)(IMessage)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor(Of T)(Steeltoe.Messaging.IMessage)
  name.vb: GetMutableAccessor(Of T)(IMessage)
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor``1(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor``1(Steeltoe.Messaging.IMessageHeaders)
  id: GetMutableAccessor``1(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: GetMutableAccessor<T>(IMessageHeaders)
  nameWithType: MessageHeaderAccessor.GetMutableAccessor<T>(IMessageHeaders)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor<T>(Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetMutableAccessor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 82
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: >-
      public static T GetMutableAccessor<T>(IMessageHeaders messageHeaders)

          where T : MessageHeaderAccessor
    parameters:
    - id: messageHeaders
      type: Steeltoe.Messaging.IMessageHeaders
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function GetMutableAccessor(Of T As MessageHeaderAccessor)(messageHeaders As IMessageHeaders) As T
  overload: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor*
  nameWithType.vb: MessageHeaderAccessor.GetMutableAccessor(Of T)(IMessageHeaders)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor(Of T)(Steeltoe.Messaging.IMessageHeaders)
  name.vb: GetMutableAccessor(Of T)(IMessageHeaders)
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor(Steeltoe.Messaging.IMessage,System.Type)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor(Steeltoe.Messaging.IMessage,System.Type)
  id: GetMutableAccessor(Steeltoe.Messaging.IMessage,System.Type)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: GetMutableAccessor(IMessage, Type)
  nameWithType: MessageHeaderAccessor.GetMutableAccessor(IMessage, Type)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor(Steeltoe.Messaging.IMessage, System.Type)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetMutableAccessor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 88
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public static MessageHeaderAccessor GetMutableAccessor(IMessage message, Type accessorType = null)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    - id: accessorType
      type: System.Type
    return:
      type: Steeltoe.Messaging.Support.MessageHeaderAccessor
    content.vb: Public Shared Function GetMutableAccessor(message As IMessage, accessorType As Type = Nothing) As MessageHeaderAccessor
  overload: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor(Steeltoe.Messaging.IMessageHeaders,System.Type)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor(Steeltoe.Messaging.IMessageHeaders,System.Type)
  id: GetMutableAccessor(Steeltoe.Messaging.IMessageHeaders,System.Type)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: GetMutableAccessor(IMessageHeaders, Type)
  nameWithType: MessageHeaderAccessor.GetMutableAccessor(IMessageHeaders, Type)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor(Steeltoe.Messaging.IMessageHeaders, System.Type)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetMutableAccessor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 93
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public static MessageHeaderAccessor GetMutableAccessor(IMessageHeaders headers, Type accessorType = null)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    - id: accessorType
      type: System.Type
    return:
      type: Steeltoe.Messaging.Support.MessageHeaderAccessor
    content.vb: Public Shared Function GetMutableAccessor(headers As IMessageHeaders, accessorType As Type = Nothing) As MessageHeaderAccessor
  overload: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.EnableTimestamp
  commentId: P:Steeltoe.Messaging.Support.MessageHeaderAccessor.EnableTimestamp
  id: EnableTimestamp
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: EnableTimestamp
  nameWithType: MessageHeaderAccessor.EnableTimestamp
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.EnableTimestamp
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: EnableTimestamp
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 117
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public virtual bool EnableTimestamp { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable Property EnableTimestamp As Boolean
  overload: Steeltoe.Messaging.Support.MessageHeaderAccessor.EnableTimestamp*
  implements:
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.EnableTimestamp
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.IdGenerator
  commentId: P:Steeltoe.Messaging.Support.MessageHeaderAccessor.IdGenerator
  id: IdGenerator
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: IdGenerator
  nameWithType: MessageHeaderAccessor.IdGenerator
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.IdGenerator
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IdGenerator
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 119
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public virtual IIDGenerator IdGenerator { get; set; }
    parameters: []
    return:
      type: Steeltoe.Common.Util.IIDGenerator
    content.vb: Public Overridable Property IdGenerator As IIDGenerator
  overload: Steeltoe.Messaging.Support.MessageHeaderAccessor.IdGenerator*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.LeaveMutable
  commentId: P:Steeltoe.Messaging.Support.MessageHeaderAccessor.LeaveMutable
  id: LeaveMutable
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: LeaveMutable
  nameWithType: MessageHeaderAccessor.LeaveMutable
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.LeaveMutable
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: LeaveMutable
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 121
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public virtual bool LeaveMutable { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable Property LeaveMutable As Boolean
  overload: Steeltoe.Messaging.Support.MessageHeaderAccessor.LeaveMutable*
  implements:
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.LeaveMutable
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsMutable
  commentId: P:Steeltoe.Messaging.Support.MessageHeaderAccessor.IsMutable
  id: IsMutable
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: IsMutable
  nameWithType: MessageHeaderAccessor.IsMutable
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsMutable
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsMutable
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 139
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public virtual bool IsMutable { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property IsMutable As Boolean
  overload: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsMutable*
  implements:
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.IsMutable
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsModified
  commentId: P:Steeltoe.Messaging.Support.MessageHeaderAccessor.IsModified
  id: IsModified
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: IsModified
  nameWithType: MessageHeaderAccessor.IsModified
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsModified
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsModified
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 144
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public virtual bool IsModified { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable Property IsModified As Boolean
  overload: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsModified*
  implements:
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.IsModified
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.MessageHeaders
  commentId: P:Steeltoe.Messaging.Support.MessageHeaderAccessor.MessageHeaders
  id: MessageHeaders
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: MessageHeaders
  nameWithType: MessageHeaderAccessor.MessageHeaders
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.MessageHeaders
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MessageHeaders
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 150
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public virtual IMessageHeaders MessageHeaders { get; }
    parameters: []
    return:
      type: Steeltoe.Messaging.IMessageHeaders
    content.vb: Public Overridable ReadOnly Property MessageHeaders As IMessageHeaders
  overload: Steeltoe.Messaging.Support.MessageHeaderAccessor.MessageHeaders*
  implements:
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.MessageHeaders
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.Id
  commentId: P:Steeltoe.Messaging.Support.MessageHeaderAccessor.Id
  id: Id
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: MessageHeaderAccessor.Id
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.Id
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Id
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 163
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public virtual string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property Id As String
  overload: Steeltoe.Messaging.Support.MessageHeaderAccessor.Id*
  implements:
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.Id
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.Timestamp
  commentId: P:Steeltoe.Messaging.Support.MessageHeaderAccessor.Timestamp
  id: Timestamp
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: Timestamp
  nameWithType: MessageHeaderAccessor.Timestamp
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.Timestamp
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Timestamp
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 177
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public virtual long? Timestamp { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: Public Overridable ReadOnly Property Timestamp As Long?
  overload: Steeltoe.Messaging.Support.MessageHeaderAccessor.Timestamp*
  implements:
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.Timestamp
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.ContentType
  commentId: P:Steeltoe.Messaging.Support.MessageHeaderAccessor.ContentType
  id: ContentType
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: ContentType
  nameWithType: MessageHeaderAccessor.ContentType
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.ContentType
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ContentType
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 191
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public virtual string ContentType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property ContentType As String
  overload: Steeltoe.Messaging.Support.MessageHeaderAccessor.ContentType*
  implements:
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.ContentType
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.ReplyChannelName
  commentId: P:Steeltoe.Messaging.Support.MessageHeaderAccessor.ReplyChannelName
  id: ReplyChannelName
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: ReplyChannelName
  nameWithType: MessageHeaderAccessor.ReplyChannelName
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.ReplyChannelName
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReplyChannelName
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 210
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public virtual string ReplyChannelName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property ReplyChannelName As String
  overload: Steeltoe.Messaging.Support.MessageHeaderAccessor.ReplyChannelName*
  implements:
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.ReplyChannelName
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.ReplyChannel
  commentId: P:Steeltoe.Messaging.Support.MessageHeaderAccessor.ReplyChannel
  id: ReplyChannel
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: ReplyChannel
  nameWithType: MessageHeaderAccessor.ReplyChannel
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.ReplyChannel
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReplyChannel
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 216
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public virtual object ReplyChannel { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Overridable Property ReplyChannel As Object
  overload: Steeltoe.Messaging.Support.MessageHeaderAccessor.ReplyChannel*
  implements:
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.ReplyChannel
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.ErrorChannelName
  commentId: P:Steeltoe.Messaging.Support.MessageHeaderAccessor.ErrorChannelName
  id: ErrorChannelName
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: ErrorChannelName
  nameWithType: MessageHeaderAccessor.ErrorChannelName
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.ErrorChannelName
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ErrorChannelName
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 222
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public virtual string ErrorChannelName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property ErrorChannelName As String
  overload: Steeltoe.Messaging.Support.MessageHeaderAccessor.ErrorChannelName*
  implements:
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.ErrorChannelName
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.ErrorChannel
  commentId: P:Steeltoe.Messaging.Support.MessageHeaderAccessor.ErrorChannel
  id: ErrorChannel
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: ErrorChannel
  nameWithType: MessageHeaderAccessor.ErrorChannel
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.ErrorChannel
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ErrorChannel
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 228
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public virtual object ErrorChannel { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Overridable Property ErrorChannel As Object
  overload: Steeltoe.Messaging.Support.MessageHeaderAccessor.ErrorChannel*
  implements:
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.ErrorChannel
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetImmutable
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.SetImmutable
  id: SetImmutable
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: SetImmutable()
  nameWithType: MessageHeaderAccessor.SetImmutable()
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetImmutable()
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetImmutable
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 234
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public virtual void SetImmutable()
    content.vb: Public Overridable Sub SetImmutable
  overload: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetImmutable*
  implements:
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetImmutable
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToMessageHeaders
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.ToMessageHeaders
  id: ToMessageHeaders
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: ToMessageHeaders()
  nameWithType: MessageHeaderAccessor.ToMessageHeaders()
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToMessageHeaders()
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ToMessageHeaders
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 239
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public virtual IMessageHeaders ToMessageHeaders()
    return:
      type: Steeltoe.Messaging.IMessageHeaders
    content.vb: Public Overridable Function ToMessageHeaders As IMessageHeaders
  overload: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToMessageHeaders*
  implements:
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.ToMessageHeaders
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToDictionary
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.ToDictionary
  id: ToDictionary
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: ToDictionary()
  nameWithType: MessageHeaderAccessor.ToDictionary()
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToDictionary()
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ToDictionary
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 244
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public virtual IDictionary<string, object> ToDictionary()
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: Public Overridable Function ToDictionary As IDictionary(Of String, Object)
  overload: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToDictionary*
  implements:
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.ToDictionary
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetHeader(System.String)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetHeader(System.String)
  id: GetHeader(System.String)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: GetHeader(String)
  nameWithType: MessageHeaderAccessor.GetHeader(String)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetHeader(System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetHeader
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 250
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public virtual object GetHeader(string headerName)
    parameters:
    - id: headerName
      type: System.String
    return:
      type: System.Object
    content.vb: Public Overridable Function GetHeader(headerName As String) As Object
  overload: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetHeader*
  implements:
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.GetHeader(System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeader(System.String,System.Object)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeader(System.String,System.Object)
  id: SetHeader(System.String,System.Object)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: SetHeader(String, Object)
  nameWithType: MessageHeaderAccessor.SetHeader(String, Object)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeader(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetHeader
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 260
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public virtual void SetHeader(string name, object value)
    parameters:
    - id: name
      type: System.String
    - id: value
      type: System.Object
    content.vb: Public Overridable Sub SetHeader(name As String, value As Object)
  overload: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeader*
  implements:
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetHeader(System.String,System.Object)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeaderIfAbsent(System.String,System.Object)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeaderIfAbsent(System.String,System.Object)
  id: SetHeaderIfAbsent(System.String,System.Object)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: SetHeaderIfAbsent(String, Object)
  nameWithType: MessageHeaderAccessor.SetHeaderIfAbsent(String, Object)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeaderIfAbsent(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetHeaderIfAbsent
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 289
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public virtual void SetHeaderIfAbsent(string name, object value)
    parameters:
    - id: name
      type: System.String
    - id: value
      type: System.Object
    content.vb: Public Overridable Sub SetHeaderIfAbsent(name As String, value As Object)
  overload: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeaderIfAbsent*
  implements:
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetHeaderIfAbsent(System.String,System.Object)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeader(System.String)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeader(System.String)
  id: RemoveHeader(System.String)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: RemoveHeader(String)
  nameWithType: MessageHeaderAccessor.RemoveHeader(String)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeader(System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RemoveHeader
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 297
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public virtual void RemoveHeader(string headerName)
    parameters:
    - id: headerName
      type: System.String
    content.vb: Public Overridable Sub RemoveHeader(headerName As String)
  overload: Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeader*
  implements:
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.RemoveHeader(System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeaders(System.String[])
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeaders(System.String[])
  id: RemoveHeaders(System.String[])
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: RemoveHeaders(String[])
  nameWithType: MessageHeaderAccessor.RemoveHeaders(String[])
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeaders(System.String[])
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RemoveHeaders
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 305
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public virtual void RemoveHeaders(params string[] headerPatterns)
    parameters:
    - id: headerPatterns
      type: System.String[]
    content.vb: Public Overridable Sub RemoveHeaders(ParamArray headerPatterns As String())
  overload: Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeaders*
  implements:
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.RemoveHeaders(System.String[])
  nameWithType.vb: MessageHeaderAccessor.RemoveHeaders(String())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeaders(System.String())
  name.vb: RemoveHeaders(String())
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  id: CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: CopyHeaders(IDictionary<String, Object>)
  nameWithType: MessageHeaderAccessor.CopyHeaders(IDictionary<String, Object>)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeaders(System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CopyHeaders
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 329
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public virtual void CopyHeaders(IDictionary<string, object> headersToCopy)
    parameters:
    - id: headersToCopy
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: Public Overridable Sub CopyHeaders(headersToCopy As IDictionary(Of String, Object))
  overload: Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeaders*
  implements:
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  nameWithType.vb: MessageHeaderAccessor.CopyHeaders(IDictionary(Of String, Object))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeaders(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: CopyHeaders(IDictionary(Of String, Object))
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  id: CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: CopyHeadersIfAbsent(IDictionary<String, Object>)
  nameWithType: MessageHeaderAccessor.CopyHeadersIfAbsent(IDictionary<String, Object>)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CopyHeadersIfAbsent
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 343
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public virtual void CopyHeadersIfAbsent(IDictionary<string, object> headersToCopy)
    parameters:
    - id: headersToCopy
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: Public Overridable Sub CopyHeadersIfAbsent(headersToCopy As IDictionary(Of String, Object))
  overload: Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeadersIfAbsent*
  implements:
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  nameWithType.vb: MessageHeaderAccessor.CopyHeadersIfAbsent(IDictionary(Of String, Object))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: CopyHeadersIfAbsent(IDictionary(Of String, Object))
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortLogMessage(System.Object)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortLogMessage(System.Object)
  id: GetShortLogMessage(System.Object)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: GetShortLogMessage(Object)
  nameWithType: MessageHeaderAccessor.GetShortLogMessage(Object)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortLogMessage(System.Object)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetShortLogMessage
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 358
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public virtual string GetShortLogMessage(object payload)
    parameters:
    - id: payload
      type: System.Object
    return:
      type: System.String
    content.vb: Public Overridable Function GetShortLogMessage(payload As Object) As String
  overload: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortLogMessage*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedLogMessage(System.Object)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedLogMessage(System.Object)
  id: GetDetailedLogMessage(System.Object)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: GetDetailedLogMessage(Object)
  nameWithType: MessageHeaderAccessor.GetDetailedLogMessage(Object)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedLogMessage(System.Object)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetDetailedLogMessage
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 363
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public virtual string GetDetailedLogMessage(object payload)
    parameters:
    - id: payload
      type: System.Object
    return:
      type: System.String
    content.vb: Public Overridable Function GetDetailedLogMessage(payload As Object) As String
  overload: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedLogMessage*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToString
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.ToString
  id: ToString
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: MessageHeaderAccessor.ToString()
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToString()
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ToString
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 368
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.CreateMutableAccessor(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.CreateMutableAccessor(Steeltoe.Messaging.IMessage)
  id: CreateMutableAccessor(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: CreateMutableAccessor(IMessage)
  nameWithType: MessageHeaderAccessor.CreateMutableAccessor(IMessage)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.CreateMutableAccessor(Steeltoe.Messaging.IMessage)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CreateMutableAccessor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 373
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: protected virtual MessageHeaderAccessor CreateMutableAccessor(IMessage message)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    return:
      type: Steeltoe.Messaging.Support.MessageHeaderAccessor
    content.vb: Protected Overridable Function CreateMutableAccessor(message As IMessage) As MessageHeaderAccessor
  overload: Steeltoe.Messaging.Support.MessageHeaderAccessor.CreateMutableAccessor*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.CreateMutableAccessor(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.CreateMutableAccessor(Steeltoe.Messaging.IMessageHeaders)
  id: CreateMutableAccessor(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: CreateMutableAccessor(IMessageHeaders)
  nameWithType: MessageHeaderAccessor.CreateMutableAccessor(IMessageHeaders)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.CreateMutableAccessor(Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CreateMutableAccessor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 378
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: protected virtual MessageHeaderAccessor CreateMutableAccessor(IMessageHeaders messageHeaders)
    parameters:
    - id: messageHeaders
      type: Steeltoe.Messaging.IMessageHeaders
    return:
      type: Steeltoe.Messaging.Support.MessageHeaderAccessor
    content.vb: Protected Overridable Function CreateMutableAccessor(messageHeaders As IMessageHeaders) As MessageHeaderAccessor
  overload: Steeltoe.Messaging.Support.MessageHeaderAccessor.CreateMutableAccessor*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsReadOnly(System.String)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.IsReadOnly(System.String)
  id: IsReadOnly(System.String)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: IsReadOnly(String)
  nameWithType: MessageHeaderAccessor.IsReadOnly(String)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsReadOnly(System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsReadOnly
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 389
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: protected virtual bool IsReadOnly(string headerName)
    parameters:
    - id: headerName
      type: System.String
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function IsReadOnly(headerName As String) As Boolean
  overload: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsReadOnly*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.VerifyType(System.String,System.Object)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.VerifyType(System.String,System.Object)
  id: VerifyType(System.String,System.Object)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: VerifyType(String, Object)
  nameWithType: MessageHeaderAccessor.VerifyType(String, Object)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.VerifyType(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: VerifyType
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 394
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: protected virtual void VerifyType(string headerName, object headerValue)
    parameters:
    - id: headerName
      type: System.String
    - id: headerValue
      type: System.Object
    content.vb: Protected Overridable Sub VerifyType(headerName As String, headerValue As Object)
  overload: Steeltoe.Messaging.Support.MessageHeaderAccessor.VerifyType*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortPayloadLogMessage(System.Object)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortPayloadLogMessage(System.Object)
  id: GetShortPayloadLogMessage(System.Object)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: GetShortPayloadLogMessage(Object)
  nameWithType: MessageHeaderAccessor.GetShortPayloadLogMessage(Object)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortPayloadLogMessage(System.Object)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetShortPayloadLogMessage
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 404
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: protected virtual string GetShortPayloadLogMessage(object payload)
    parameters:
    - id: payload
      type: System.Object
    return:
      type: System.String
    content.vb: Protected Overridable Function GetShortPayloadLogMessage(payload As Object) As String
  overload: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortPayloadLogMessage*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedPayloadLogMessage(System.Object)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedPayloadLogMessage(System.Object)
  id: GetDetailedPayloadLogMessage(System.Object)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: GetDetailedPayloadLogMessage(Object)
  nameWithType: MessageHeaderAccessor.GetDetailedPayloadLogMessage(Object)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedPayloadLogMessage(System.Object)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetDetailedPayloadLogMessage
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 435
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: protected virtual string GetDetailedPayloadLogMessage(object payload)
    parameters:
    - id: payload
      type: System.Object
    return:
      type: System.String
    content.vb: Protected Overridable Function GetDetailedPayloadLogMessage(payload As Object) As String
  overload: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedPayloadLogMessage*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsReadableContentType
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.IsReadableContentType
  id: IsReadableContentType
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: IsReadableContentType()
  nameWithType: MessageHeaderAccessor.IsReadableContentType()
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsReadableContentType()
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsReadableContentType
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageHeaderAccessor.cs
    startLine: 458
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: protected virtual bool IsReadableContentType()
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function IsReadableContentType As Boolean
  overload: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsReadableContentType*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Steeltoe.Messaging.Support
  commentId: N:Steeltoe.Messaging.Support
  name: Steeltoe.Messaging.Support
  nameWithType: Steeltoe.Messaging.Support
  fullName: Steeltoe.Messaging.Support
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  commentId: T:Steeltoe.Messaging.Support.IMessageHeaderAccessor
  parent: Steeltoe.Messaging.Support
  name: IMessageHeaderAccessor
  nameWithType: IMessageHeaderAccessor
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Text.Encoding
  commentId: T:System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.AccessorMessageHeaders
  commentId: T:Steeltoe.Messaging.Support.MessageHeaderAccessor.AccessorMessageHeaders
  parent: Steeltoe.Messaging.Support
  name: MessageHeaderAccessor.AccessorMessageHeaders
  nameWithType: MessageHeaderAccessor.AccessorMessageHeaders
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.AccessorMessageHeaders
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.#ctor*
  commentId: Overload:Steeltoe.Messaging.Support.MessageHeaderAccessor.#ctor
  name: MessageHeaderAccessor
  nameWithType: MessageHeaderAccessor.MessageHeaderAccessor
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.MessageHeaderAccessor
- uid: Steeltoe.Messaging.IMessage
  commentId: T:Steeltoe.Messaging.IMessage
  parent: Steeltoe.Messaging
  name: IMessage
  nameWithType: IMessage
  fullName: Steeltoe.Messaging.IMessage
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: Steeltoe.Messaging.MessageHeaders
  commentId: T:Steeltoe.Messaging.MessageHeaders
  parent: Steeltoe.Messaging
  name: MessageHeaders
  nameWithType: MessageHeaders
  fullName: Steeltoe.Messaging.MessageHeaders
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor*
  commentId: Overload:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor
  name: GetAccessor
  nameWithType: MessageHeaderAccessor.GetAccessor
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor
  commentId: T:Steeltoe.Messaging.Support.MessageHeaderAccessor
  parent: Steeltoe.Messaging.Support
  name: MessageHeaderAccessor
  nameWithType: MessageHeaderAccessor
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor
- uid: Steeltoe.Messaging.IMessageHeaders
  commentId: T:Steeltoe.Messaging.IMessageHeaders
  parent: Steeltoe.Messaging
  name: IMessageHeaders
  nameWithType: IMessageHeaders
  fullName: Steeltoe.Messaging.IMessageHeaders
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor*
  commentId: Overload:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor
  name: GetMutableAccessor
  nameWithType: MessageHeaderAccessor.GetMutableAccessor
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.EnableTimestamp*
  commentId: Overload:Steeltoe.Messaging.Support.MessageHeaderAccessor.EnableTimestamp
  name: EnableTimestamp
  nameWithType: MessageHeaderAccessor.EnableTimestamp
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.EnableTimestamp
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.EnableTimestamp
  commentId: P:Steeltoe.Messaging.Support.IMessageHeaderAccessor.EnableTimestamp
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  name: EnableTimestamp
  nameWithType: IMessageHeaderAccessor.EnableTimestamp
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.EnableTimestamp
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.IdGenerator*
  commentId: Overload:Steeltoe.Messaging.Support.MessageHeaderAccessor.IdGenerator
  name: IdGenerator
  nameWithType: MessageHeaderAccessor.IdGenerator
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.IdGenerator
- uid: Steeltoe.Common.Util.IIDGenerator
  commentId: T:Steeltoe.Common.Util.IIDGenerator
  parent: Steeltoe.Common.Util
  name: IIDGenerator
  nameWithType: IIDGenerator
  fullName: Steeltoe.Common.Util.IIDGenerator
- uid: Steeltoe.Common.Util
  commentId: N:Steeltoe.Common.Util
  name: Steeltoe.Common.Util
  nameWithType: Steeltoe.Common.Util
  fullName: Steeltoe.Common.Util
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.LeaveMutable*
  commentId: Overload:Steeltoe.Messaging.Support.MessageHeaderAccessor.LeaveMutable
  name: LeaveMutable
  nameWithType: MessageHeaderAccessor.LeaveMutable
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.LeaveMutable
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.LeaveMutable
  commentId: P:Steeltoe.Messaging.Support.IMessageHeaderAccessor.LeaveMutable
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  name: LeaveMutable
  nameWithType: IMessageHeaderAccessor.LeaveMutable
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.LeaveMutable
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsMutable*
  commentId: Overload:Steeltoe.Messaging.Support.MessageHeaderAccessor.IsMutable
  name: IsMutable
  nameWithType: MessageHeaderAccessor.IsMutable
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsMutable
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.IsMutable
  commentId: P:Steeltoe.Messaging.Support.IMessageHeaderAccessor.IsMutable
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  name: IsMutable
  nameWithType: IMessageHeaderAccessor.IsMutable
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.IsMutable
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsModified*
  commentId: Overload:Steeltoe.Messaging.Support.MessageHeaderAccessor.IsModified
  name: IsModified
  nameWithType: MessageHeaderAccessor.IsModified
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsModified
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.IsModified
  commentId: P:Steeltoe.Messaging.Support.IMessageHeaderAccessor.IsModified
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  name: IsModified
  nameWithType: IMessageHeaderAccessor.IsModified
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.IsModified
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.MessageHeaders*
  commentId: Overload:Steeltoe.Messaging.Support.MessageHeaderAccessor.MessageHeaders
  name: MessageHeaders
  nameWithType: MessageHeaderAccessor.MessageHeaders
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.MessageHeaders
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.MessageHeaders
  commentId: P:Steeltoe.Messaging.Support.IMessageHeaderAccessor.MessageHeaders
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  name: MessageHeaders
  nameWithType: IMessageHeaderAccessor.MessageHeaders
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.MessageHeaders
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.Id*
  commentId: Overload:Steeltoe.Messaging.Support.MessageHeaderAccessor.Id
  name: Id
  nameWithType: MessageHeaderAccessor.Id
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.Id
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.Id
  commentId: P:Steeltoe.Messaging.Support.IMessageHeaderAccessor.Id
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  name: Id
  nameWithType: IMessageHeaderAccessor.Id
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.Timestamp*
  commentId: Overload:Steeltoe.Messaging.Support.MessageHeaderAccessor.Timestamp
  name: Timestamp
  nameWithType: MessageHeaderAccessor.Timestamp
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.Timestamp
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.Timestamp
  commentId: P:Steeltoe.Messaging.Support.IMessageHeaderAccessor.Timestamp
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  name: Timestamp
  nameWithType: IMessageHeaderAccessor.Timestamp
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.Timestamp
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.ContentType*
  commentId: Overload:Steeltoe.Messaging.Support.MessageHeaderAccessor.ContentType
  name: ContentType
  nameWithType: MessageHeaderAccessor.ContentType
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.ContentType
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ContentType
  commentId: P:Steeltoe.Messaging.Support.IMessageHeaderAccessor.ContentType
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  name: ContentType
  nameWithType: IMessageHeaderAccessor.ContentType
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ContentType
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.ReplyChannelName*
  commentId: Overload:Steeltoe.Messaging.Support.MessageHeaderAccessor.ReplyChannelName
  name: ReplyChannelName
  nameWithType: MessageHeaderAccessor.ReplyChannelName
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.ReplyChannelName
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ReplyChannelName
  commentId: P:Steeltoe.Messaging.Support.IMessageHeaderAccessor.ReplyChannelName
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  name: ReplyChannelName
  nameWithType: IMessageHeaderAccessor.ReplyChannelName
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ReplyChannelName
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.ReplyChannel*
  commentId: Overload:Steeltoe.Messaging.Support.MessageHeaderAccessor.ReplyChannel
  name: ReplyChannel
  nameWithType: MessageHeaderAccessor.ReplyChannel
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.ReplyChannel
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ReplyChannel
  commentId: P:Steeltoe.Messaging.Support.IMessageHeaderAccessor.ReplyChannel
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  name: ReplyChannel
  nameWithType: IMessageHeaderAccessor.ReplyChannel
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ReplyChannel
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.ErrorChannelName*
  commentId: Overload:Steeltoe.Messaging.Support.MessageHeaderAccessor.ErrorChannelName
  name: ErrorChannelName
  nameWithType: MessageHeaderAccessor.ErrorChannelName
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.ErrorChannelName
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ErrorChannelName
  commentId: P:Steeltoe.Messaging.Support.IMessageHeaderAccessor.ErrorChannelName
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  name: ErrorChannelName
  nameWithType: IMessageHeaderAccessor.ErrorChannelName
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ErrorChannelName
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.ErrorChannel*
  commentId: Overload:Steeltoe.Messaging.Support.MessageHeaderAccessor.ErrorChannel
  name: ErrorChannel
  nameWithType: MessageHeaderAccessor.ErrorChannel
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.ErrorChannel
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ErrorChannel
  commentId: P:Steeltoe.Messaging.Support.IMessageHeaderAccessor.ErrorChannel
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  name: ErrorChannel
  nameWithType: IMessageHeaderAccessor.ErrorChannel
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ErrorChannel
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetImmutable*
  commentId: Overload:Steeltoe.Messaging.Support.MessageHeaderAccessor.SetImmutable
  name: SetImmutable
  nameWithType: MessageHeaderAccessor.SetImmutable
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetImmutable
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetImmutable
  commentId: M:Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetImmutable
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  name: SetImmutable()
  nameWithType: IMessageHeaderAccessor.SetImmutable()
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetImmutable()
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetImmutable
    name: SetImmutable
    nameWithType: IMessageHeaderAccessor.SetImmutable
    fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetImmutable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetImmutable
    name: SetImmutable
    nameWithType: IMessageHeaderAccessor.SetImmutable
    fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetImmutable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToMessageHeaders*
  commentId: Overload:Steeltoe.Messaging.Support.MessageHeaderAccessor.ToMessageHeaders
  name: ToMessageHeaders
  nameWithType: MessageHeaderAccessor.ToMessageHeaders
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToMessageHeaders
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ToMessageHeaders
  commentId: M:Steeltoe.Messaging.Support.IMessageHeaderAccessor.ToMessageHeaders
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  name: ToMessageHeaders()
  nameWithType: IMessageHeaderAccessor.ToMessageHeaders()
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ToMessageHeaders()
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ToMessageHeaders
    name: ToMessageHeaders
    nameWithType: IMessageHeaderAccessor.ToMessageHeaders
    fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ToMessageHeaders
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ToMessageHeaders
    name: ToMessageHeaders
    nameWithType: IMessageHeaderAccessor.ToMessageHeaders
    fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ToMessageHeaders
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToDictionary*
  commentId: Overload:Steeltoe.Messaging.Support.MessageHeaderAccessor.ToDictionary
  name: ToDictionary
  nameWithType: MessageHeaderAccessor.ToDictionary
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToDictionary
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ToDictionary
  commentId: M:Steeltoe.Messaging.Support.IMessageHeaderAccessor.ToDictionary
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  name: ToDictionary()
  nameWithType: IMessageHeaderAccessor.ToDictionary()
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ToDictionary()
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ToDictionary
    name: ToDictionary
    nameWithType: IMessageHeaderAccessor.ToDictionary
    fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ToDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ToDictionary
    name: ToDictionary
    nameWithType: IMessageHeaderAccessor.ToDictionary
    fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ToDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetHeader*
  commentId: Overload:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetHeader
  name: GetHeader
  nameWithType: MessageHeaderAccessor.GetHeader
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetHeader
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.GetHeader(System.String)
  commentId: M:Steeltoe.Messaging.Support.IMessageHeaderAccessor.GetHeader(System.String)
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  isExternal: true
  name: GetHeader(String)
  nameWithType: IMessageHeaderAccessor.GetHeader(String)
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.GetHeader(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.GetHeader(System.String)
    name: GetHeader
    nameWithType: IMessageHeaderAccessor.GetHeader
    fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.GetHeader
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.GetHeader(System.String)
    name: GetHeader
    nameWithType: IMessageHeaderAccessor.GetHeader
    fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.GetHeader
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeader*
  commentId: Overload:Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeader
  name: SetHeader
  nameWithType: MessageHeaderAccessor.SetHeader
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeader
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetHeader(System.String,System.Object)
  commentId: M:Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetHeader(System.String,System.Object)
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  isExternal: true
  name: SetHeader(String, Object)
  nameWithType: IMessageHeaderAccessor.SetHeader(String, Object)
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetHeader(System.String, System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetHeader(System.String,System.Object)
    name: SetHeader
    nameWithType: IMessageHeaderAccessor.SetHeader
    fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetHeader
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetHeader(System.String,System.Object)
    name: SetHeader
    nameWithType: IMessageHeaderAccessor.SetHeader
    fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetHeader
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeaderIfAbsent*
  commentId: Overload:Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeaderIfAbsent
  name: SetHeaderIfAbsent
  nameWithType: MessageHeaderAccessor.SetHeaderIfAbsent
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeaderIfAbsent
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetHeaderIfAbsent(System.String,System.Object)
  commentId: M:Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetHeaderIfAbsent(System.String,System.Object)
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  isExternal: true
  name: SetHeaderIfAbsent(String, Object)
  nameWithType: IMessageHeaderAccessor.SetHeaderIfAbsent(String, Object)
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetHeaderIfAbsent(System.String, System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetHeaderIfAbsent(System.String,System.Object)
    name: SetHeaderIfAbsent
    nameWithType: IMessageHeaderAccessor.SetHeaderIfAbsent
    fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetHeaderIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetHeaderIfAbsent(System.String,System.Object)
    name: SetHeaderIfAbsent
    nameWithType: IMessageHeaderAccessor.SetHeaderIfAbsent
    fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetHeaderIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeader*
  commentId: Overload:Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeader
  name: RemoveHeader
  nameWithType: MessageHeaderAccessor.RemoveHeader
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeader
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.RemoveHeader(System.String)
  commentId: M:Steeltoe.Messaging.Support.IMessageHeaderAccessor.RemoveHeader(System.String)
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  isExternal: true
  name: RemoveHeader(String)
  nameWithType: IMessageHeaderAccessor.RemoveHeader(String)
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.RemoveHeader(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.RemoveHeader(System.String)
    name: RemoveHeader
    nameWithType: IMessageHeaderAccessor.RemoveHeader
    fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.RemoveHeader
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.RemoveHeader(System.String)
    name: RemoveHeader
    nameWithType: IMessageHeaderAccessor.RemoveHeader
    fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.RemoveHeader
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeaders*
  commentId: Overload:Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeaders
  name: RemoveHeaders
  nameWithType: MessageHeaderAccessor.RemoveHeaders
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeaders
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.RemoveHeaders(System.String[])
  commentId: M:Steeltoe.Messaging.Support.IMessageHeaderAccessor.RemoveHeaders(System.String[])
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  isExternal: true
  name: RemoveHeaders(String[])
  nameWithType: IMessageHeaderAccessor.RemoveHeaders(String[])
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.RemoveHeaders(System.String[])
  nameWithType.vb: IMessageHeaderAccessor.RemoveHeaders(String())
  fullName.vb: Steeltoe.Messaging.Support.IMessageHeaderAccessor.RemoveHeaders(System.String())
  name.vb: RemoveHeaders(String())
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.RemoveHeaders(System.String[])
    name: RemoveHeaders
    nameWithType: IMessageHeaderAccessor.RemoveHeaders
    fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.RemoveHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.RemoveHeaders(System.String[])
    name: RemoveHeaders
    nameWithType: IMessageHeaderAccessor.RemoveHeaders
    fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.RemoveHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeaders*
  commentId: Overload:Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeaders
  name: CopyHeaders
  nameWithType: MessageHeaderAccessor.CopyHeaders
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeaders
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.Support.IMessageHeaderAccessor.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  isExternal: true
  name: CopyHeaders(IDictionary<String, Object>)
  nameWithType: IMessageHeaderAccessor.CopyHeaders(IDictionary<String, Object>)
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.CopyHeaders(System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: IMessageHeaderAccessor.CopyHeaders(IDictionary(Of String, Object))
  fullName.vb: Steeltoe.Messaging.Support.IMessageHeaderAccessor.CopyHeaders(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: CopyHeaders(IDictionary(Of String, Object))
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: CopyHeaders
    nameWithType: IMessageHeaderAccessor.CopyHeaders
    fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.CopyHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: CopyHeaders
    nameWithType: IMessageHeaderAccessor.CopyHeaders
    fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.CopyHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeadersIfAbsent*
  commentId: Overload:Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeadersIfAbsent
  name: CopyHeadersIfAbsent
  nameWithType: MessageHeaderAccessor.CopyHeadersIfAbsent
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeadersIfAbsent
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.Support.IMessageHeaderAccessor.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  isExternal: true
  name: CopyHeadersIfAbsent(IDictionary<String, Object>)
  nameWithType: IMessageHeaderAccessor.CopyHeadersIfAbsent(IDictionary<String, Object>)
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: IMessageHeaderAccessor.CopyHeadersIfAbsent(IDictionary(Of String, Object))
  fullName.vb: Steeltoe.Messaging.Support.IMessageHeaderAccessor.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: CopyHeadersIfAbsent(IDictionary(Of String, Object))
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: CopyHeadersIfAbsent
    nameWithType: IMessageHeaderAccessor.CopyHeadersIfAbsent
    fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.CopyHeadersIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: CopyHeadersIfAbsent
    nameWithType: IMessageHeaderAccessor.CopyHeadersIfAbsent
    fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.CopyHeadersIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortLogMessage*
  commentId: Overload:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortLogMessage
  name: GetShortLogMessage
  nameWithType: MessageHeaderAccessor.GetShortLogMessage
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortLogMessage
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedLogMessage*
  commentId: Overload:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedLogMessage
  name: GetDetailedLogMessage
  nameWithType: MessageHeaderAccessor.GetDetailedLogMessage
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedLogMessage
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToString*
  commentId: Overload:Steeltoe.Messaging.Support.MessageHeaderAccessor.ToString
  name: ToString
  nameWithType: MessageHeaderAccessor.ToString
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToString
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.CreateMutableAccessor*
  commentId: Overload:Steeltoe.Messaging.Support.MessageHeaderAccessor.CreateMutableAccessor
  name: CreateMutableAccessor
  nameWithType: MessageHeaderAccessor.CreateMutableAccessor
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.CreateMutableAccessor
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsReadOnly*
  commentId: Overload:Steeltoe.Messaging.Support.MessageHeaderAccessor.IsReadOnly
  name: IsReadOnly
  nameWithType: MessageHeaderAccessor.IsReadOnly
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsReadOnly
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.VerifyType*
  commentId: Overload:Steeltoe.Messaging.Support.MessageHeaderAccessor.VerifyType
  name: VerifyType
  nameWithType: MessageHeaderAccessor.VerifyType
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.VerifyType
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortPayloadLogMessage*
  commentId: Overload:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortPayloadLogMessage
  name: GetShortPayloadLogMessage
  nameWithType: MessageHeaderAccessor.GetShortPayloadLogMessage
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortPayloadLogMessage
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedPayloadLogMessage*
  commentId: Overload:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedPayloadLogMessage
  name: GetDetailedPayloadLogMessage
  nameWithType: MessageHeaderAccessor.GetDetailedPayloadLogMessage
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedPayloadLogMessage
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsReadableContentType*
  commentId: Overload:Steeltoe.Messaging.Support.MessageHeaderAccessor.IsReadableContentType
  name: IsReadableContentType
  nameWithType: MessageHeaderAccessor.IsReadableContentType
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsReadableContentType
