### YamlMime:ManagedReference
items:
- uid: Steeltoe.Common.Expression.IParserContext
  commentId: T:Steeltoe.Common.Expression.IParserContext
  id: IParserContext
  parent: Steeltoe.Common.Expression
  children:
  - Steeltoe.Common.Expression.IParserContext.ExpressionPrefix
  - Steeltoe.Common.Expression.IParserContext.ExpressionSuffix
  - Steeltoe.Common.Expression.IParserContext.IsTemplate
  langs:
  - csharp
  - vb
  name: IParserContext
  nameWithType: IParserContext
  fullName: Steeltoe.Common.Expression.IParserContext
  type: Interface
  source:
    remote:
      path: src/Common/src/Abstractions/Expression/IParserContext.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IParserContext
    path: ../Steeltoe/src/Common/src/Abstractions/Expression/IParserContext.cs
    startLine: 11
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Expression
  summary: "\nContext that gets passed along a bean definition parsing process,\nencapsulating all relevant configuration as well as state.\nTODO:  This interface is not complete\n"
  example: []
  syntax:
    content: public interface IParserContext
    content.vb: Public Interface IParserContext
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Steeltoe.Common.Expression.IParserContext.IsTemplate
  commentId: P:Steeltoe.Common.Expression.IParserContext.IsTemplate
  id: IsTemplate
  parent: Steeltoe.Common.Expression.IParserContext
  langs:
  - csharp
  - vb
  name: IsTemplate
  nameWithType: IParserContext.IsTemplate
  fullName: Steeltoe.Common.Expression.IParserContext.IsTemplate
  type: Property
  source:
    remote:
      path: src/Common/src/Abstractions/Expression/IParserContext.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsTemplate
    path: ../Steeltoe/src/Common/src/Abstractions/Expression/IParserContext.cs
    startLine: 13
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Expression
  syntax:
    content: bool IsTemplate { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsTemplate As Boolean
  overload: Steeltoe.Common.Expression.IParserContext.IsTemplate*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.Common.Expression.IParserContext.ExpressionPrefix
  commentId: P:Steeltoe.Common.Expression.IParserContext.ExpressionPrefix
  id: ExpressionPrefix
  parent: Steeltoe.Common.Expression.IParserContext
  langs:
  - csharp
  - vb
  name: ExpressionPrefix
  nameWithType: IParserContext.ExpressionPrefix
  fullName: Steeltoe.Common.Expression.IParserContext.ExpressionPrefix
  type: Property
  source:
    remote:
      path: src/Common/src/Abstractions/Expression/IParserContext.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ExpressionPrefix
    path: ../Steeltoe/src/Common/src/Abstractions/Expression/IParserContext.cs
    startLine: 15
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Expression
  syntax:
    content: string ExpressionPrefix { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property ExpressionPrefix As String
  overload: Steeltoe.Common.Expression.IParserContext.ExpressionPrefix*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.Common.Expression.IParserContext.ExpressionSuffix
  commentId: P:Steeltoe.Common.Expression.IParserContext.ExpressionSuffix
  id: ExpressionSuffix
  parent: Steeltoe.Common.Expression.IParserContext
  langs:
  - csharp
  - vb
  name: ExpressionSuffix
  nameWithType: IParserContext.ExpressionSuffix
  fullName: Steeltoe.Common.Expression.IParserContext.ExpressionSuffix
  type: Property
  source:
    remote:
      path: src/Common/src/Abstractions/Expression/IParserContext.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ExpressionSuffix
    path: ../Steeltoe/src/Common/src/Abstractions/Expression/IParserContext.cs
    startLine: 17
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Expression
  syntax:
    content: string ExpressionSuffix { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property ExpressionSuffix As String
  overload: Steeltoe.Common.Expression.IParserContext.ExpressionSuffix*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Steeltoe.Common.Expression
  commentId: N:Steeltoe.Common.Expression
  name: Steeltoe.Common.Expression
  nameWithType: Steeltoe.Common.Expression
  fullName: Steeltoe.Common.Expression
- uid: Steeltoe.Common.Expression.IParserContext.IsTemplate*
  commentId: Overload:Steeltoe.Common.Expression.IParserContext.IsTemplate
  name: IsTemplate
  nameWithType: IParserContext.IsTemplate
  fullName: Steeltoe.Common.Expression.IParserContext.IsTemplate
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Common.Expression.IParserContext.ExpressionPrefix*
  commentId: Overload:Steeltoe.Common.Expression.IParserContext.ExpressionPrefix
  name: ExpressionPrefix
  nameWithType: IParserContext.ExpressionPrefix
  fullName: Steeltoe.Common.Expression.IParserContext.ExpressionPrefix
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Common.Expression.IParserContext.ExpressionSuffix*
  commentId: Overload:Steeltoe.Common.Expression.IParserContext.ExpressionSuffix
  name: ExpressionSuffix
  nameWithType: IParserContext.ExpressionSuffix
  fullName: Steeltoe.Common.Expression.IParserContext.ExpressionSuffix
