### YamlMime:ManagedReference
items:
- uid: Steeltoe.Management.Endpoint.Metrics.MetricTag
  commentId: T:Steeltoe.Management.Endpoint.Metrics.MetricTag
  id: MetricTag
  parent: Steeltoe.Management.Endpoint.Metrics
  children:
  - Steeltoe.Management.Endpoint.Metrics.MetricTag.#ctor(System.String,System.Collections.Generic.ISet{System.String})
  - Steeltoe.Management.Endpoint.Metrics.MetricTag.Tag
  - Steeltoe.Management.Endpoint.Metrics.MetricTag.Values
  langs:
  - csharp
  - vb
  name: MetricTag
  nameWithType: MetricTag
  fullName: Steeltoe.Management.Endpoint.Metrics.MetricTag
  type: Class
  source:
    remote:
      path: src/Management/src/EndpointBase/Metrics/MetricTag.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MetricTag
    path: ../Steeltoe/src/Management/src/EndpointBase/Metrics/MetricTag.cs
    startLine: 9
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Metrics
  syntax:
    content: public class MetricTag
    content.vb: Public Class MetricTag
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Management.Endpoint.Metrics.MetricTag.Tag
  commentId: P:Steeltoe.Management.Endpoint.Metrics.MetricTag.Tag
  id: Tag
  parent: Steeltoe.Management.Endpoint.Metrics.MetricTag
  langs:
  - csharp
  - vb
  name: Tag
  nameWithType: MetricTag.Tag
  fullName: Steeltoe.Management.Endpoint.Metrics.MetricTag.Tag
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointBase/Metrics/MetricTag.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Tag
    path: ../Steeltoe/src/Management/src/EndpointBase/Metrics/MetricTag.cs
    startLine: 11
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Metrics
  syntax:
    content: >-
      [JsonPropertyName("tag")]

      public string Tag { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("tag")>

      Public ReadOnly Property Tag As String
  overload: Steeltoe.Management.Endpoint.Metrics.MetricTag.Tag*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: tag
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Management.Endpoint.Metrics.MetricTag.Values
  commentId: P:Steeltoe.Management.Endpoint.Metrics.MetricTag.Values
  id: Values
  parent: Steeltoe.Management.Endpoint.Metrics.MetricTag
  langs:
  - csharp
  - vb
  name: Values
  nameWithType: MetricTag.Values
  fullName: Steeltoe.Management.Endpoint.Metrics.MetricTag.Values
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointBase/Metrics/MetricTag.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Values
    path: ../Steeltoe/src/Management/src/EndpointBase/Metrics/MetricTag.cs
    startLine: 14
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Metrics
  syntax:
    content: >-
      [JsonPropertyName("values")]

      public ISet<string> Values { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ISet{System.String}
    content.vb: >-
      <JsonPropertyName("values")>

      Public ReadOnly Property Values As ISet(Of String)
  overload: Steeltoe.Management.Endpoint.Metrics.MetricTag.Values*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: values
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Management.Endpoint.Metrics.MetricTag.#ctor(System.String,System.Collections.Generic.ISet{System.String})
  commentId: M:Steeltoe.Management.Endpoint.Metrics.MetricTag.#ctor(System.String,System.Collections.Generic.ISet{System.String})
  id: '#ctor(System.String,System.Collections.Generic.ISet{System.String})'
  parent: Steeltoe.Management.Endpoint.Metrics.MetricTag
  langs:
  - csharp
  - vb
  name: MetricTag(String, ISet<String>)
  nameWithType: MetricTag.MetricTag(String, ISet<String>)
  fullName: Steeltoe.Management.Endpoint.Metrics.MetricTag.MetricTag(System.String, System.Collections.Generic.ISet<System.String>)
  type: Constructor
  source:
    remote:
      path: src/Management/src/EndpointBase/Metrics/MetricTag.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Management/src/EndpointBase/Metrics/MetricTag.cs
    startLine: 17
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Metrics
  syntax:
    content: public MetricTag(string tag, ISet<string> values)
    parameters:
    - id: tag
      type: System.String
    - id: values
      type: System.Collections.Generic.ISet{System.String}
    content.vb: Public Sub New(tag As String, values As ISet(Of String))
  overload: Steeltoe.Management.Endpoint.Metrics.MetricTag.#ctor*
  nameWithType.vb: MetricTag.MetricTag(String, ISet(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Management.Endpoint.Metrics.MetricTag.MetricTag(System.String, System.Collections.Generic.ISet(Of System.String))
  name.vb: MetricTag(String, ISet(Of String))
references:
- uid: Steeltoe.Management.Endpoint.Metrics
  commentId: N:Steeltoe.Management.Endpoint.Metrics
  name: Steeltoe.Management.Endpoint.Metrics
  nameWithType: Steeltoe.Management.Endpoint.Metrics
  fullName: Steeltoe.Management.Endpoint.Metrics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Management.Endpoint.Metrics.MetricTag.Tag*
  commentId: Overload:Steeltoe.Management.Endpoint.Metrics.MetricTag.Tag
  name: Tag
  nameWithType: MetricTag.Tag
  fullName: Steeltoe.Management.Endpoint.Metrics.MetricTag.Tag
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Management.Endpoint.Metrics.MetricTag.Values*
  commentId: Overload:Steeltoe.Management.Endpoint.Metrics.MetricTag.Values
  name: Values
  nameWithType: MetricTag.Values
  fullName: Steeltoe.Management.Endpoint.Metrics.MetricTag.Values
- uid: System.Collections.Generic.ISet{System.String}
  commentId: T:System.Collections.Generic.ISet{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ISet`1
  name: ISet<String>
  nameWithType: ISet<String>
  fullName: System.Collections.Generic.ISet<System.String>
  nameWithType.vb: ISet(Of String)
  fullName.vb: System.Collections.Generic.ISet(Of System.String)
  name.vb: ISet(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ISet`1
  commentId: T:System.Collections.Generic.ISet`1
  isExternal: true
  name: ISet<T>
  nameWithType: ISet<T>
  fullName: System.Collections.Generic.ISet<T>
  nameWithType.vb: ISet(Of T)
  fullName.vb: System.Collections.Generic.ISet(Of T)
  name.vb: ISet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Management.Endpoint.Metrics.MetricTag.#ctor*
  commentId: Overload:Steeltoe.Management.Endpoint.Metrics.MetricTag.#ctor
  name: MetricTag
  nameWithType: MetricTag.MetricTag
  fullName: Steeltoe.Management.Endpoint.Metrics.MetricTag.MetricTag
