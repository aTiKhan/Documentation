### YamlMime:ManagedReference
items:
- uid: Steeltoe.Integration.IntegrationMessageHeaderAccessor
  commentId: T:Steeltoe.Integration.IntegrationMessageHeaderAccessor
  id: IntegrationMessageHeaderAccessor
  parent: Steeltoe.Integration
  children:
  - Steeltoe.Integration.IntegrationMessageHeaderAccessor.#ctor(Steeltoe.Messaging.IMessage)
  - Steeltoe.Integration.IntegrationMessageHeaderAccessor.ACKNOWLEDGMENT_CALLBACK
  - Steeltoe.Integration.IntegrationMessageHeaderAccessor.CLOSEABLE_RESOURCE
  - Steeltoe.Integration.IntegrationMessageHeaderAccessor.CORRELATION_ID
  - Steeltoe.Integration.IntegrationMessageHeaderAccessor.DELIVERY_ATTEMPT
  - Steeltoe.Integration.IntegrationMessageHeaderAccessor.DUPLICATE_MESSAGE
  - Steeltoe.Integration.IntegrationMessageHeaderAccessor.EXPIRATION_DATE
  - Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetAcknowledgmentCallback
  - Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetCorrelationId
  - Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetDeliveryAttempt
  - Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetExpirationDate
  - Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetHeader``1(System.String)
  - Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetPriority
  - Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetSequenceNumber
  - Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetSequenceSize
  - Steeltoe.Integration.IntegrationMessageHeaderAccessor.IsReadOnly(System.String)
  - Steeltoe.Integration.IntegrationMessageHeaderAccessor.PRIORITY
  - Steeltoe.Integration.IntegrationMessageHeaderAccessor.ROUTING_SLIP
  - Steeltoe.Integration.IntegrationMessageHeaderAccessor.SEQUENCE_DETAILS
  - Steeltoe.Integration.IntegrationMessageHeaderAccessor.SEQUENCE_NUMBER
  - Steeltoe.Integration.IntegrationMessageHeaderAccessor.SEQUENCE_SIZE
  - Steeltoe.Integration.IntegrationMessageHeaderAccessor.SetReadOnlyHeaders(System.Collections.Generic.IList{System.String})
  - Steeltoe.Integration.IntegrationMessageHeaderAccessor.SOURCE_DATA
  - Steeltoe.Integration.IntegrationMessageHeaderAccessor.ToDictionary
  - Steeltoe.Integration.IntegrationMessageHeaderAccessor.VerifyType(System.String,System.Object)
  langs:
  - csharp
  - vb
  name: IntegrationMessageHeaderAccessor
  nameWithType: IntegrationMessageHeaderAccessor
  fullName: Steeltoe.Integration.IntegrationMessageHeaderAccessor
  type: Class
  source:
    remote:
      path: src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IntegrationMessageHeaderAccessor
    path: ../Steeltoe/src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
    startLine: 12
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration
  syntax:
    content: 'public class IntegrationMessageHeaderAccessor : MessageHeaderAccessor, IMessageHeaderAccessor'
    content.vb: >-
      Public Class IntegrationMessageHeaderAccessor

          Inherits MessageHeaderAccessor

          Implements IMessageHeaderAccessor
  inheritance:
  - System.Object
  - Steeltoe.Messaging.Support.MessageHeaderAccessor
  implements:
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor
  inheritedMembers:
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.DEFAULT_CHARSET
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.headers
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor``1(Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor(Steeltoe.Messaging.IMessage,System.Type)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor``1(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor(Steeltoe.Messaging.IMessageHeaders,System.Type)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor``1(Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor``1(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor(Steeltoe.Messaging.IMessage,System.Type)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor(Steeltoe.Messaging.IMessageHeaders,System.Type)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.EnableTimestamp
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.IdGenerator
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.LeaveMutable
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.IsMutable
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.IsModified
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.MessageHeaders
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.Id
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.Timestamp
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.ContentType
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.ReplyChannelName
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.ReplyChannel
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.ErrorChannelName
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.ErrorChannel
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.SetImmutable
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.ToMessageHeaders
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.GetHeader(System.String)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeader(System.String,System.Object)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeaderIfAbsent(System.String,System.Object)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeader(System.String)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeaders(System.String[])
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortLogMessage(System.Object)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedLogMessage(System.Object)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.ToString
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.CreateMutableAccessor(Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.CreateMutableAccessor(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortPayloadLogMessage(System.Object)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedPayloadLogMessage(System.Object)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.IsReadableContentType
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Integration.IntegrationMessageHeaderAccessor.CORRELATION_ID
  commentId: F:Steeltoe.Integration.IntegrationMessageHeaderAccessor.CORRELATION_ID
  id: CORRELATION_ID
  parent: Steeltoe.Integration.IntegrationMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: CORRELATION_ID
  nameWithType: IntegrationMessageHeaderAccessor.CORRELATION_ID
  fullName: Steeltoe.Integration.IntegrationMessageHeaderAccessor.CORRELATION_ID
  type: Field
  source:
    remote:
      path: src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CORRELATION_ID
    path: ../Steeltoe/src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
    startLine: 14
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration
  syntax:
    content: public const string CORRELATION_ID = "correlationId"
    return:
      type: System.String
    content.vb: Public Const CORRELATION_ID As String = "correlationId"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Integration.IntegrationMessageHeaderAccessor.EXPIRATION_DATE
  commentId: F:Steeltoe.Integration.IntegrationMessageHeaderAccessor.EXPIRATION_DATE
  id: EXPIRATION_DATE
  parent: Steeltoe.Integration.IntegrationMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: EXPIRATION_DATE
  nameWithType: IntegrationMessageHeaderAccessor.EXPIRATION_DATE
  fullName: Steeltoe.Integration.IntegrationMessageHeaderAccessor.EXPIRATION_DATE
  type: Field
  source:
    remote:
      path: src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: EXPIRATION_DATE
    path: ../Steeltoe/src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
    startLine: 16
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration
  syntax:
    content: public const string EXPIRATION_DATE = "expirationDate"
    return:
      type: System.String
    content.vb: Public Const EXPIRATION_DATE As String = "expirationDate"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Integration.IntegrationMessageHeaderAccessor.PRIORITY
  commentId: F:Steeltoe.Integration.IntegrationMessageHeaderAccessor.PRIORITY
  id: PRIORITY
  parent: Steeltoe.Integration.IntegrationMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: PRIORITY
  nameWithType: IntegrationMessageHeaderAccessor.PRIORITY
  fullName: Steeltoe.Integration.IntegrationMessageHeaderAccessor.PRIORITY
  type: Field
  source:
    remote:
      path: src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: PRIORITY
    path: ../Steeltoe/src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
    startLine: 18
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration
  syntax:
    content: public const string PRIORITY = "priority"
    return:
      type: System.String
    content.vb: Public Const PRIORITY As String = "priority"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Integration.IntegrationMessageHeaderAccessor.SEQUENCE_NUMBER
  commentId: F:Steeltoe.Integration.IntegrationMessageHeaderAccessor.SEQUENCE_NUMBER
  id: SEQUENCE_NUMBER
  parent: Steeltoe.Integration.IntegrationMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: SEQUENCE_NUMBER
  nameWithType: IntegrationMessageHeaderAccessor.SEQUENCE_NUMBER
  fullName: Steeltoe.Integration.IntegrationMessageHeaderAccessor.SEQUENCE_NUMBER
  type: Field
  source:
    remote:
      path: src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SEQUENCE_NUMBER
    path: ../Steeltoe/src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
    startLine: 20
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration
  syntax:
    content: public const string SEQUENCE_NUMBER = "sequenceNumber"
    return:
      type: System.String
    content.vb: Public Const SEQUENCE_NUMBER As String = "sequenceNumber"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Integration.IntegrationMessageHeaderAccessor.SEQUENCE_SIZE
  commentId: F:Steeltoe.Integration.IntegrationMessageHeaderAccessor.SEQUENCE_SIZE
  id: SEQUENCE_SIZE
  parent: Steeltoe.Integration.IntegrationMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: SEQUENCE_SIZE
  nameWithType: IntegrationMessageHeaderAccessor.SEQUENCE_SIZE
  fullName: Steeltoe.Integration.IntegrationMessageHeaderAccessor.SEQUENCE_SIZE
  type: Field
  source:
    remote:
      path: src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SEQUENCE_SIZE
    path: ../Steeltoe/src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
    startLine: 22
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration
  syntax:
    content: public const string SEQUENCE_SIZE = "sequenceSize"
    return:
      type: System.String
    content.vb: Public Const SEQUENCE_SIZE As String = "sequenceSize"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Integration.IntegrationMessageHeaderAccessor.SEQUENCE_DETAILS
  commentId: F:Steeltoe.Integration.IntegrationMessageHeaderAccessor.SEQUENCE_DETAILS
  id: SEQUENCE_DETAILS
  parent: Steeltoe.Integration.IntegrationMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: SEQUENCE_DETAILS
  nameWithType: IntegrationMessageHeaderAccessor.SEQUENCE_DETAILS
  fullName: Steeltoe.Integration.IntegrationMessageHeaderAccessor.SEQUENCE_DETAILS
  type: Field
  source:
    remote:
      path: src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SEQUENCE_DETAILS
    path: ../Steeltoe/src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
    startLine: 24
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration
  syntax:
    content: public const string SEQUENCE_DETAILS = "sequenceDetails"
    return:
      type: System.String
    content.vb: Public Const SEQUENCE_DETAILS As String = "sequenceDetails"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Integration.IntegrationMessageHeaderAccessor.ROUTING_SLIP
  commentId: F:Steeltoe.Integration.IntegrationMessageHeaderAccessor.ROUTING_SLIP
  id: ROUTING_SLIP
  parent: Steeltoe.Integration.IntegrationMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: ROUTING_SLIP
  nameWithType: IntegrationMessageHeaderAccessor.ROUTING_SLIP
  fullName: Steeltoe.Integration.IntegrationMessageHeaderAccessor.ROUTING_SLIP
  type: Field
  source:
    remote:
      path: src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ROUTING_SLIP
    path: ../Steeltoe/src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
    startLine: 26
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration
  syntax:
    content: public const string ROUTING_SLIP = "routingSlip"
    return:
      type: System.String
    content.vb: Public Const ROUTING_SLIP As String = "routingSlip"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Integration.IntegrationMessageHeaderAccessor.DUPLICATE_MESSAGE
  commentId: F:Steeltoe.Integration.IntegrationMessageHeaderAccessor.DUPLICATE_MESSAGE
  id: DUPLICATE_MESSAGE
  parent: Steeltoe.Integration.IntegrationMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: DUPLICATE_MESSAGE
  nameWithType: IntegrationMessageHeaderAccessor.DUPLICATE_MESSAGE
  fullName: Steeltoe.Integration.IntegrationMessageHeaderAccessor.DUPLICATE_MESSAGE
  type: Field
  source:
    remote:
      path: src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DUPLICATE_MESSAGE
    path: ../Steeltoe/src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
    startLine: 28
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration
  syntax:
    content: public const string DUPLICATE_MESSAGE = "duplicateMessage"
    return:
      type: System.String
    content.vb: Public Const DUPLICATE_MESSAGE As String = "duplicateMessage"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Integration.IntegrationMessageHeaderAccessor.CLOSEABLE_RESOURCE
  commentId: F:Steeltoe.Integration.IntegrationMessageHeaderAccessor.CLOSEABLE_RESOURCE
  id: CLOSEABLE_RESOURCE
  parent: Steeltoe.Integration.IntegrationMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: CLOSEABLE_RESOURCE
  nameWithType: IntegrationMessageHeaderAccessor.CLOSEABLE_RESOURCE
  fullName: Steeltoe.Integration.IntegrationMessageHeaderAccessor.CLOSEABLE_RESOURCE
  type: Field
  source:
    remote:
      path: src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CLOSEABLE_RESOURCE
    path: ../Steeltoe/src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
    startLine: 30
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration
  syntax:
    content: public const string CLOSEABLE_RESOURCE = "closeableResource"
    return:
      type: System.String
    content.vb: Public Const CLOSEABLE_RESOURCE As String = "closeableResource"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Integration.IntegrationMessageHeaderAccessor.DELIVERY_ATTEMPT
  commentId: F:Steeltoe.Integration.IntegrationMessageHeaderAccessor.DELIVERY_ATTEMPT
  id: DELIVERY_ATTEMPT
  parent: Steeltoe.Integration.IntegrationMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: DELIVERY_ATTEMPT
  nameWithType: IntegrationMessageHeaderAccessor.DELIVERY_ATTEMPT
  fullName: Steeltoe.Integration.IntegrationMessageHeaderAccessor.DELIVERY_ATTEMPT
  type: Field
  source:
    remote:
      path: src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DELIVERY_ATTEMPT
    path: ../Steeltoe/src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
    startLine: 32
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration
  syntax:
    content: public const string DELIVERY_ATTEMPT = "deliveryAttempt"
    return:
      type: System.String
    content.vb: Public Const DELIVERY_ATTEMPT As String = "deliveryAttempt"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Integration.IntegrationMessageHeaderAccessor.ACKNOWLEDGMENT_CALLBACK
  commentId: F:Steeltoe.Integration.IntegrationMessageHeaderAccessor.ACKNOWLEDGMENT_CALLBACK
  id: ACKNOWLEDGMENT_CALLBACK
  parent: Steeltoe.Integration.IntegrationMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: ACKNOWLEDGMENT_CALLBACK
  nameWithType: IntegrationMessageHeaderAccessor.ACKNOWLEDGMENT_CALLBACK
  fullName: Steeltoe.Integration.IntegrationMessageHeaderAccessor.ACKNOWLEDGMENT_CALLBACK
  type: Field
  source:
    remote:
      path: src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ACKNOWLEDGMENT_CALLBACK
    path: ../Steeltoe/src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
    startLine: 34
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration
  syntax:
    content: public const string ACKNOWLEDGMENT_CALLBACK = "acknowledgmentCallback"
    return:
      type: System.String
    content.vb: Public Const ACKNOWLEDGMENT_CALLBACK As String = "acknowledgmentCallback"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Integration.IntegrationMessageHeaderAccessor.SOURCE_DATA
  commentId: F:Steeltoe.Integration.IntegrationMessageHeaderAccessor.SOURCE_DATA
  id: SOURCE_DATA
  parent: Steeltoe.Integration.IntegrationMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: SOURCE_DATA
  nameWithType: IntegrationMessageHeaderAccessor.SOURCE_DATA
  fullName: Steeltoe.Integration.IntegrationMessageHeaderAccessor.SOURCE_DATA
  type: Field
  source:
    remote:
      path: src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SOURCE_DATA
    path: ../Steeltoe/src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
    startLine: 36
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration
  syntax:
    content: public const string SOURCE_DATA = "sourceData"
    return:
      type: System.String
    content.vb: Public Const SOURCE_DATA As String = "sourceData"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Integration.IntegrationMessageHeaderAccessor.#ctor(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Integration.IntegrationMessageHeaderAccessor.#ctor(Steeltoe.Messaging.IMessage)
  id: '#ctor(Steeltoe.Messaging.IMessage)'
  parent: Steeltoe.Integration.IntegrationMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: IntegrationMessageHeaderAccessor(IMessage)
  nameWithType: IntegrationMessageHeaderAccessor.IntegrationMessageHeaderAccessor(IMessage)
  fullName: Steeltoe.Integration.IntegrationMessageHeaderAccessor.IntegrationMessageHeaderAccessor(Steeltoe.Messaging.IMessage)
  type: Constructor
  source:
    remote:
      path: src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
    startLine: 40
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration
  syntax:
    content: public IntegrationMessageHeaderAccessor(IMessage message)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    content.vb: Public Sub New(message As IMessage)
  overload: Steeltoe.Integration.IntegrationMessageHeaderAccessor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Integration.IntegrationMessageHeaderAccessor.SetReadOnlyHeaders(System.Collections.Generic.IList{System.String})
  commentId: M:Steeltoe.Integration.IntegrationMessageHeaderAccessor.SetReadOnlyHeaders(System.Collections.Generic.IList{System.String})
  id: SetReadOnlyHeaders(System.Collections.Generic.IList{System.String})
  parent: Steeltoe.Integration.IntegrationMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: SetReadOnlyHeaders(IList<String>)
  nameWithType: IntegrationMessageHeaderAccessor.SetReadOnlyHeaders(IList<String>)
  fullName: Steeltoe.Integration.IntegrationMessageHeaderAccessor.SetReadOnlyHeaders(System.Collections.Generic.IList<System.String>)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetReadOnlyHeaders
    path: ../Steeltoe/src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
    startLine: 45
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration
  syntax:
    content: public void SetReadOnlyHeaders(IList<string> readOnlyHeaders)
    parameters:
    - id: readOnlyHeaders
      type: System.Collections.Generic.IList{System.String}
    content.vb: Public Sub SetReadOnlyHeaders(readOnlyHeaders As IList(Of String))
  overload: Steeltoe.Integration.IntegrationMessageHeaderAccessor.SetReadOnlyHeaders*
  nameWithType.vb: IntegrationMessageHeaderAccessor.SetReadOnlyHeaders(IList(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Integration.IntegrationMessageHeaderAccessor.SetReadOnlyHeaders(System.Collections.Generic.IList(Of System.String))
  name.vb: SetReadOnlyHeaders(IList(Of String))
- uid: Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetExpirationDate
  commentId: M:Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetExpirationDate
  id: GetExpirationDate
  parent: Steeltoe.Integration.IntegrationMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: GetExpirationDate()
  nameWithType: IntegrationMessageHeaderAccessor.GetExpirationDate()
  fullName: Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetExpirationDate()
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetExpirationDate
    path: ../Steeltoe/src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
    startLine: 61
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration
  syntax:
    content: public long? GetExpirationDate()
    return:
      type: System.Nullable{System.Int64}
    content.vb: Public Function GetExpirationDate As Long?
  overload: Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetExpirationDate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetCorrelationId
  commentId: M:Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetCorrelationId
  id: GetCorrelationId
  parent: Steeltoe.Integration.IntegrationMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: GetCorrelationId()
  nameWithType: IntegrationMessageHeaderAccessor.GetCorrelationId()
  fullName: Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetCorrelationId()
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetCorrelationId
    path: ../Steeltoe/src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
    startLine: 66
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration
  syntax:
    content: public object GetCorrelationId()
    return:
      type: System.Object
    content.vb: Public Function GetCorrelationId As Object
  overload: Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetCorrelationId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetSequenceNumber
  commentId: M:Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetSequenceNumber
  id: GetSequenceNumber
  parent: Steeltoe.Integration.IntegrationMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: GetSequenceNumber()
  nameWithType: IntegrationMessageHeaderAccessor.GetSequenceNumber()
  fullName: Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetSequenceNumber()
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetSequenceNumber
    path: ../Steeltoe/src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
    startLine: 71
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration
  syntax:
    content: public int GetSequenceNumber()
    return:
      type: System.Int32
    content.vb: Public Function GetSequenceNumber As Integer
  overload: Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetSequenceNumber*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetSequenceSize
  commentId: M:Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetSequenceSize
  id: GetSequenceSize
  parent: Steeltoe.Integration.IntegrationMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: GetSequenceSize()
  nameWithType: IntegrationMessageHeaderAccessor.GetSequenceSize()
  fullName: Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetSequenceSize()
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetSequenceSize
    path: ../Steeltoe/src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
    startLine: 77
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration
  syntax:
    content: public int GetSequenceSize()
    return:
      type: System.Int32
    content.vb: Public Function GetSequenceSize As Integer
  overload: Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetSequenceSize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetPriority
  commentId: M:Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetPriority
  id: GetPriority
  parent: Steeltoe.Integration.IntegrationMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: GetPriority()
  nameWithType: IntegrationMessageHeaderAccessor.GetPriority()
  fullName: Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetPriority()
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetPriority
    path: ../Steeltoe/src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
    startLine: 83
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration
  syntax:
    content: public int? GetPriority()
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Function GetPriority As Integer?
  overload: Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetPriority*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetAcknowledgmentCallback
  commentId: M:Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetAcknowledgmentCallback
  id: GetAcknowledgmentCallback
  parent: Steeltoe.Integration.IntegrationMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: GetAcknowledgmentCallback()
  nameWithType: IntegrationMessageHeaderAccessor.GetAcknowledgmentCallback()
  fullName: Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetAcknowledgmentCallback()
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetAcknowledgmentCallback
    path: ../Steeltoe/src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
    startLine: 88
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration
  syntax:
    content: public IAcknowledgmentCallback GetAcknowledgmentCallback()
    return:
      type: Steeltoe.Integration.Acks.IAcknowledgmentCallback
    content.vb: Public Function GetAcknowledgmentCallback As IAcknowledgmentCallback
  overload: Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetAcknowledgmentCallback*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetDeliveryAttempt
  commentId: M:Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetDeliveryAttempt
  id: GetDeliveryAttempt
  parent: Steeltoe.Integration.IntegrationMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: GetDeliveryAttempt()
  nameWithType: IntegrationMessageHeaderAccessor.GetDeliveryAttempt()
  fullName: Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetDeliveryAttempt()
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetDeliveryAttempt
    path: ../Steeltoe/src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
    startLine: 93
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration
  syntax:
    content: public int? GetDeliveryAttempt()
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Function GetDeliveryAttempt As Integer?
  overload: Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetDeliveryAttempt*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetHeader``1(System.String)
  commentId: M:Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetHeader``1(System.String)
  id: GetHeader``1(System.String)
  parent: Steeltoe.Integration.IntegrationMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: GetHeader<T>(String)
  nameWithType: IntegrationMessageHeaderAccessor.GetHeader<T>(String)
  fullName: Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetHeader<T>(System.String)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetHeader
    path: ../Steeltoe/src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
    startLine: 98
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration
  syntax:
    content: public T GetHeader<T>(string key)
    parameters:
    - id: key
      type: System.String
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function GetHeader(Of T)(key As String) As T
  overload: Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetHeader*
  nameWithType.vb: IntegrationMessageHeaderAccessor.GetHeader(Of T)(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetHeader(Of T)(System.String)
  name.vb: GetHeader(Of T)(String)
- uid: Steeltoe.Integration.IntegrationMessageHeaderAccessor.ToDictionary
  commentId: M:Steeltoe.Integration.IntegrationMessageHeaderAccessor.ToDictionary
  id: ToDictionary
  parent: Steeltoe.Integration.IntegrationMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: ToDictionary()
  nameWithType: IntegrationMessageHeaderAccessor.ToDictionary()
  fullName: Steeltoe.Integration.IntegrationMessageHeaderAccessor.ToDictionary()
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ToDictionary
    path: ../Steeltoe/src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
    startLine: 115
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration
  syntax:
    content: public override IDictionary<string, object> ToDictionary()
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: Public Overrides Function ToDictionary As IDictionary(Of String, Object)
  overridden: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToDictionary
  overload: Steeltoe.Integration.IntegrationMessageHeaderAccessor.ToDictionary*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Steeltoe.Integration.IntegrationMessageHeaderAccessor.IsReadOnly(System.String)
  commentId: M:Steeltoe.Integration.IntegrationMessageHeaderAccessor.IsReadOnly(System.String)
  id: IsReadOnly(System.String)
  parent: Steeltoe.Integration.IntegrationMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: IsReadOnly(String)
  nameWithType: IntegrationMessageHeaderAccessor.IsReadOnly(String)
  fullName: Steeltoe.Integration.IntegrationMessageHeaderAccessor.IsReadOnly(System.String)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsReadOnly
    path: ../Steeltoe/src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
    startLine: 133
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration
  syntax:
    content: public bool IsReadOnly(string headerName)
    parameters:
    - id: headerName
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function IsReadOnly(headerName As String) As Boolean
  overload: Steeltoe.Integration.IntegrationMessageHeaderAccessor.IsReadOnly*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Integration.IntegrationMessageHeaderAccessor.VerifyType(System.String,System.Object)
  commentId: M:Steeltoe.Integration.IntegrationMessageHeaderAccessor.VerifyType(System.String,System.Object)
  id: VerifyType(System.String,System.Object)
  parent: Steeltoe.Integration.IntegrationMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: VerifyType(String, Object)
  nameWithType: IntegrationMessageHeaderAccessor.VerifyType(String, Object)
  fullName: Steeltoe.Integration.IntegrationMessageHeaderAccessor.VerifyType(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: VerifyType
    path: ../Steeltoe/src/Integration/src/IntegrationBase/IntegrationMessageHeaderAccessor.cs
    startLine: 138
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration
  syntax:
    content: protected override void VerifyType(string headerName, object headerValue)
    parameters:
    - id: headerName
      type: System.String
    - id: headerValue
      type: System.Object
    content.vb: Protected Overrides Sub VerifyType(headerName As String, headerValue As Object)
  overridden: Steeltoe.Messaging.Support.MessageHeaderAccessor.VerifyType(System.String,System.Object)
  overload: Steeltoe.Integration.IntegrationMessageHeaderAccessor.VerifyType*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Steeltoe.Integration
  commentId: N:Steeltoe.Integration
  name: Steeltoe.Integration
  nameWithType: Steeltoe.Integration
  fullName: Steeltoe.Integration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor
  commentId: T:Steeltoe.Messaging.Support.MessageHeaderAccessor
  parent: Steeltoe.Messaging.Support
  name: MessageHeaderAccessor
  nameWithType: MessageHeaderAccessor
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  commentId: T:Steeltoe.Messaging.Support.IMessageHeaderAccessor
  parent: Steeltoe.Messaging.Support
  name: IMessageHeaderAccessor
  nameWithType: IMessageHeaderAccessor
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.DEFAULT_CHARSET
  commentId: F:Steeltoe.Messaging.Support.MessageHeaderAccessor.DEFAULT_CHARSET
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: DEFAULT_CHARSET
  nameWithType: MessageHeaderAccessor.DEFAULT_CHARSET
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.DEFAULT_CHARSET
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.headers
  commentId: F:Steeltoe.Messaging.Support.MessageHeaderAccessor.headers
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: headers
  nameWithType: MessageHeaderAccessor.headers
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.headers
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor``1(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor``1(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: GetAccessor<T>(IMessage)
  nameWithType: MessageHeaderAccessor.GetAccessor<T>(IMessage)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor<T>(Steeltoe.Messaging.IMessage)
  nameWithType.vb: MessageHeaderAccessor.GetAccessor(Of T)(IMessage)
  fullName.vb: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor(Of T)(Steeltoe.Messaging.IMessage)
  name.vb: GetAccessor(Of T)(IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor``1(Steeltoe.Messaging.IMessage)
    name: GetAccessor<T>
    nameWithType: MessageHeaderAccessor.GetAccessor<T>
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor``1(Steeltoe.Messaging.IMessage)
    name: GetAccessor(Of T)
    nameWithType: MessageHeaderAccessor.GetAccessor(Of T)
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor(Steeltoe.Messaging.IMessage,System.Type)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor(Steeltoe.Messaging.IMessage,System.Type)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  isExternal: true
  name: GetAccessor(IMessage, Type)
  nameWithType: MessageHeaderAccessor.GetAccessor(IMessage, Type)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor(Steeltoe.Messaging.IMessage, System.Type)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor(Steeltoe.Messaging.IMessage,System.Type)
    name: GetAccessor
    nameWithType: MessageHeaderAccessor.GetAccessor
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor(Steeltoe.Messaging.IMessage,System.Type)
    name: GetAccessor
    nameWithType: MessageHeaderAccessor.GetAccessor
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor``1(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor``1(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: GetAccessor<T>(IMessageHeaders)
  nameWithType: MessageHeaderAccessor.GetAccessor<T>(IMessageHeaders)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor<T>(Steeltoe.Messaging.IMessageHeaders)
  nameWithType.vb: MessageHeaderAccessor.GetAccessor(Of T)(IMessageHeaders)
  fullName.vb: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor(Of T)(Steeltoe.Messaging.IMessageHeaders)
  name.vb: GetAccessor(Of T)(IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor``1(Steeltoe.Messaging.IMessageHeaders)
    name: GetAccessor<T>
    nameWithType: MessageHeaderAccessor.GetAccessor<T>
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor``1(Steeltoe.Messaging.IMessageHeaders)
    name: GetAccessor(Of T)
    nameWithType: MessageHeaderAccessor.GetAccessor(Of T)
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor(Steeltoe.Messaging.IMessageHeaders,System.Type)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor(Steeltoe.Messaging.IMessageHeaders,System.Type)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  isExternal: true
  name: GetAccessor(IMessageHeaders, Type)
  nameWithType: MessageHeaderAccessor.GetAccessor(IMessageHeaders, Type)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor(Steeltoe.Messaging.IMessageHeaders, System.Type)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor(Steeltoe.Messaging.IMessageHeaders,System.Type)
    name: GetAccessor
    nameWithType: MessageHeaderAccessor.GetAccessor
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor(Steeltoe.Messaging.IMessageHeaders,System.Type)
    name: GetAccessor
    nameWithType: MessageHeaderAccessor.GetAccessor
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor``1(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor``1(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: GetMutableAccessor<T>(IMessage)
  nameWithType: MessageHeaderAccessor.GetMutableAccessor<T>(IMessage)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor<T>(Steeltoe.Messaging.IMessage)
  nameWithType.vb: MessageHeaderAccessor.GetMutableAccessor(Of T)(IMessage)
  fullName.vb: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor(Of T)(Steeltoe.Messaging.IMessage)
  name.vb: GetMutableAccessor(Of T)(IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor``1(Steeltoe.Messaging.IMessage)
    name: GetMutableAccessor<T>
    nameWithType: MessageHeaderAccessor.GetMutableAccessor<T>
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor``1(Steeltoe.Messaging.IMessage)
    name: GetMutableAccessor(Of T)
    nameWithType: MessageHeaderAccessor.GetMutableAccessor(Of T)
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor``1(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor``1(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: GetMutableAccessor<T>(IMessageHeaders)
  nameWithType: MessageHeaderAccessor.GetMutableAccessor<T>(IMessageHeaders)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor<T>(Steeltoe.Messaging.IMessageHeaders)
  nameWithType.vb: MessageHeaderAccessor.GetMutableAccessor(Of T)(IMessageHeaders)
  fullName.vb: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor(Of T)(Steeltoe.Messaging.IMessageHeaders)
  name.vb: GetMutableAccessor(Of T)(IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor``1(Steeltoe.Messaging.IMessageHeaders)
    name: GetMutableAccessor<T>
    nameWithType: MessageHeaderAccessor.GetMutableAccessor<T>
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor``1(Steeltoe.Messaging.IMessageHeaders)
    name: GetMutableAccessor(Of T)
    nameWithType: MessageHeaderAccessor.GetMutableAccessor(Of T)
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor(Steeltoe.Messaging.IMessage,System.Type)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor(Steeltoe.Messaging.IMessage,System.Type)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  isExternal: true
  name: GetMutableAccessor(IMessage, Type)
  nameWithType: MessageHeaderAccessor.GetMutableAccessor(IMessage, Type)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor(Steeltoe.Messaging.IMessage, System.Type)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor(Steeltoe.Messaging.IMessage,System.Type)
    name: GetMutableAccessor
    nameWithType: MessageHeaderAccessor.GetMutableAccessor
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor(Steeltoe.Messaging.IMessage,System.Type)
    name: GetMutableAccessor
    nameWithType: MessageHeaderAccessor.GetMutableAccessor
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor(Steeltoe.Messaging.IMessageHeaders,System.Type)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor(Steeltoe.Messaging.IMessageHeaders,System.Type)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  isExternal: true
  name: GetMutableAccessor(IMessageHeaders, Type)
  nameWithType: MessageHeaderAccessor.GetMutableAccessor(IMessageHeaders, Type)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor(Steeltoe.Messaging.IMessageHeaders, System.Type)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor(Steeltoe.Messaging.IMessageHeaders,System.Type)
    name: GetMutableAccessor
    nameWithType: MessageHeaderAccessor.GetMutableAccessor
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor(Steeltoe.Messaging.IMessageHeaders,System.Type)
    name: GetMutableAccessor
    nameWithType: MessageHeaderAccessor.GetMutableAccessor
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.EnableTimestamp
  commentId: P:Steeltoe.Messaging.Support.MessageHeaderAccessor.EnableTimestamp
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: EnableTimestamp
  nameWithType: MessageHeaderAccessor.EnableTimestamp
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.EnableTimestamp
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.IdGenerator
  commentId: P:Steeltoe.Messaging.Support.MessageHeaderAccessor.IdGenerator
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: IdGenerator
  nameWithType: MessageHeaderAccessor.IdGenerator
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.IdGenerator
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.LeaveMutable
  commentId: P:Steeltoe.Messaging.Support.MessageHeaderAccessor.LeaveMutable
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: LeaveMutable
  nameWithType: MessageHeaderAccessor.LeaveMutable
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.LeaveMutable
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsMutable
  commentId: P:Steeltoe.Messaging.Support.MessageHeaderAccessor.IsMutable
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: IsMutable
  nameWithType: MessageHeaderAccessor.IsMutable
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsMutable
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsModified
  commentId: P:Steeltoe.Messaging.Support.MessageHeaderAccessor.IsModified
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: IsModified
  nameWithType: MessageHeaderAccessor.IsModified
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsModified
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.MessageHeaders
  commentId: P:Steeltoe.Messaging.Support.MessageHeaderAccessor.MessageHeaders
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: MessageHeaders
  nameWithType: MessageHeaderAccessor.MessageHeaders
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.MessageHeaders
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.Id
  commentId: P:Steeltoe.Messaging.Support.MessageHeaderAccessor.Id
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: Id
  nameWithType: MessageHeaderAccessor.Id
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.Id
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.Timestamp
  commentId: P:Steeltoe.Messaging.Support.MessageHeaderAccessor.Timestamp
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: Timestamp
  nameWithType: MessageHeaderAccessor.Timestamp
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.Timestamp
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.ContentType
  commentId: P:Steeltoe.Messaging.Support.MessageHeaderAccessor.ContentType
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: ContentType
  nameWithType: MessageHeaderAccessor.ContentType
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.ContentType
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.ReplyChannelName
  commentId: P:Steeltoe.Messaging.Support.MessageHeaderAccessor.ReplyChannelName
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: ReplyChannelName
  nameWithType: MessageHeaderAccessor.ReplyChannelName
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.ReplyChannelName
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.ReplyChannel
  commentId: P:Steeltoe.Messaging.Support.MessageHeaderAccessor.ReplyChannel
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: ReplyChannel
  nameWithType: MessageHeaderAccessor.ReplyChannel
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.ReplyChannel
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.ErrorChannelName
  commentId: P:Steeltoe.Messaging.Support.MessageHeaderAccessor.ErrorChannelName
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: ErrorChannelName
  nameWithType: MessageHeaderAccessor.ErrorChannelName
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.ErrorChannelName
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.ErrorChannel
  commentId: P:Steeltoe.Messaging.Support.MessageHeaderAccessor.ErrorChannel
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: ErrorChannel
  nameWithType: MessageHeaderAccessor.ErrorChannel
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.ErrorChannel
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetImmutable
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.SetImmutable
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: SetImmutable()
  nameWithType: MessageHeaderAccessor.SetImmutable()
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetImmutable()
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetImmutable
    name: SetImmutable
    nameWithType: MessageHeaderAccessor.SetImmutable
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetImmutable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetImmutable
    name: SetImmutable
    nameWithType: MessageHeaderAccessor.SetImmutable
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetImmutable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToMessageHeaders
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.ToMessageHeaders
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: ToMessageHeaders()
  nameWithType: MessageHeaderAccessor.ToMessageHeaders()
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToMessageHeaders()
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToMessageHeaders
    name: ToMessageHeaders
    nameWithType: MessageHeaderAccessor.ToMessageHeaders
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToMessageHeaders
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToMessageHeaders
    name: ToMessageHeaders
    nameWithType: MessageHeaderAccessor.ToMessageHeaders
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToMessageHeaders
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetHeader(System.String)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetHeader(System.String)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  isExternal: true
  name: GetHeader(String)
  nameWithType: MessageHeaderAccessor.GetHeader(String)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetHeader(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetHeader(System.String)
    name: GetHeader
    nameWithType: MessageHeaderAccessor.GetHeader
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetHeader
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetHeader(System.String)
    name: GetHeader
    nameWithType: MessageHeaderAccessor.GetHeader
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetHeader
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeader(System.String,System.Object)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeader(System.String,System.Object)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  isExternal: true
  name: SetHeader(String, Object)
  nameWithType: MessageHeaderAccessor.SetHeader(String, Object)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeader(System.String, System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeader(System.String,System.Object)
    name: SetHeader
    nameWithType: MessageHeaderAccessor.SetHeader
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeader
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeader(System.String,System.Object)
    name: SetHeader
    nameWithType: MessageHeaderAccessor.SetHeader
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeader
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeaderIfAbsent(System.String,System.Object)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeaderIfAbsent(System.String,System.Object)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  isExternal: true
  name: SetHeaderIfAbsent(String, Object)
  nameWithType: MessageHeaderAccessor.SetHeaderIfAbsent(String, Object)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeaderIfAbsent(System.String, System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeaderIfAbsent(System.String,System.Object)
    name: SetHeaderIfAbsent
    nameWithType: MessageHeaderAccessor.SetHeaderIfAbsent
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeaderIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeaderIfAbsent(System.String,System.Object)
    name: SetHeaderIfAbsent
    nameWithType: MessageHeaderAccessor.SetHeaderIfAbsent
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeaderIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeader(System.String)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeader(System.String)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  isExternal: true
  name: RemoveHeader(String)
  nameWithType: MessageHeaderAccessor.RemoveHeader(String)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeader(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeader(System.String)
    name: RemoveHeader
    nameWithType: MessageHeaderAccessor.RemoveHeader
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeader
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeader(System.String)
    name: RemoveHeader
    nameWithType: MessageHeaderAccessor.RemoveHeader
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeader
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeaders(System.String[])
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeaders(System.String[])
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  isExternal: true
  name: RemoveHeaders(String[])
  nameWithType: MessageHeaderAccessor.RemoveHeaders(String[])
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeaders(System.String[])
  nameWithType.vb: MessageHeaderAccessor.RemoveHeaders(String())
  fullName.vb: Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeaders(System.String())
  name.vb: RemoveHeaders(String())
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeaders(System.String[])
    name: RemoveHeaders
    nameWithType: MessageHeaderAccessor.RemoveHeaders
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeaders(System.String[])
    name: RemoveHeaders
    nameWithType: MessageHeaderAccessor.RemoveHeaders
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  isExternal: true
  name: CopyHeaders(IDictionary<String, Object>)
  nameWithType: MessageHeaderAccessor.CopyHeaders(IDictionary<String, Object>)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeaders(System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: MessageHeaderAccessor.CopyHeaders(IDictionary(Of String, Object))
  fullName.vb: Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeaders(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: CopyHeaders(IDictionary(Of String, Object))
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: CopyHeaders
    nameWithType: MessageHeaderAccessor.CopyHeaders
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: CopyHeaders
    nameWithType: MessageHeaderAccessor.CopyHeaders
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  isExternal: true
  name: CopyHeadersIfAbsent(IDictionary<String, Object>)
  nameWithType: MessageHeaderAccessor.CopyHeadersIfAbsent(IDictionary<String, Object>)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: MessageHeaderAccessor.CopyHeadersIfAbsent(IDictionary(Of String, Object))
  fullName.vb: Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: CopyHeadersIfAbsent(IDictionary(Of String, Object))
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: CopyHeadersIfAbsent
    nameWithType: MessageHeaderAccessor.CopyHeadersIfAbsent
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeadersIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: CopyHeadersIfAbsent
    nameWithType: MessageHeaderAccessor.CopyHeadersIfAbsent
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeadersIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortLogMessage(System.Object)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortLogMessage(System.Object)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  isExternal: true
  name: GetShortLogMessage(Object)
  nameWithType: MessageHeaderAccessor.GetShortLogMessage(Object)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortLogMessage(System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortLogMessage(System.Object)
    name: GetShortLogMessage
    nameWithType: MessageHeaderAccessor.GetShortLogMessage
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortLogMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortLogMessage(System.Object)
    name: GetShortLogMessage
    nameWithType: MessageHeaderAccessor.GetShortLogMessage
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortLogMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedLogMessage(System.Object)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedLogMessage(System.Object)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  isExternal: true
  name: GetDetailedLogMessage(Object)
  nameWithType: MessageHeaderAccessor.GetDetailedLogMessage(Object)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedLogMessage(System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedLogMessage(System.Object)
    name: GetDetailedLogMessage
    nameWithType: MessageHeaderAccessor.GetDetailedLogMessage
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedLogMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedLogMessage(System.Object)
    name: GetDetailedLogMessage
    nameWithType: MessageHeaderAccessor.GetDetailedLogMessage
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedLogMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToString
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.ToString
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: ToString()
  nameWithType: MessageHeaderAccessor.ToString()
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToString()
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToString
    name: ToString
    nameWithType: MessageHeaderAccessor.ToString
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToString
    name: ToString
    nameWithType: MessageHeaderAccessor.ToString
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.CreateMutableAccessor(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.CreateMutableAccessor(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: CreateMutableAccessor(IMessage)
  nameWithType: MessageHeaderAccessor.CreateMutableAccessor(IMessage)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.CreateMutableAccessor(Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.CreateMutableAccessor(Steeltoe.Messaging.IMessage)
    name: CreateMutableAccessor
    nameWithType: MessageHeaderAccessor.CreateMutableAccessor
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.CreateMutableAccessor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.CreateMutableAccessor(Steeltoe.Messaging.IMessage)
    name: CreateMutableAccessor
    nameWithType: MessageHeaderAccessor.CreateMutableAccessor
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.CreateMutableAccessor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.CreateMutableAccessor(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.CreateMutableAccessor(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: CreateMutableAccessor(IMessageHeaders)
  nameWithType: MessageHeaderAccessor.CreateMutableAccessor(IMessageHeaders)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.CreateMutableAccessor(Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.CreateMutableAccessor(Steeltoe.Messaging.IMessageHeaders)
    name: CreateMutableAccessor
    nameWithType: MessageHeaderAccessor.CreateMutableAccessor
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.CreateMutableAccessor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.CreateMutableAccessor(Steeltoe.Messaging.IMessageHeaders)
    name: CreateMutableAccessor
    nameWithType: MessageHeaderAccessor.CreateMutableAccessor
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.CreateMutableAccessor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortPayloadLogMessage(System.Object)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortPayloadLogMessage(System.Object)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  isExternal: true
  name: GetShortPayloadLogMessage(Object)
  nameWithType: MessageHeaderAccessor.GetShortPayloadLogMessage(Object)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortPayloadLogMessage(System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortPayloadLogMessage(System.Object)
    name: GetShortPayloadLogMessage
    nameWithType: MessageHeaderAccessor.GetShortPayloadLogMessage
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortPayloadLogMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortPayloadLogMessage(System.Object)
    name: GetShortPayloadLogMessage
    nameWithType: MessageHeaderAccessor.GetShortPayloadLogMessage
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortPayloadLogMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedPayloadLogMessage(System.Object)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedPayloadLogMessage(System.Object)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  isExternal: true
  name: GetDetailedPayloadLogMessage(Object)
  nameWithType: MessageHeaderAccessor.GetDetailedPayloadLogMessage(Object)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedPayloadLogMessage(System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedPayloadLogMessage(System.Object)
    name: GetDetailedPayloadLogMessage
    nameWithType: MessageHeaderAccessor.GetDetailedPayloadLogMessage
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedPayloadLogMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedPayloadLogMessage(System.Object)
    name: GetDetailedPayloadLogMessage
    nameWithType: MessageHeaderAccessor.GetDetailedPayloadLogMessage
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedPayloadLogMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsReadableContentType
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.IsReadableContentType
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: IsReadableContentType()
  nameWithType: MessageHeaderAccessor.IsReadableContentType()
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsReadableContentType()
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsReadableContentType
    name: IsReadableContentType
    nameWithType: MessageHeaderAccessor.IsReadableContentType
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsReadableContentType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsReadableContentType
    name: IsReadableContentType
    nameWithType: MessageHeaderAccessor.IsReadableContentType
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsReadableContentType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.Support
  commentId: N:Steeltoe.Messaging.Support
  name: Steeltoe.Messaging.Support
  nameWithType: Steeltoe.Messaging.Support
  fullName: Steeltoe.Messaging.Support
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Integration.IntegrationMessageHeaderAccessor.#ctor*
  commentId: Overload:Steeltoe.Integration.IntegrationMessageHeaderAccessor.#ctor
  name: IntegrationMessageHeaderAccessor
  nameWithType: IntegrationMessageHeaderAccessor.IntegrationMessageHeaderAccessor
  fullName: Steeltoe.Integration.IntegrationMessageHeaderAccessor.IntegrationMessageHeaderAccessor
- uid: Steeltoe.Messaging.IMessage
  commentId: T:Steeltoe.Messaging.IMessage
  parent: Steeltoe.Messaging
  name: IMessage
  nameWithType: IMessage
  fullName: Steeltoe.Messaging.IMessage
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: Steeltoe.Integration.IntegrationMessageHeaderAccessor.SetReadOnlyHeaders*
  commentId: Overload:Steeltoe.Integration.IntegrationMessageHeaderAccessor.SetReadOnlyHeaders
  name: SetReadOnlyHeaders
  nameWithType: IntegrationMessageHeaderAccessor.SetReadOnlyHeaders
  fullName: Steeltoe.Integration.IntegrationMessageHeaderAccessor.SetReadOnlyHeaders
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetExpirationDate*
  commentId: Overload:Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetExpirationDate
  name: GetExpirationDate
  nameWithType: IntegrationMessageHeaderAccessor.GetExpirationDate
  fullName: Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetExpirationDate
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetCorrelationId*
  commentId: Overload:Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetCorrelationId
  name: GetCorrelationId
  nameWithType: IntegrationMessageHeaderAccessor.GetCorrelationId
  fullName: Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetCorrelationId
- uid: Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetSequenceNumber*
  commentId: Overload:Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetSequenceNumber
  name: GetSequenceNumber
  nameWithType: IntegrationMessageHeaderAccessor.GetSequenceNumber
  fullName: Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetSequenceNumber
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetSequenceSize*
  commentId: Overload:Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetSequenceSize
  name: GetSequenceSize
  nameWithType: IntegrationMessageHeaderAccessor.GetSequenceSize
  fullName: Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetSequenceSize
- uid: Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetPriority*
  commentId: Overload:Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetPriority
  name: GetPriority
  nameWithType: IntegrationMessageHeaderAccessor.GetPriority
  fullName: Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetPriority
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetAcknowledgmentCallback*
  commentId: Overload:Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetAcknowledgmentCallback
  name: GetAcknowledgmentCallback
  nameWithType: IntegrationMessageHeaderAccessor.GetAcknowledgmentCallback
  fullName: Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetAcknowledgmentCallback
- uid: Steeltoe.Integration.Acks.IAcknowledgmentCallback
  commentId: T:Steeltoe.Integration.Acks.IAcknowledgmentCallback
  parent: Steeltoe.Integration.Acks
  name: IAcknowledgmentCallback
  nameWithType: IAcknowledgmentCallback
  fullName: Steeltoe.Integration.Acks.IAcknowledgmentCallback
- uid: Steeltoe.Integration.Acks
  commentId: N:Steeltoe.Integration.Acks
  name: Steeltoe.Integration.Acks
  nameWithType: Steeltoe.Integration.Acks
  fullName: Steeltoe.Integration.Acks
- uid: Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetDeliveryAttempt*
  commentId: Overload:Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetDeliveryAttempt
  name: GetDeliveryAttempt
  nameWithType: IntegrationMessageHeaderAccessor.GetDeliveryAttempt
  fullName: Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetDeliveryAttempt
- uid: Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetHeader*
  commentId: Overload:Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetHeader
  name: GetHeader
  nameWithType: IntegrationMessageHeaderAccessor.GetHeader
  fullName: Steeltoe.Integration.IntegrationMessageHeaderAccessor.GetHeader
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToDictionary
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.ToDictionary
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: ToDictionary()
  nameWithType: MessageHeaderAccessor.ToDictionary()
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToDictionary()
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToDictionary
    name: ToDictionary
    nameWithType: MessageHeaderAccessor.ToDictionary
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToDictionary
    name: ToDictionary
    nameWithType: MessageHeaderAccessor.ToDictionary
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.IntegrationMessageHeaderAccessor.ToDictionary*
  commentId: Overload:Steeltoe.Integration.IntegrationMessageHeaderAccessor.ToDictionary
  name: ToDictionary
  nameWithType: IntegrationMessageHeaderAccessor.ToDictionary
  fullName: Steeltoe.Integration.IntegrationMessageHeaderAccessor.ToDictionary
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.IntegrationMessageHeaderAccessor.IsReadOnly*
  commentId: Overload:Steeltoe.Integration.IntegrationMessageHeaderAccessor.IsReadOnly
  name: IsReadOnly
  nameWithType: IntegrationMessageHeaderAccessor.IsReadOnly
  fullName: Steeltoe.Integration.IntegrationMessageHeaderAccessor.IsReadOnly
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.VerifyType(System.String,System.Object)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.VerifyType(System.String,System.Object)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  isExternal: true
  name: VerifyType(String, Object)
  nameWithType: MessageHeaderAccessor.VerifyType(String, Object)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.VerifyType(System.String, System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.VerifyType(System.String,System.Object)
    name: VerifyType
    nameWithType: MessageHeaderAccessor.VerifyType
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.VerifyType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.VerifyType(System.String,System.Object)
    name: VerifyType
    nameWithType: MessageHeaderAccessor.VerifyType
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.VerifyType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.IntegrationMessageHeaderAccessor.VerifyType*
  commentId: Overload:Steeltoe.Integration.IntegrationMessageHeaderAccessor.VerifyType
  name: VerifyType
  nameWithType: IntegrationMessageHeaderAccessor.VerifyType
  fullName: Steeltoe.Integration.IntegrationMessageHeaderAccessor.VerifyType
