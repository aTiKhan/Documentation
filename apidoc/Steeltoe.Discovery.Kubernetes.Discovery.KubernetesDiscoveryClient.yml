### YamlMime:ManagedReference
items:
- uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient
  commentId: T:Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient
  id: KubernetesDiscoveryClient
  parent: Steeltoe.Discovery.Kubernetes.Discovery
  children:
  - Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.#ctor(Steeltoe.Discovery.Kubernetes.Discovery.DefaultIsServicePortSecureResolver,IKubernetes,IOptionsMonitor{Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions},ILogger{Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient})
  - Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.Description
  - Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.GetInstances(System.String)
  - Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.GetLocalServiceInstance
  - Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.GetServices(System.Collections.Generic.IDictionary{System.String,System.String})
  - Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.KubernetesClient
  - Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.Services
  - Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.ShutdownAsync
  langs:
  - csharp
  - vb
  name: KubernetesDiscoveryClient
  nameWithType: KubernetesDiscoveryClient
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient
  type: Class
  source:
    remote:
      path: src/Discovery/src/Kubernetes/Discovery/KubernetesDiscoveryClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: KubernetesDiscoveryClient
    path: ../Steeltoe/src/Discovery/src/Kubernetes/Discovery/KubernetesDiscoveryClient.cs
    startLine: 16
  assemblies:
  - Steeltoe.Discovery.Kubernetes
  namespace: Steeltoe.Discovery.Kubernetes.Discovery
  syntax:
    content: 'public class KubernetesDiscoveryClient : IDiscoveryClient'
    content.vb: >-
      Public Class KubernetesDiscoveryClient

          Inherits IDiscoveryClient
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.Description
  commentId: P:Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.Description
  id: Description
  parent: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: KubernetesDiscoveryClient.Description
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.Description
  type: Property
  source:
    remote:
      path: src/Discovery/src/Kubernetes/Discovery/KubernetesDiscoveryClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Description
    path: ../Steeltoe/src/Discovery/src/Kubernetes/Discovery/KubernetesDiscoveryClient.cs
    startLine: 23
  assemblies:
  - Steeltoe.Discovery.Kubernetes
  namespace: Steeltoe.Discovery.Kubernetes.Discovery
  syntax:
    content: public string Description { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Description As String
  overload: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.Description*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.Services
  commentId: P:Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.Services
  id: Services
  parent: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient
  langs:
  - csharp
  - vb
  name: Services
  nameWithType: KubernetesDiscoveryClient.Services
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.Services
  type: Property
  source:
    remote:
      path: src/Discovery/src/Kubernetes/Discovery/KubernetesDiscoveryClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Services
    path: ../Steeltoe/src/Discovery/src/Kubernetes/Discovery/KubernetesDiscoveryClient.cs
    startLine: 25
  assemblies:
  - Steeltoe.Discovery.Kubernetes
  namespace: Steeltoe.Discovery.Kubernetes.Discovery
  syntax:
    content: public IList<string> Services { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: Public ReadOnly Property Services As IList(Of String)
  overload: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.Services*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.KubernetesClient
  commentId: P:Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.KubernetesClient
  id: KubernetesClient
  parent: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient
  langs:
  - csharp
  - vb
  name: KubernetesClient
  nameWithType: KubernetesDiscoveryClient.KubernetesClient
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.KubernetesClient
  type: Property
  source:
    remote:
      path: src/Discovery/src/Kubernetes/Discovery/KubernetesDiscoveryClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: KubernetesClient
    path: ../Steeltoe/src/Discovery/src/Kubernetes/Discovery/KubernetesDiscoveryClient.cs
    startLine: 27
  assemblies:
  - Steeltoe.Discovery.Kubernetes
  namespace: Steeltoe.Discovery.Kubernetes.Discovery
  syntax:
    content: public IKubernetes KubernetesClient { get; set; }
    parameters: []
    return:
      type: IKubernetes
    content.vb: Public Property KubernetesClient As IKubernetes
  overload: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.KubernetesClient*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.#ctor(Steeltoe.Discovery.Kubernetes.Discovery.DefaultIsServicePortSecureResolver,IKubernetes,IOptionsMonitor{Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions},ILogger{Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient})
  commentId: M:Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.#ctor(Steeltoe.Discovery.Kubernetes.Discovery.DefaultIsServicePortSecureResolver,IKubernetes,IOptionsMonitor{Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions},ILogger{Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient})
  id: '#ctor(Steeltoe.Discovery.Kubernetes.Discovery.DefaultIsServicePortSecureResolver,IKubernetes,IOptionsMonitor{Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions},ILogger{Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient})'
  parent: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient
  langs:
  - csharp
  - vb
  name: KubernetesDiscoveryClient(DefaultIsServicePortSecureResolver, IKubernetes, IOptionsMonitor<KubernetesDiscoveryOptions>, ILogger<KubernetesDiscoveryClient>)
  nameWithType: KubernetesDiscoveryClient.KubernetesDiscoveryClient(DefaultIsServicePortSecureResolver, IKubernetes, IOptionsMonitor<KubernetesDiscoveryOptions>, ILogger<KubernetesDiscoveryClient>)
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.KubernetesDiscoveryClient(Steeltoe.Discovery.Kubernetes.Discovery.DefaultIsServicePortSecureResolver, IKubernetes, IOptionsMonitor<Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions>, ILogger<Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient>)
  type: Constructor
  source:
    remote:
      path: src/Discovery/src/Kubernetes/Discovery/KubernetesDiscoveryClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Discovery/src/Kubernetes/Discovery/KubernetesDiscoveryClient.cs
    startLine: 29
  assemblies:
  - Steeltoe.Discovery.Kubernetes
  namespace: Steeltoe.Discovery.Kubernetes.Discovery
  syntax:
    content: public KubernetesDiscoveryClient(DefaultIsServicePortSecureResolver isServicePortSecureResolver, IKubernetes kubernetesClient, IOptionsMonitor<KubernetesDiscoveryOptions> discoveryOptions, ILogger<KubernetesDiscoveryClient> logger = null)
    parameters:
    - id: isServicePortSecureResolver
      type: Steeltoe.Discovery.Kubernetes.Discovery.DefaultIsServicePortSecureResolver
    - id: kubernetesClient
      type: IKubernetes
    - id: discoveryOptions
      type: IOptionsMonitor{Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions}
    - id: logger
      type: ILogger{Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient}
    content.vb: Public Sub New(isServicePortSecureResolver As DefaultIsServicePortSecureResolver, kubernetesClient As IKubernetes, discoveryOptions As IOptionsMonitor(Of KubernetesDiscoveryOptions), logger As ILogger(Of KubernetesDiscoveryClient) = Nothing)
  overload: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.#ctor*
  nameWithType.vb: KubernetesDiscoveryClient.KubernetesDiscoveryClient(DefaultIsServicePortSecureResolver, IKubernetes, IOptionsMonitor(Of KubernetesDiscoveryOptions), ILogger(Of KubernetesDiscoveryClient))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.KubernetesDiscoveryClient(Steeltoe.Discovery.Kubernetes.Discovery.DefaultIsServicePortSecureResolver, IKubernetes, IOptionsMonitor(Of Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions), ILogger(Of Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient))
  name.vb: KubernetesDiscoveryClient(DefaultIsServicePortSecureResolver, IKubernetes, IOptionsMonitor(Of KubernetesDiscoveryOptions), ILogger(Of KubernetesDiscoveryClient))
- uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.GetServices(System.Collections.Generic.IDictionary{System.String,System.String})
  commentId: M:Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.GetServices(System.Collections.Generic.IDictionary{System.String,System.String})
  id: GetServices(System.Collections.Generic.IDictionary{System.String,System.String})
  parent: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient
  langs:
  - csharp
  - vb
  name: GetServices(IDictionary<String, String>)
  nameWithType: KubernetesDiscoveryClient.GetServices(IDictionary<String, String>)
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.GetServices(System.Collections.Generic.IDictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Kubernetes/Discovery/KubernetesDiscoveryClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetServices
    path: ../Steeltoe/src/Discovery/src/Kubernetes/Discovery/KubernetesDiscoveryClient.cs
    startLine: 41
  assemblies:
  - Steeltoe.Discovery.Kubernetes
  namespace: Steeltoe.Discovery.Kubernetes.Discovery
  syntax:
    content: public IList<string> GetServices(IDictionary<string, string> labels)
    parameters:
    - id: labels
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: Public Function GetServices(labels As IDictionary(Of String, String)) As IList(Of String)
  overload: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.GetServices*
  nameWithType.vb: KubernetesDiscoveryClient.GetServices(IDictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.GetServices(System.Collections.Generic.IDictionary(Of System.String, System.String))
  name.vb: GetServices(IDictionary(Of String, String))
- uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.GetInstances(System.String)
  commentId: M:Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.GetInstances(System.String)
  id: GetInstances(System.String)
  parent: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient
  langs:
  - csharp
  - vb
  name: GetInstances(String)
  nameWithType: KubernetesDiscoveryClient.GetInstances(String)
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.GetInstances(System.String)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Kubernetes/Discovery/KubernetesDiscoveryClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetInstances
    path: ../Steeltoe/src/Discovery/src/Kubernetes/Discovery/KubernetesDiscoveryClient.cs
    startLine: 69
  assemblies:
  - Steeltoe.Discovery.Kubernetes
  namespace: Steeltoe.Discovery.Kubernetes.Discovery
  syntax:
    content: public IList<IServiceInstance> GetInstances(string serviceId)
    parameters:
    - id: serviceId
      type: System.String
    return:
      type: System.Collections.Generic.IList{IServiceInstance}
    content.vb: Public Function GetInstances(serviceId As String) As IList(Of IServiceInstance)
  overload: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.GetInstances*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.GetLocalServiceInstance
  commentId: M:Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.GetLocalServiceInstance
  id: GetLocalServiceInstance
  parent: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient
  langs:
  - csharp
  - vb
  name: GetLocalServiceInstance()
  nameWithType: KubernetesDiscoveryClient.GetLocalServiceInstance()
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.GetLocalServiceInstance()
  type: Method
  source:
    remote:
      path: src/Discovery/src/Kubernetes/Discovery/KubernetesDiscoveryClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetLocalServiceInstance
    path: ../Steeltoe/src/Discovery/src/Kubernetes/Discovery/KubernetesDiscoveryClient.cs
    startLine: 96
  assemblies:
  - Steeltoe.Discovery.Kubernetes
  namespace: Steeltoe.Discovery.Kubernetes.Discovery
  syntax:
    content: public IServiceInstance GetLocalServiceInstance()
    return:
      type: IServiceInstance
    content.vb: Public Function GetLocalServiceInstance As IServiceInstance
  overload: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.GetLocalServiceInstance*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.ShutdownAsync
  commentId: M:Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.ShutdownAsync
  id: ShutdownAsync
  parent: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient
  langs:
  - csharp
  - vb
  name: ShutdownAsync()
  nameWithType: KubernetesDiscoveryClient.ShutdownAsync()
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.ShutdownAsync()
  type: Method
  source:
    remote:
      path: src/Discovery/src/Kubernetes/Discovery/KubernetesDiscoveryClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ShutdownAsync
    path: ../Steeltoe/src/Discovery/src/Kubernetes/Discovery/KubernetesDiscoveryClient.cs
    startLine: 111
  assemblies:
  - Steeltoe.Discovery.Kubernetes
  namespace: Steeltoe.Discovery.Kubernetes.Discovery
  syntax:
    content: public Task ShutdownAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ShutdownAsync As Task
  overload: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.ShutdownAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Discovery.Kubernetes.Discovery
  commentId: N:Steeltoe.Discovery.Kubernetes.Discovery
  name: Steeltoe.Discovery.Kubernetes.Discovery
  nameWithType: Steeltoe.Discovery.Kubernetes.Discovery
  fullName: Steeltoe.Discovery.Kubernetes.Discovery
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.Description*
  commentId: Overload:Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.Description
  name: Description
  nameWithType: KubernetesDiscoveryClient.Description
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.Description
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.Services*
  commentId: Overload:Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.Services
  name: Services
  nameWithType: KubernetesDiscoveryClient.Services
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.Services
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.KubernetesClient*
  commentId: Overload:Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.KubernetesClient
  name: KubernetesClient
  nameWithType: KubernetesDiscoveryClient.KubernetesClient
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.KubernetesClient
- uid: IKubernetes
  isExternal: true
  name: IKubernetes
  nameWithType: IKubernetes
  fullName: IKubernetes
- uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.#ctor*
  commentId: Overload:Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.#ctor
  name: KubernetesDiscoveryClient
  nameWithType: KubernetesDiscoveryClient.KubernetesDiscoveryClient
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.KubernetesDiscoveryClient
- uid: Steeltoe.Discovery.Kubernetes.Discovery.DefaultIsServicePortSecureResolver
  commentId: T:Steeltoe.Discovery.Kubernetes.Discovery.DefaultIsServicePortSecureResolver
  parent: Steeltoe.Discovery.Kubernetes.Discovery
  name: DefaultIsServicePortSecureResolver
  nameWithType: DefaultIsServicePortSecureResolver
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.DefaultIsServicePortSecureResolver
- uid: IOptionsMonitor{Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions}
  commentId: '!:IOptionsMonitor{Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions}'
  definition: IOptionsMonitor`1
  name: IOptionsMonitor<KubernetesDiscoveryOptions>
  nameWithType: IOptionsMonitor<KubernetesDiscoveryOptions>
  fullName: IOptionsMonitor<Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions>
  nameWithType.vb: IOptionsMonitor(Of KubernetesDiscoveryOptions)
  fullName.vb: IOptionsMonitor(Of Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions)
  name.vb: IOptionsMonitor(Of KubernetesDiscoveryOptions)
  spec.csharp:
  - uid: IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: IOptionsMonitor
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions
    name: KubernetesDiscoveryOptions
    nameWithType: KubernetesDiscoveryOptions
    fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: IOptionsMonitor
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions
    name: KubernetesDiscoveryOptions
    nameWithType: KubernetesDiscoveryOptions
    fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: ILogger{Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient}
  commentId: '!:ILogger{Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient}'
  definition: ILogger`1
  name: ILogger<KubernetesDiscoveryClient>
  nameWithType: ILogger<KubernetesDiscoveryClient>
  fullName: ILogger<Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient>
  nameWithType.vb: ILogger(Of KubernetesDiscoveryClient)
  fullName.vb: ILogger(Of Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient)
  name.vb: ILogger(Of KubernetesDiscoveryClient)
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient
    name: KubernetesDiscoveryClient
    nameWithType: KubernetesDiscoveryClient
    fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient
    name: KubernetesDiscoveryClient
    nameWithType: KubernetesDiscoveryClient
    fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient
  - name: )
    nameWithType: )
    fullName: )
- uid: IOptionsMonitor`1
  isExternal: true
  name: IOptionsMonitor<>
  nameWithType: IOptionsMonitor<>
  fullName: IOptionsMonitor<>
  nameWithType.vb: IOptionsMonitor(Of )
  fullName.vb: IOptionsMonitor(Of )
  name.vb: IOptionsMonitor(Of )
  spec.csharp:
  - uid: IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: IOptionsMonitor
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: IOptionsMonitor
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: ILogger`1
  isExternal: true
  name: ILogger<>
  nameWithType: ILogger<>
  fullName: ILogger<>
  nameWithType.vb: ILogger(Of )
  fullName.vb: ILogger(Of )
  name.vb: ILogger(Of )
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.GetServices*
  commentId: Overload:Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.GetServices
  name: GetServices
  nameWithType: KubernetesDiscoveryClient.GetServices
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.GetServices
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.GetInstances*
  commentId: Overload:Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.GetInstances
  name: GetInstances
  nameWithType: KubernetesDiscoveryClient.GetInstances
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.GetInstances
- uid: System.Collections.Generic.IList{IServiceInstance}
  commentId: T:System.Collections.Generic.IList{IServiceInstance}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IServiceInstance>
  nameWithType: IList<IServiceInstance>
  fullName: System.Collections.Generic.IList<IServiceInstance>
  nameWithType.vb: IList(Of IServiceInstance)
  fullName.vb: System.Collections.Generic.IList(Of IServiceInstance)
  name.vb: IList(Of IServiceInstance)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IServiceInstance
    name: IServiceInstance
    nameWithType: IServiceInstance
    fullName: IServiceInstance
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IServiceInstance
    name: IServiceInstance
    nameWithType: IServiceInstance
    fullName: IServiceInstance
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.GetLocalServiceInstance*
  commentId: Overload:Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.GetLocalServiceInstance
  name: GetLocalServiceInstance
  nameWithType: KubernetesDiscoveryClient.GetLocalServiceInstance
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.GetLocalServiceInstance
- uid: IServiceInstance
  isExternal: true
  name: IServiceInstance
  nameWithType: IServiceInstance
  fullName: IServiceInstance
- uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.ShutdownAsync*
  commentId: Overload:Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.ShutdownAsync
  name: ShutdownAsync
  nameWithType: KubernetesDiscoveryClient.ShutdownAsync
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryClient.ShutdownAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
