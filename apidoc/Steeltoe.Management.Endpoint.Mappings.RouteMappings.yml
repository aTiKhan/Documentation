### YamlMime:ManagedReference
items:
- uid: Steeltoe.Management.Endpoint.Mappings.RouteMappings
  commentId: T:Steeltoe.Management.Endpoint.Mappings.RouteMappings
  id: RouteMappings
  parent: Steeltoe.Management.Endpoint.Mappings
  children:
  - Steeltoe.Management.Endpoint.Mappings.RouteMappings.#ctor
  - Steeltoe.Management.Endpoint.Mappings.RouteMappings.Routers
  langs:
  - csharp
  - vb
  name: RouteMappings
  nameWithType: RouteMappings
  fullName: Steeltoe.Management.Endpoint.Mappings.RouteMappings
  type: Class
  source:
    remote:
      path: src/Management/src/EndpointCore/Mappings/RouteMappings.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RouteMappings
    path: ../Steeltoe/src/Management/src/EndpointCore/Mappings/RouteMappings.cs
    startLine: 9
  assemblies:
  - Steeltoe.Management.EndpointCore
  namespace: Steeltoe.Management.Endpoint.Mappings
  syntax:
    content: 'public class RouteMappings : IRouteMappings'
    content.vb: >-
      Public Class RouteMappings

          Implements IRouteMappings
  inheritance:
  - System.Object
  implements:
  - Steeltoe.Management.Endpoint.Mappings.IRouteMappings
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Management.Endpoint.Mappings.RouteMappings.#ctor
  commentId: M:Steeltoe.Management.Endpoint.Mappings.RouteMappings.#ctor
  id: '#ctor'
  parent: Steeltoe.Management.Endpoint.Mappings.RouteMappings
  langs:
  - csharp
  - vb
  name: RouteMappings()
  nameWithType: RouteMappings.RouteMappings()
  fullName: Steeltoe.Management.Endpoint.Mappings.RouteMappings.RouteMappings()
  type: Constructor
  source:
    remote:
      path: src/Management/src/EndpointCore/Mappings/RouteMappings.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Management/src/EndpointCore/Mappings/RouteMappings.cs
    startLine: 11
  assemblies:
  - Steeltoe.Management.EndpointCore
  namespace: Steeltoe.Management.Endpoint.Mappings
  syntax:
    content: public RouteMappings()
    content.vb: Public Sub New
  overload: Steeltoe.Management.Endpoint.Mappings.RouteMappings.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Management.Endpoint.Mappings.RouteMappings.Routers
  commentId: P:Steeltoe.Management.Endpoint.Mappings.RouteMappings.Routers
  id: Routers
  parent: Steeltoe.Management.Endpoint.Mappings.RouteMappings
  langs:
  - csharp
  - vb
  name: Routers
  nameWithType: RouteMappings.Routers
  fullName: Steeltoe.Management.Endpoint.Mappings.RouteMappings.Routers
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointCore/Mappings/RouteMappings.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Routers
    path: ../Steeltoe/src/Management/src/EndpointCore/Mappings/RouteMappings.cs
    startLine: 16
  assemblies:
  - Steeltoe.Management.EndpointCore
  namespace: Steeltoe.Management.Endpoint.Mappings
  syntax:
    content: public IList<IRouter> Routers { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Routing.IRouter}
    content.vb: Public ReadOnly Property Routers As IList(Of IRouter)
  overload: Steeltoe.Management.Endpoint.Mappings.RouteMappings.Routers*
  implements:
  - Steeltoe.Management.Endpoint.Mappings.IRouteMappings.Routers
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Steeltoe.Management.Endpoint.Mappings
  commentId: N:Steeltoe.Management.Endpoint.Mappings
  name: Steeltoe.Management.Endpoint.Mappings
  nameWithType: Steeltoe.Management.Endpoint.Mappings
  fullName: Steeltoe.Management.Endpoint.Mappings
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Management.Endpoint.Mappings.IRouteMappings
  commentId: T:Steeltoe.Management.Endpoint.Mappings.IRouteMappings
  parent: Steeltoe.Management.Endpoint.Mappings
  name: IRouteMappings
  nameWithType: IRouteMappings
  fullName: Steeltoe.Management.Endpoint.Mappings.IRouteMappings
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Management.Endpoint.Mappings.RouteMappings.#ctor*
  commentId: Overload:Steeltoe.Management.Endpoint.Mappings.RouteMappings.#ctor
  name: RouteMappings
  nameWithType: RouteMappings.RouteMappings
  fullName: Steeltoe.Management.Endpoint.Mappings.RouteMappings.RouteMappings
- uid: Steeltoe.Management.Endpoint.Mappings.RouteMappings.Routers*
  commentId: Overload:Steeltoe.Management.Endpoint.Mappings.RouteMappings.Routers
  name: Routers
  nameWithType: RouteMappings.Routers
  fullName: Steeltoe.Management.Endpoint.Mappings.RouteMappings.Routers
- uid: Steeltoe.Management.Endpoint.Mappings.IRouteMappings.Routers
  commentId: P:Steeltoe.Management.Endpoint.Mappings.IRouteMappings.Routers
  parent: Steeltoe.Management.Endpoint.Mappings.IRouteMappings
  name: Routers
  nameWithType: IRouteMappings.Routers
  fullName: Steeltoe.Management.Endpoint.Mappings.IRouteMappings.Routers
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Routing.IRouter}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Routing.IRouter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IRouter>
  nameWithType: IList<IRouter>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Routing.IRouter>
  nameWithType.vb: IList(Of IRouter)
  fullName.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Routing.IRouter)
  name.vb: IList(Of IRouter)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Routing.IRouter
    name: IRouter
    nameWithType: IRouter
    fullName: Microsoft.AspNetCore.Routing.IRouter
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Routing.IRouter
    name: IRouter
    nameWithType: IRouter
    fullName: Microsoft.AspNetCore.Routing.IRouter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
