### YamlMime:ManagedReference
items:
- uid: Steeltoe.Integration.Support.MutableMessage`1
  commentId: T:Steeltoe.Integration.Support.MutableMessage`1
  id: MutableMessage`1
  parent: Steeltoe.Integration.Support
  children:
  - Steeltoe.Integration.Support.MutableMessage`1.#ctor(`0)
  - Steeltoe.Integration.Support.MutableMessage`1.#ctor(`0,Steeltoe.Integration.Support.MutableMessageHeaders)
  - Steeltoe.Integration.Support.MutableMessage`1.#ctor(`0,System.Collections.Generic.IDictionary{System.String,System.Object})
  - Steeltoe.Integration.Support.MutableMessage`1.Equals(System.Object)
  - Steeltoe.Integration.Support.MutableMessage`1.GetHashCode
  - Steeltoe.Integration.Support.MutableMessage`1.Payload
  langs:
  - csharp
  - vb
  name: MutableMessage<T>
  nameWithType: MutableMessage<T>
  fullName: Steeltoe.Integration.Support.MutableMessage<T>
  type: Class
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/MutableMessage.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MutableMessage
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/MutableMessage.cs
    startLine: 101
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: 'public class MutableMessage<T> : MutableMessage, IMessage<T>, IMessage'
    typeParameters:
    - id: T
    content.vb: >-
      Public Class MutableMessage(Of T)

          Inherits MutableMessage

          Implements IMessage(Of T), IMessage
  inheritance:
  - System.Object
  - Steeltoe.Integration.Support.MutableMessage
  implements:
  - Steeltoe.Messaging.IMessage{{T}}
  - Steeltoe.Messaging.IMessage
  inheritedMembers:
  - Steeltoe.Integration.Support.MutableMessage._payload
  - Steeltoe.Integration.Support.MutableMessage._headers
  - Steeltoe.Integration.Support.MutableMessage.Headers
  - Steeltoe.Integration.Support.MutableMessage.ToString
  - Steeltoe.Integration.Support.MutableMessage.RawHeaders
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType.vb: MutableMessage(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Steeltoe.Integration.Support.MutableMessage(Of T)
  name.vb: MutableMessage(Of T)
- uid: Steeltoe.Integration.Support.MutableMessage`1.#ctor(`0)
  commentId: M:Steeltoe.Integration.Support.MutableMessage`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: Steeltoe.Integration.Support.MutableMessage`1
  langs:
  - csharp
  - vb
  name: MutableMessage(T)
  nameWithType: MutableMessage<T>.MutableMessage(T)
  fullName: Steeltoe.Integration.Support.MutableMessage<T>.MutableMessage(T)
  type: Constructor
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/MutableMessage.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/MutableMessage.cs
    startLine: 104
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public MutableMessage(T payload)
    parameters:
    - id: payload
      type: '{T}'
    content.vb: Public Sub New(payload As T)
  overload: Steeltoe.Integration.Support.MutableMessage`1.#ctor*
  nameWithType.vb: MutableMessage(Of T).MutableMessage(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Integration.Support.MutableMessage(Of T).MutableMessage(T)
- uid: Steeltoe.Integration.Support.MutableMessage`1.#ctor(`0,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Integration.Support.MutableMessage`1.#ctor(`0,System.Collections.Generic.IDictionary{System.String,System.Object})
  id: '#ctor(`0,System.Collections.Generic.IDictionary{System.String,System.Object})'
  parent: Steeltoe.Integration.Support.MutableMessage`1
  langs:
  - csharp
  - vb
  name: MutableMessage(T, IDictionary<String, Object>)
  nameWithType: MutableMessage<T>.MutableMessage(T, IDictionary<String, Object>)
  fullName: Steeltoe.Integration.Support.MutableMessage<T>.MutableMessage(T, System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Constructor
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/MutableMessage.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/MutableMessage.cs
    startLine: 109
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public MutableMessage(T payload, IDictionary<string, object> headers)
    parameters:
    - id: payload
      type: '{T}'
    - id: headers
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: Public Sub New(payload As T, headers As IDictionary(Of String, Object))
  overload: Steeltoe.Integration.Support.MutableMessage`1.#ctor*
  nameWithType.vb: MutableMessage(Of T).MutableMessage(T, IDictionary(Of String, Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Integration.Support.MutableMessage(Of T).MutableMessage(T, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: MutableMessage(T, IDictionary(Of String, Object))
- uid: Steeltoe.Integration.Support.MutableMessage`1.#ctor(`0,Steeltoe.Integration.Support.MutableMessageHeaders)
  commentId: M:Steeltoe.Integration.Support.MutableMessage`1.#ctor(`0,Steeltoe.Integration.Support.MutableMessageHeaders)
  id: '#ctor(`0,Steeltoe.Integration.Support.MutableMessageHeaders)'
  parent: Steeltoe.Integration.Support.MutableMessage`1
  langs:
  - csharp
  - vb
  name: MutableMessage(T, MutableMessageHeaders)
  nameWithType: MutableMessage<T>.MutableMessage(T, MutableMessageHeaders)
  fullName: Steeltoe.Integration.Support.MutableMessage<T>.MutableMessage(T, Steeltoe.Integration.Support.MutableMessageHeaders)
  type: Constructor
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/MutableMessage.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/MutableMessage.cs
    startLine: 114
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public MutableMessage(T payload, MutableMessageHeaders headers)
    parameters:
    - id: payload
      type: '{T}'
    - id: headers
      type: Steeltoe.Integration.Support.MutableMessageHeaders
    content.vb: Public Sub New(payload As T, headers As MutableMessageHeaders)
  overload: Steeltoe.Integration.Support.MutableMessage`1.#ctor*
  nameWithType.vb: MutableMessage(Of T).MutableMessage(T, MutableMessageHeaders)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Integration.Support.MutableMessage(Of T).MutableMessage(T, Steeltoe.Integration.Support.MutableMessageHeaders)
- uid: Steeltoe.Integration.Support.MutableMessage`1.Payload
  commentId: P:Steeltoe.Integration.Support.MutableMessage`1.Payload
  id: Payload
  parent: Steeltoe.Integration.Support.MutableMessage`1
  langs:
  - csharp
  - vb
  name: Payload
  nameWithType: MutableMessage<T>.Payload
  fullName: Steeltoe.Integration.Support.MutableMessage<T>.Payload
  type: Property
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/MutableMessage.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Payload
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/MutableMessage.cs
    startLine: 119
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public T Payload { get; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public ReadOnly Property Payload As T
  overload: Steeltoe.Integration.Support.MutableMessage`1.Payload*
  implements:
  - Steeltoe.Messaging.IMessage{{T}}.Payload
  nameWithType.vb: MutableMessage(Of T).Payload
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.Integration.Support.MutableMessage(Of T).Payload
- uid: Steeltoe.Integration.Support.MutableMessage`1.GetHashCode
  commentId: M:Steeltoe.Integration.Support.MutableMessage`1.GetHashCode
  id: GetHashCode
  parent: Steeltoe.Integration.Support.MutableMessage`1
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: MutableMessage<T>.GetHashCode()
  fullName: Steeltoe.Integration.Support.MutableMessage<T>.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/MutableMessage.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetHashCode
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/MutableMessage.cs
    startLine: 124
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: Steeltoe.Integration.Support.MutableMessage.GetHashCode
  overload: Steeltoe.Integration.Support.MutableMessage`1.GetHashCode*
  nameWithType.vb: MutableMessage(Of T).GetHashCode()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Steeltoe.Integration.Support.MutableMessage(Of T).GetHashCode()
- uid: Steeltoe.Integration.Support.MutableMessage`1.Equals(System.Object)
  commentId: M:Steeltoe.Integration.Support.MutableMessage`1.Equals(System.Object)
  id: Equals(System.Object)
  parent: Steeltoe.Integration.Support.MutableMessage`1
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: MutableMessage<T>.Equals(Object)
  fullName: Steeltoe.Integration.Support.MutableMessage<T>.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/MutableMessage.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Equals
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/MutableMessage.cs
    startLine: 129
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: Steeltoe.Integration.Support.MutableMessage.Equals(System.Object)
  overload: Steeltoe.Integration.Support.MutableMessage`1.Equals*
  nameWithType.vb: MutableMessage(Of T).Equals(Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Steeltoe.Integration.Support.MutableMessage(Of T).Equals(System.Object)
references:
- uid: Steeltoe.Integration.Support
  commentId: N:Steeltoe.Integration.Support
  name: Steeltoe.Integration.Support
  nameWithType: Steeltoe.Integration.Support
  fullName: Steeltoe.Integration.Support
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Integration.Support.MutableMessage
  commentId: T:Steeltoe.Integration.Support.MutableMessage
  parent: Steeltoe.Integration.Support
  name: MutableMessage
  nameWithType: MutableMessage
  fullName: Steeltoe.Integration.Support.MutableMessage
- uid: Steeltoe.Messaging.IMessage{{T}}
  commentId: T:Steeltoe.Messaging.IMessage{``0}
  parent: Steeltoe.Messaging
  definition: Steeltoe.Messaging.IMessage`1
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Steeltoe.Messaging.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Steeltoe.Messaging.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Steeltoe.Messaging.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessage
  commentId: T:Steeltoe.Messaging.IMessage
  parent: Steeltoe.Messaging
  name: IMessage
  nameWithType: IMessage
  fullName: Steeltoe.Messaging.IMessage
- uid: Steeltoe.Integration.Support.MutableMessage._payload
  commentId: F:Steeltoe.Integration.Support.MutableMessage._payload
  parent: Steeltoe.Integration.Support.MutableMessage
  name: _payload
  nameWithType: MutableMessage._payload
  fullName: Steeltoe.Integration.Support.MutableMessage._payload
- uid: Steeltoe.Integration.Support.MutableMessage._headers
  commentId: F:Steeltoe.Integration.Support.MutableMessage._headers
  parent: Steeltoe.Integration.Support.MutableMessage
  name: _headers
  nameWithType: MutableMessage._headers
  fullName: Steeltoe.Integration.Support.MutableMessage._headers
- uid: Steeltoe.Integration.Support.MutableMessage.Headers
  commentId: P:Steeltoe.Integration.Support.MutableMessage.Headers
  parent: Steeltoe.Integration.Support.MutableMessage
  name: Headers
  nameWithType: MutableMessage.Headers
  fullName: Steeltoe.Integration.Support.MutableMessage.Headers
- uid: Steeltoe.Integration.Support.MutableMessage.ToString
  commentId: M:Steeltoe.Integration.Support.MutableMessage.ToString
  parent: Steeltoe.Integration.Support.MutableMessage
  name: ToString()
  nameWithType: MutableMessage.ToString()
  fullName: Steeltoe.Integration.Support.MutableMessage.ToString()
  spec.csharp:
  - uid: Steeltoe.Integration.Support.MutableMessage.ToString
    name: ToString
    nameWithType: MutableMessage.ToString
    fullName: Steeltoe.Integration.Support.MutableMessage.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.MutableMessage.ToString
    name: ToString
    nameWithType: MutableMessage.ToString
    fullName: Steeltoe.Integration.Support.MutableMessage.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.MutableMessage.RawHeaders
  commentId: P:Steeltoe.Integration.Support.MutableMessage.RawHeaders
  parent: Steeltoe.Integration.Support.MutableMessage
  name: RawHeaders
  nameWithType: MutableMessage.RawHeaders
  fullName: Steeltoe.Integration.Support.MutableMessage.RawHeaders
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.IMessage`1
  commentId: T:Steeltoe.Messaging.IMessage`1
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Steeltoe.Messaging.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Steeltoe.Messaging.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Steeltoe.Messaging.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: Steeltoe.Integration.Support.MutableMessage`1.#ctor*
  commentId: Overload:Steeltoe.Integration.Support.MutableMessage`1.#ctor
  name: MutableMessage
  nameWithType: MutableMessage<T>.MutableMessage
  fullName: Steeltoe.Integration.Support.MutableMessage<T>.MutableMessage
  nameWithType.vb: MutableMessage(Of T).MutableMessage
  fullName.vb: Steeltoe.Integration.Support.MutableMessage(Of T).MutableMessage
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Integration.Support.MutableMessageHeaders
  commentId: T:Steeltoe.Integration.Support.MutableMessageHeaders
  parent: Steeltoe.Integration.Support
  name: MutableMessageHeaders
  nameWithType: MutableMessageHeaders
  fullName: Steeltoe.Integration.Support.MutableMessageHeaders
- uid: Steeltoe.Integration.Support.MutableMessage`1.Payload*
  commentId: Overload:Steeltoe.Integration.Support.MutableMessage`1.Payload
  name: Payload
  nameWithType: MutableMessage<T>.Payload
  fullName: Steeltoe.Integration.Support.MutableMessage<T>.Payload
  nameWithType.vb: MutableMessage(Of T).Payload
  fullName.vb: Steeltoe.Integration.Support.MutableMessage(Of T).Payload
- uid: Steeltoe.Messaging.IMessage{{T}}.Payload
  commentId: P:Steeltoe.Messaging.IMessage{`0}.Payload
  parent: Steeltoe.Messaging.IMessage{{T}}
  definition: Steeltoe.Messaging.IMessage`1.Payload
  name: Payload
  nameWithType: IMessage<T>.Payload
  fullName: Steeltoe.Messaging.IMessage<T>.Payload
  nameWithType.vb: IMessage(Of T).Payload
  fullName.vb: Steeltoe.Messaging.IMessage(Of T).Payload
- uid: Steeltoe.Messaging.IMessage`1.Payload
  commentId: P:Steeltoe.Messaging.IMessage`1.Payload
  name: Payload
  nameWithType: IMessage<T>.Payload
  fullName: Steeltoe.Messaging.IMessage<T>.Payload
  nameWithType.vb: IMessage(Of T).Payload
  fullName.vb: Steeltoe.Messaging.IMessage(Of T).Payload
- uid: Steeltoe.Integration.Support.MutableMessage.GetHashCode
  commentId: M:Steeltoe.Integration.Support.MutableMessage.GetHashCode
  parent: Steeltoe.Integration.Support.MutableMessage
  name: GetHashCode()
  nameWithType: MutableMessage.GetHashCode()
  fullName: Steeltoe.Integration.Support.MutableMessage.GetHashCode()
  spec.csharp:
  - uid: Steeltoe.Integration.Support.MutableMessage.GetHashCode
    name: GetHashCode
    nameWithType: MutableMessage.GetHashCode
    fullName: Steeltoe.Integration.Support.MutableMessage.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.MutableMessage.GetHashCode
    name: GetHashCode
    nameWithType: MutableMessage.GetHashCode
    fullName: Steeltoe.Integration.Support.MutableMessage.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.MutableMessage`1.GetHashCode*
  commentId: Overload:Steeltoe.Integration.Support.MutableMessage`1.GetHashCode
  name: GetHashCode
  nameWithType: MutableMessage<T>.GetHashCode
  fullName: Steeltoe.Integration.Support.MutableMessage<T>.GetHashCode
  nameWithType.vb: MutableMessage(Of T).GetHashCode
  fullName.vb: Steeltoe.Integration.Support.MutableMessage(Of T).GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Steeltoe.Integration.Support.MutableMessage.Equals(System.Object)
  commentId: M:Steeltoe.Integration.Support.MutableMessage.Equals(System.Object)
  parent: Steeltoe.Integration.Support.MutableMessage
  isExternal: true
  name: Equals(Object)
  nameWithType: MutableMessage.Equals(Object)
  fullName: Steeltoe.Integration.Support.MutableMessage.Equals(System.Object)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.MutableMessage.Equals(System.Object)
    name: Equals
    nameWithType: MutableMessage.Equals
    fullName: Steeltoe.Integration.Support.MutableMessage.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.MutableMessage.Equals(System.Object)
    name: Equals
    nameWithType: MutableMessage.Equals
    fullName: Steeltoe.Integration.Support.MutableMessage.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.MutableMessage`1.Equals*
  commentId: Overload:Steeltoe.Integration.Support.MutableMessage`1.Equals
  name: Equals
  nameWithType: MutableMessage<T>.Equals
  fullName: Steeltoe.Integration.Support.MutableMessage<T>.Equals
  nameWithType.vb: MutableMessage(Of T).Equals
  fullName.vb: Steeltoe.Integration.Support.MutableMessage(Of T).Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
