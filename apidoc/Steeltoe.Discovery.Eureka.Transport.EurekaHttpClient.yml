### YamlMime:ManagedReference
items:
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient
  commentId: T:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient
  id: EurekaHttpClient
  parent: Steeltoe.Discovery.Eureka.Transport
  children:
  - Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.#ctor
  - Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.#ctor(IOptionsMonitor{Steeltoe.Discovery.Eureka.EurekaClientOptions},IHttpClientHandlerProvider,ILoggerFactory)
  - Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.#ctor(Steeltoe.Discovery.Eureka.IEurekaClientConfig,ILoggerFactory,IHttpClientHandlerProvider)
  - Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.#ctor(Steeltoe.Discovery.Eureka.IEurekaClientConfig,System.Collections.Generic.IDictionary{System.String,System.String},ILoggerFactory,IHttpClientHandlerProvider)
  - Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.#ctor(Steeltoe.Discovery.Eureka.IEurekaClientConfig,System.Net.Http.HttpClient,ILoggerFactory)
  - Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient._config
  - Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient._failingServiceUrls
  - Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient._handlerProvider
  - Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient._headers
  - Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient._httpClient
  - Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient._lock
  - Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient._logger
  - Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient._serviceUrl
  - Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.CancelAsync(System.String,System.String)
  - Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.Config
  - Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.DeleteStatusOverrideAsync(System.String,System.String,Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo)
  - Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.DoGetApplicationsAsync(System.String,System.Collections.Generic.ISet{System.String})
  - Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.DoGetInstanceAsync(System.String)
  - Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetApplicationAsync(System.String)
  - Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetApplicationsAsync(System.Collections.Generic.ISet{System.String})
  - Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetDeltaAsync(System.Collections.Generic.ISet{System.String})
  - Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetHttpClient(Steeltoe.Discovery.Eureka.IEurekaClientConfig)
  - Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetInstanceAsync(System.String)
  - Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetInstanceAsync(System.String,System.String)
  - Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetRequestContent(System.Object)
  - Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetRequestMessage(System.Net.Http.HttpMethod,System.Uri)
  - Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetRequestUri(System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  - Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetSecureVipAsync(System.String,System.Collections.Generic.ISet{System.String})
  - Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetVipAsync(System.String,System.Collections.Generic.ISet{System.String})
  - Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.Initialize(System.Collections.Generic.IDictionary{System.String,System.String},ILoggerFactory)
  - Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.MakeServiceUrl(System.String)
  - Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.MakeServiceUrls(System.String)
  - Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.RegisterAsync(Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo)
  - Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.SendHeartBeatAsync(System.String,System.String,Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo,Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus)
  - Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.Shutdown
  - Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.StatusUpdateAsync(System.String,System.String,Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus,Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo)
  langs:
  - csharp
  - vb
  name: EurekaHttpClient
  nameWithType: EurekaHttpClient
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient
  type: Class
  source:
    remote:
      path: src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: EurekaHttpClient
    path: ../Steeltoe/src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
    startLine: 24
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.Transport
  syntax:
    content: 'public class EurekaHttpClient : IEurekaHttpClient'
    content.vb: >-
      Public Class EurekaHttpClient

          Implements IEurekaHttpClient
  inheritance:
  - System.Object
  implements:
  - Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient._serviceUrl
  commentId: F:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient._serviceUrl
  id: _serviceUrl
  parent: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient
  langs:
  - csharp
  - vb
  name: _serviceUrl
  nameWithType: EurekaHttpClient._serviceUrl
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient._serviceUrl
  type: Field
  source:
    remote:
      path: src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _serviceUrl
    path: ../Steeltoe/src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
    startLine: 26
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.Transport
  syntax:
    content: protected string _serviceUrl
    return:
      type: System.String
    content.vb: Protected _serviceUrl As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient._lock
  commentId: F:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient._lock
  id: _lock
  parent: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient
  langs:
  - csharp
  - vb
  name: _lock
  nameWithType: EurekaHttpClient._lock
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient._lock
  type: Field
  source:
    remote:
      path: src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _lock
    path: ../Steeltoe/src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
    startLine: 28
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.Transport
  syntax:
    content: protected object _lock
    return:
      type: System.Object
    content.vb: Protected _lock As Object
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient._failingServiceUrls
  commentId: F:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient._failingServiceUrls
  id: _failingServiceUrls
  parent: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient
  langs:
  - csharp
  - vb
  name: _failingServiceUrls
  nameWithType: EurekaHttpClient._failingServiceUrls
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient._failingServiceUrls
  type: Field
  source:
    remote:
      path: src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _failingServiceUrls
    path: ../Steeltoe/src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
    startLine: 29
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.Transport
  syntax:
    content: protected IList<string> _failingServiceUrls
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: Protected _failingServiceUrls As IList(Of String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient._headers
  commentId: F:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient._headers
  id: _headers
  parent: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient
  langs:
  - csharp
  - vb
  name: _headers
  nameWithType: EurekaHttpClient._headers
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient._headers
  type: Field
  source:
    remote:
      path: src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _headers
    path: ../Steeltoe/src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
    startLine: 31
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.Transport
  syntax:
    content: protected IDictionary<string, string> _headers
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    content.vb: Protected _headers As IDictionary(Of String, String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient._config
  commentId: F:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient._config
  id: _config
  parent: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient
  langs:
  - csharp
  - vb
  name: _config
  nameWithType: EurekaHttpClient._config
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient._config
  type: Field
  source:
    remote:
      path: src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _config
    path: ../Steeltoe/src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
    startLine: 33
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.Transport
  syntax:
    content: protected IEurekaClientConfig _config
    return:
      type: Steeltoe.Discovery.Eureka.IEurekaClientConfig
    content.vb: Protected _config As IEurekaClientConfig
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient._handlerProvider
  commentId: F:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient._handlerProvider
  id: _handlerProvider
  parent: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient
  langs:
  - csharp
  - vb
  name: _handlerProvider
  nameWithType: EurekaHttpClient._handlerProvider
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient._handlerProvider
  type: Field
  source:
    remote:
      path: src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _handlerProvider
    path: ../Steeltoe/src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
    startLine: 34
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.Transport
  syntax:
    content: protected IHttpClientHandlerProvider _handlerProvider
    return:
      type: IHttpClientHandlerProvider
    content.vb: Protected _handlerProvider As IHttpClientHandlerProvider
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.Config
  commentId: P:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.Config
  id: Config
  parent: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient
  langs:
  - csharp
  - vb
  name: Config
  nameWithType: EurekaHttpClient.Config
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.Config
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Config
    path: ../Steeltoe/src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
    startLine: 39
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.Transport
  syntax:
    content: protected virtual IEurekaClientConfig Config { get; }
    parameters: []
    return:
      type: Steeltoe.Discovery.Eureka.IEurekaClientConfig
    content.vb: Protected Overridable ReadOnly Property Config As IEurekaClientConfig
  overload: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.Config*
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient._httpClient
  commentId: F:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient._httpClient
  id: _httpClient
  parent: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient
  langs:
  - csharp
  - vb
  name: _httpClient
  nameWithType: EurekaHttpClient._httpClient
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient._httpClient
  type: Field
  source:
    remote:
      path: src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _httpClient
    path: ../Steeltoe/src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
    startLine: 41
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.Transport
  syntax:
    content: protected HttpClient _httpClient
    return:
      type: System.Net.Http.HttpClient
    content.vb: Protected _httpClient As HttpClient
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient._logger
  commentId: F:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient._logger
  id: _logger
  parent: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient
  langs:
  - csharp
  - vb
  name: _logger
  nameWithType: EurekaHttpClient._logger
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient._logger
  type: Field
  source:
    remote:
      path: src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _logger
    path: ../Steeltoe/src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
    startLine: 42
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.Transport
  syntax:
    content: protected ILogger _logger
    return:
      type: ILogger
    content.vb: Protected _logger As ILogger
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.#ctor(IOptionsMonitor{Steeltoe.Discovery.Eureka.EurekaClientOptions},IHttpClientHandlerProvider,ILoggerFactory)
  commentId: M:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.#ctor(IOptionsMonitor{Steeltoe.Discovery.Eureka.EurekaClientOptions},IHttpClientHandlerProvider,ILoggerFactory)
  id: '#ctor(IOptionsMonitor{Steeltoe.Discovery.Eureka.EurekaClientOptions},IHttpClientHandlerProvider,ILoggerFactory)'
  parent: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient
  langs:
  - csharp
  - vb
  name: EurekaHttpClient(IOptionsMonitor<EurekaClientOptions>, IHttpClientHandlerProvider, ILoggerFactory)
  nameWithType: EurekaHttpClient.EurekaHttpClient(IOptionsMonitor<EurekaClientOptions>, IHttpClientHandlerProvider, ILoggerFactory)
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.EurekaHttpClient(IOptionsMonitor<Steeltoe.Discovery.Eureka.EurekaClientOptions>, IHttpClientHandlerProvider, ILoggerFactory)
  type: Constructor
  source:
    remote:
      path: src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
    startLine: 49
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.Transport
  syntax:
    content: public EurekaHttpClient(IOptionsMonitor<EurekaClientOptions> config, IHttpClientHandlerProvider handlerProvider = null, ILoggerFactory logFactory = null)
    parameters:
    - id: config
      type: IOptionsMonitor{Steeltoe.Discovery.Eureka.EurekaClientOptions}
    - id: handlerProvider
      type: IHttpClientHandlerProvider
    - id: logFactory
      type: ILoggerFactory
    content.vb: Public Sub New(config As IOptionsMonitor(Of EurekaClientOptions), handlerProvider As IHttpClientHandlerProvider = Nothing, logFactory As ILoggerFactory = Nothing)
  overload: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.#ctor*
  nameWithType.vb: EurekaHttpClient.EurekaHttpClient(IOptionsMonitor(Of EurekaClientOptions), IHttpClientHandlerProvider, ILoggerFactory)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.EurekaHttpClient(IOptionsMonitor(Of Steeltoe.Discovery.Eureka.EurekaClientOptions), IHttpClientHandlerProvider, ILoggerFactory)
  name.vb: EurekaHttpClient(IOptionsMonitor(Of EurekaClientOptions), IHttpClientHandlerProvider, ILoggerFactory)
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.#ctor(Steeltoe.Discovery.Eureka.IEurekaClientConfig,System.Net.Http.HttpClient,ILoggerFactory)
  commentId: M:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.#ctor(Steeltoe.Discovery.Eureka.IEurekaClientConfig,System.Net.Http.HttpClient,ILoggerFactory)
  id: '#ctor(Steeltoe.Discovery.Eureka.IEurekaClientConfig,System.Net.Http.HttpClient,ILoggerFactory)'
  parent: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient
  langs:
  - csharp
  - vb
  name: EurekaHttpClient(IEurekaClientConfig, HttpClient, ILoggerFactory)
  nameWithType: EurekaHttpClient.EurekaHttpClient(IEurekaClientConfig, HttpClient, ILoggerFactory)
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.EurekaHttpClient(Steeltoe.Discovery.Eureka.IEurekaClientConfig, System.Net.Http.HttpClient, ILoggerFactory)
  type: Constructor
  source:
    remote:
      path: src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
    startLine: 57
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.Transport
  syntax:
    content: public EurekaHttpClient(IEurekaClientConfig config, HttpClient client, ILoggerFactory logFactory = null)
    parameters:
    - id: config
      type: Steeltoe.Discovery.Eureka.IEurekaClientConfig
    - id: client
      type: System.Net.Http.HttpClient
    - id: logFactory
      type: ILoggerFactory
    content.vb: Public Sub New(config As IEurekaClientConfig, client As HttpClient, logFactory As ILoggerFactory = Nothing)
  overload: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.#ctor(Steeltoe.Discovery.Eureka.IEurekaClientConfig,ILoggerFactory,IHttpClientHandlerProvider)
  commentId: M:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.#ctor(Steeltoe.Discovery.Eureka.IEurekaClientConfig,ILoggerFactory,IHttpClientHandlerProvider)
  id: '#ctor(Steeltoe.Discovery.Eureka.IEurekaClientConfig,ILoggerFactory,IHttpClientHandlerProvider)'
  parent: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient
  langs:
  - csharp
  - vb
  name: EurekaHttpClient(IEurekaClientConfig, ILoggerFactory, IHttpClientHandlerProvider)
  nameWithType: EurekaHttpClient.EurekaHttpClient(IEurekaClientConfig, ILoggerFactory, IHttpClientHandlerProvider)
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.EurekaHttpClient(Steeltoe.Discovery.Eureka.IEurekaClientConfig, ILoggerFactory, IHttpClientHandlerProvider)
  type: Constructor
  source:
    remote:
      path: src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
    startLine: 60
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.Transport
  syntax:
    content: public EurekaHttpClient(IEurekaClientConfig config, ILoggerFactory logFactory = null, IHttpClientHandlerProvider handlerProvider = null)
    parameters:
    - id: config
      type: Steeltoe.Discovery.Eureka.IEurekaClientConfig
    - id: logFactory
      type: ILoggerFactory
    - id: handlerProvider
      type: IHttpClientHandlerProvider
    content.vb: Public Sub New(config As IEurekaClientConfig, logFactory As ILoggerFactory = Nothing, handlerProvider As IHttpClientHandlerProvider = Nothing)
  overload: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.#ctor(Steeltoe.Discovery.Eureka.IEurekaClientConfig,System.Collections.Generic.IDictionary{System.String,System.String},ILoggerFactory,IHttpClientHandlerProvider)
  commentId: M:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.#ctor(Steeltoe.Discovery.Eureka.IEurekaClientConfig,System.Collections.Generic.IDictionary{System.String,System.String},ILoggerFactory,IHttpClientHandlerProvider)
  id: '#ctor(Steeltoe.Discovery.Eureka.IEurekaClientConfig,System.Collections.Generic.IDictionary{System.String,System.String},ILoggerFactory,IHttpClientHandlerProvider)'
  parent: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient
  langs:
  - csharp
  - vb
  name: EurekaHttpClient(IEurekaClientConfig, IDictionary<String, String>, ILoggerFactory, IHttpClientHandlerProvider)
  nameWithType: EurekaHttpClient.EurekaHttpClient(IEurekaClientConfig, IDictionary<String, String>, ILoggerFactory, IHttpClientHandlerProvider)
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.EurekaHttpClient(Steeltoe.Discovery.Eureka.IEurekaClientConfig, System.Collections.Generic.IDictionary<System.String, System.String>, ILoggerFactory, IHttpClientHandlerProvider)
  type: Constructor
  source:
    remote:
      path: src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
    startLine: 65
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.Transport
  syntax:
    content: public EurekaHttpClient(IEurekaClientConfig config, IDictionary<string, string> headers, ILoggerFactory logFactory = null, IHttpClientHandlerProvider handlerProvider = null)
    parameters:
    - id: config
      type: Steeltoe.Discovery.Eureka.IEurekaClientConfig
    - id: headers
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    - id: logFactory
      type: ILoggerFactory
    - id: handlerProvider
      type: IHttpClientHandlerProvider
    content.vb: Public Sub New(config As IEurekaClientConfig, headers As IDictionary(Of String, String), logFactory As ILoggerFactory = Nothing, handlerProvider As IHttpClientHandlerProvider = Nothing)
  overload: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.#ctor*
  nameWithType.vb: EurekaHttpClient.EurekaHttpClient(IEurekaClientConfig, IDictionary(Of String, String), ILoggerFactory, IHttpClientHandlerProvider)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.EurekaHttpClient(Steeltoe.Discovery.Eureka.IEurekaClientConfig, System.Collections.Generic.IDictionary(Of System.String, System.String), ILoggerFactory, IHttpClientHandlerProvider)
  name.vb: EurekaHttpClient(IEurekaClientConfig, IDictionary(Of String, String), ILoggerFactory, IHttpClientHandlerProvider)
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.#ctor
  commentId: M:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.#ctor
  id: '#ctor'
  parent: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient
  langs:
  - csharp
  - vb
  name: EurekaHttpClient()
  nameWithType: EurekaHttpClient.EurekaHttpClient()
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.EurekaHttpClient()
  type: Constructor
  source:
    remote:
      path: src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
    startLine: 72
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.Transport
  syntax:
    content: protected EurekaHttpClient()
    content.vb: Protected Sub New
  overload: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.RegisterAsync(Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo)
  commentId: M:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.RegisterAsync(Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo)
  id: RegisterAsync(Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo)
  parent: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient
  langs:
  - csharp
  - vb
  name: RegisterAsync(InstanceInfo)
  nameWithType: EurekaHttpClient.RegisterAsync(InstanceInfo)
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.RegisterAsync(Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RegisterAsync
    path: ../Steeltoe/src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
    startLine: 77
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.Transport
  syntax:
    content: public virtual Task<EurekaHttpResponse> RegisterAsync(InstanceInfo info)
    parameters:
    - id: info
      type: Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
    return:
      type: System.Threading.Tasks.Task{Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse}
    content.vb: Public Overridable Function RegisterAsync(info As InstanceInfo) As Task(Of EurekaHttpResponse)
  overload: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.RegisterAsync*
  implements:
  - Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.RegisterAsync(Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.SendHeartBeatAsync(System.String,System.String,Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo,Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus)
  commentId: M:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.SendHeartBeatAsync(System.String,System.String,Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo,Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus)
  id: SendHeartBeatAsync(System.String,System.String,Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo,Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus)
  parent: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient
  langs:
  - csharp
  - vb
  name: SendHeartBeatAsync(String, String, InstanceInfo, InstanceStatus)
  nameWithType: EurekaHttpClient.SendHeartBeatAsync(String, String, InstanceInfo, InstanceStatus)
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.SendHeartBeatAsync(System.String, System.String, Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo, Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SendHeartBeatAsync
    path: ../Steeltoe/src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
    startLine: 143
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.Transport
  syntax:
    content: public virtual Task<EurekaHttpResponse<InstanceInfo>> SendHeartBeatAsync(string appName, string id, InstanceInfo info, InstanceStatus overriddenStatus)
    parameters:
    - id: appName
      type: System.String
    - id: id
      type: System.String
    - id: info
      type: Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
    - id: overriddenStatus
      type: Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus
    return:
      type: System.Threading.Tasks.Task{Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse{Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo}}
    content.vb: Public Overridable Function SendHeartBeatAsync(appName As String, id As String, info As InstanceInfo, overriddenStatus As InstanceStatus) As Task(Of EurekaHttpResponse(Of InstanceInfo))
  overload: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.SendHeartBeatAsync*
  implements:
  - Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.SendHeartBeatAsync(System.String,System.String,Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo,Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetApplicationsAsync(System.Collections.Generic.ISet{System.String})
  commentId: M:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetApplicationsAsync(System.Collections.Generic.ISet{System.String})
  id: GetApplicationsAsync(System.Collections.Generic.ISet{System.String})
  parent: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient
  langs:
  - csharp
  - vb
  name: GetApplicationsAsync(ISet<String>)
  nameWithType: EurekaHttpClient.GetApplicationsAsync(ISet<String>)
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetApplicationsAsync(System.Collections.Generic.ISet<System.String>)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetApplicationsAsync
    path: ../Steeltoe/src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
    startLine: 261
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.Transport
  syntax:
    content: public virtual Task<EurekaHttpResponse<Applications>> GetApplicationsAsync(ISet<string> regions = null)
    parameters:
    - id: regions
      type: System.Collections.Generic.ISet{System.String}
    return:
      type: System.Threading.Tasks.Task{Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse{Steeltoe.Discovery.Eureka.AppInfo.Applications}}
    content.vb: Public Overridable Function GetApplicationsAsync(regions As ISet(Of String) = Nothing) As Task(Of EurekaHttpResponse(Of Applications))
  overload: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetApplicationsAsync*
  implements:
  - Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetApplicationsAsync(System.Collections.Generic.ISet{System.String})
  nameWithType.vb: EurekaHttpClient.GetApplicationsAsync(ISet(Of String))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetApplicationsAsync(System.Collections.Generic.ISet(Of System.String))
  name.vb: GetApplicationsAsync(ISet(Of String))
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetDeltaAsync(System.Collections.Generic.ISet{System.String})
  commentId: M:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetDeltaAsync(System.Collections.Generic.ISet{System.String})
  id: GetDeltaAsync(System.Collections.Generic.ISet{System.String})
  parent: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient
  langs:
  - csharp
  - vb
  name: GetDeltaAsync(ISet<String>)
  nameWithType: EurekaHttpClient.GetDeltaAsync(ISet<String>)
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetDeltaAsync(System.Collections.Generic.ISet<System.String>)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetDeltaAsync
    path: ../Steeltoe/src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
    startLine: 266
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.Transport
  syntax:
    content: public virtual Task<EurekaHttpResponse<Applications>> GetDeltaAsync(ISet<string> regions = null)
    parameters:
    - id: regions
      type: System.Collections.Generic.ISet{System.String}
    return:
      type: System.Threading.Tasks.Task{Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse{Steeltoe.Discovery.Eureka.AppInfo.Applications}}
    content.vb: Public Overridable Function GetDeltaAsync(regions As ISet(Of String) = Nothing) As Task(Of EurekaHttpResponse(Of Applications))
  overload: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetDeltaAsync*
  implements:
  - Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetDeltaAsync(System.Collections.Generic.ISet{System.String})
  nameWithType.vb: EurekaHttpClient.GetDeltaAsync(ISet(Of String))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetDeltaAsync(System.Collections.Generic.ISet(Of System.String))
  name.vb: GetDeltaAsync(ISet(Of String))
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetVipAsync(System.String,System.Collections.Generic.ISet{System.String})
  commentId: M:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetVipAsync(System.String,System.Collections.Generic.ISet{System.String})
  id: GetVipAsync(System.String,System.Collections.Generic.ISet{System.String})
  parent: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient
  langs:
  - csharp
  - vb
  name: GetVipAsync(String, ISet<String>)
  nameWithType: EurekaHttpClient.GetVipAsync(String, ISet<String>)
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetVipAsync(System.String, System.Collections.Generic.ISet<System.String>)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetVipAsync
    path: ../Steeltoe/src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
    startLine: 271
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.Transport
  syntax:
    content: public virtual Task<EurekaHttpResponse<Applications>> GetVipAsync(string vipAddress, ISet<string> regions = null)
    parameters:
    - id: vipAddress
      type: System.String
    - id: regions
      type: System.Collections.Generic.ISet{System.String}
    return:
      type: System.Threading.Tasks.Task{Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse{Steeltoe.Discovery.Eureka.AppInfo.Applications}}
    content.vb: Public Overridable Function GetVipAsync(vipAddress As String, regions As ISet(Of String) = Nothing) As Task(Of EurekaHttpResponse(Of Applications))
  overload: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetVipAsync*
  implements:
  - Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetVipAsync(System.String,System.Collections.Generic.ISet{System.String})
  nameWithType.vb: EurekaHttpClient.GetVipAsync(String, ISet(Of String))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetVipAsync(System.String, System.Collections.Generic.ISet(Of System.String))
  name.vb: GetVipAsync(String, ISet(Of String))
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetSecureVipAsync(System.String,System.Collections.Generic.ISet{System.String})
  commentId: M:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetSecureVipAsync(System.String,System.Collections.Generic.ISet{System.String})
  id: GetSecureVipAsync(System.String,System.Collections.Generic.ISet{System.String})
  parent: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient
  langs:
  - csharp
  - vb
  name: GetSecureVipAsync(String, ISet<String>)
  nameWithType: EurekaHttpClient.GetSecureVipAsync(String, ISet<String>)
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetSecureVipAsync(System.String, System.Collections.Generic.ISet<System.String>)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetSecureVipAsync
    path: ../Steeltoe/src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
    startLine: 286
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.Transport
  syntax:
    content: public virtual Task<EurekaHttpResponse<Applications>> GetSecureVipAsync(string secureVipAddress, ISet<string> regions = null)
    parameters:
    - id: secureVipAddress
      type: System.String
    - id: regions
      type: System.Collections.Generic.ISet{System.String}
    return:
      type: System.Threading.Tasks.Task{Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse{Steeltoe.Discovery.Eureka.AppInfo.Applications}}
    content.vb: Public Overridable Function GetSecureVipAsync(secureVipAddress As String, regions As ISet(Of String) = Nothing) As Task(Of EurekaHttpResponse(Of Applications))
  overload: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetSecureVipAsync*
  implements:
  - Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetSecureVipAsync(System.String,System.Collections.Generic.ISet{System.String})
  nameWithType.vb: EurekaHttpClient.GetSecureVipAsync(String, ISet(Of String))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetSecureVipAsync(System.String, System.Collections.Generic.ISet(Of System.String))
  name.vb: GetSecureVipAsync(String, ISet(Of String))
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetApplicationAsync(System.String)
  commentId: M:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetApplicationAsync(System.String)
  id: GetApplicationAsync(System.String)
  parent: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient
  langs:
  - csharp
  - vb
  name: GetApplicationAsync(String)
  nameWithType: EurekaHttpClient.GetApplicationAsync(String)
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetApplicationAsync(System.String)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetApplicationAsync
    path: ../Steeltoe/src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
    startLine: 301
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.Transport
  syntax:
    content: public virtual Task<EurekaHttpResponse<Application>> GetApplicationAsync(string appName)
    parameters:
    - id: appName
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse{Steeltoe.Discovery.Eureka.AppInfo.Application}}
    content.vb: Public Overridable Function GetApplicationAsync(appName As String) As Task(Of EurekaHttpResponse(Of Application))
  overload: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetApplicationAsync*
  implements:
  - Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetApplicationAsync(System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetInstanceAsync(System.String)
  commentId: M:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetInstanceAsync(System.String)
  id: GetInstanceAsync(System.String)
  parent: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient
  langs:
  - csharp
  - vb
  name: GetInstanceAsync(String)
  nameWithType: EurekaHttpClient.GetInstanceAsync(String)
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetInstanceAsync(System.String)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetInstanceAsync
    path: ../Steeltoe/src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
    startLine: 374
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.Transport
  syntax:
    content: public virtual Task<EurekaHttpResponse<InstanceInfo>> GetInstanceAsync(string id)
    parameters:
    - id: id
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse{Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo}}
    content.vb: Public Overridable Function GetInstanceAsync(id As String) As Task(Of EurekaHttpResponse(Of InstanceInfo))
  overload: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetInstanceAsync*
  implements:
  - Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetInstanceAsync(System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetInstanceAsync(System.String,System.String)
  commentId: M:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetInstanceAsync(System.String,System.String)
  id: GetInstanceAsync(System.String,System.String)
  parent: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient
  langs:
  - csharp
  - vb
  name: GetInstanceAsync(String, String)
  nameWithType: EurekaHttpClient.GetInstanceAsync(String, String)
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetInstanceAsync(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetInstanceAsync
    path: ../Steeltoe/src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
    startLine: 384
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.Transport
  syntax:
    content: public virtual Task<EurekaHttpResponse<InstanceInfo>> GetInstanceAsync(string appName, string id)
    parameters:
    - id: appName
      type: System.String
    - id: id
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse{Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo}}
    content.vb: Public Overridable Function GetInstanceAsync(appName As String, id As String) As Task(Of EurekaHttpResponse(Of InstanceInfo))
  overload: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetInstanceAsync*
  implements:
  - Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetInstanceAsync(System.String,System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.CancelAsync(System.String,System.String)
  commentId: M:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.CancelAsync(System.String,System.String)
  id: CancelAsync(System.String,System.String)
  parent: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient
  langs:
  - csharp
  - vb
  name: CancelAsync(String, String)
  nameWithType: EurekaHttpClient.CancelAsync(String, String)
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.CancelAsync(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CancelAsync
    path: ../Steeltoe/src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
    startLine: 409
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.Transport
  syntax:
    content: public virtual Task<EurekaHttpResponse> CancelAsync(string appName, string id)
    parameters:
    - id: appName
      type: System.String
    - id: id
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse}
    content.vb: Public Overridable Function CancelAsync(appName As String, id As String) As Task(Of EurekaHttpResponse)
  overload: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.CancelAsync*
  implements:
  - Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.CancelAsync(System.String,System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.DeleteStatusOverrideAsync(System.String,System.String,Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo)
  commentId: M:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.DeleteStatusOverrideAsync(System.String,System.String,Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo)
  id: DeleteStatusOverrideAsync(System.String,System.String,Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo)
  parent: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient
  langs:
  - csharp
  - vb
  name: DeleteStatusOverrideAsync(String, String, InstanceInfo)
  nameWithType: EurekaHttpClient.DeleteStatusOverrideAsync(String, String, InstanceInfo)
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.DeleteStatusOverrideAsync(System.String, System.String, Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DeleteStatusOverrideAsync
    path: ../Steeltoe/src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
    startLine: 471
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.Transport
  syntax:
    content: public virtual Task<EurekaHttpResponse> DeleteStatusOverrideAsync(string appName, string id, InstanceInfo info)
    parameters:
    - id: appName
      type: System.String
    - id: id
      type: System.String
    - id: info
      type: Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
    return:
      type: System.Threading.Tasks.Task{Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse}
    content.vb: Public Overridable Function DeleteStatusOverrideAsync(appName As String, id As String, info As InstanceInfo) As Task(Of EurekaHttpResponse)
  overload: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.DeleteStatusOverrideAsync*
  implements:
  - Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.DeleteStatusOverrideAsync(System.String,System.String,Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.StatusUpdateAsync(System.String,System.String,Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus,Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo)
  commentId: M:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.StatusUpdateAsync(System.String,System.String,Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus,Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo)
  id: StatusUpdateAsync(System.String,System.String,Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus,Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo)
  parent: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient
  langs:
  - csharp
  - vb
  name: StatusUpdateAsync(String, String, InstanceStatus, InstanceInfo)
  nameWithType: EurekaHttpClient.StatusUpdateAsync(String, String, InstanceStatus, InstanceInfo)
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.StatusUpdateAsync(System.String, System.String, Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus, Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: StatusUpdateAsync
    path: ../Steeltoe/src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
    startLine: 547
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.Transport
  syntax:
    content: public virtual Task<EurekaHttpResponse> StatusUpdateAsync(string appName, string id, InstanceStatus newStatus, InstanceInfo info)
    parameters:
    - id: appName
      type: System.String
    - id: id
      type: System.String
    - id: newStatus
      type: Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus
    - id: info
      type: Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
    return:
      type: System.Threading.Tasks.Task{Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse}
    content.vb: Public Overridable Function StatusUpdateAsync(appName As String, id As String, newStatus As InstanceStatus, info As InstanceInfo) As Task(Of EurekaHttpResponse)
  overload: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.StatusUpdateAsync*
  implements:
  - Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.StatusUpdateAsync(System.String,System.String,Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus,Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.Shutdown
  commentId: M:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.Shutdown
  id: Shutdown
  parent: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient
  langs:
  - csharp
  - vb
  name: Shutdown()
  nameWithType: EurekaHttpClient.Shutdown()
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.Shutdown()
  type: Method
  source:
    remote:
      path: src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Shutdown
    path: ../Steeltoe/src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
    startLine: 624
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.Transport
  syntax:
    content: public virtual void Shutdown()
    content.vb: Public Overridable Sub Shutdown
  overload: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.Shutdown*
  implements:
  - Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.Shutdown
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.MakeServiceUrls(System.String)
  commentId: M:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.MakeServiceUrls(System.String)
  id: MakeServiceUrls(System.String)
  parent: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient
  langs:
  - csharp
  - vb
  name: MakeServiceUrls(String)
  nameWithType: EurekaHttpClient.MakeServiceUrls(String)
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.MakeServiceUrls(System.String)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MakeServiceUrls
    path: ../Steeltoe/src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
    startLine: 716
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.Transport
  syntax:
    content: protected static IList<string> MakeServiceUrls(string serviceUrls)
    parameters:
    - id: serviceUrls
      type: System.String
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: Protected Shared Function MakeServiceUrls(serviceUrls As String) As IList(Of String)
  overload: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.MakeServiceUrls*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.MakeServiceUrl(System.String)
  commentId: M:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.MakeServiceUrl(System.String)
  id: MakeServiceUrl(System.String)
  parent: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient
  langs:
  - csharp
  - vb
  name: MakeServiceUrl(String)
  nameWithType: EurekaHttpClient.MakeServiceUrl(String)
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.MakeServiceUrl(System.String)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MakeServiceUrl
    path: ../Steeltoe/src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
    startLine: 728
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.Transport
  syntax:
    content: protected static string MakeServiceUrl(string serviceUrl)
    parameters:
    - id: serviceUrl
      type: System.String
    return:
      type: System.String
    content.vb: Protected Shared Function MakeServiceUrl(serviceUrl As String) As String
  overload: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.MakeServiceUrl*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetRequestMessage(System.Net.Http.HttpMethod,System.Uri)
  commentId: M:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetRequestMessage(System.Net.Http.HttpMethod,System.Uri)
  id: GetRequestMessage(System.Net.Http.HttpMethod,System.Uri)
  parent: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient
  langs:
  - csharp
  - vb
  name: GetRequestMessage(HttpMethod, Uri)
  nameWithType: EurekaHttpClient.GetRequestMessage(HttpMethod, Uri)
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetRequestMessage(System.Net.Http.HttpMethod, System.Uri)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetRequestMessage
    path: ../Steeltoe/src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
    startLine: 739
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.Transport
  syntax:
    content: protected HttpRequestMessage GetRequestMessage(HttpMethod method, Uri requestUri)
    parameters:
    - id: method
      type: System.Net.Http.HttpMethod
    - id: requestUri
      type: System.Uri
    return:
      type: System.Net.Http.HttpRequestMessage
    content.vb: Protected Function GetRequestMessage(method As HttpMethod, requestUri As Uri) As HttpRequestMessage
  overload: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetRequestMessage*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetRequestUri(System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  commentId: M:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetRequestUri(System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  id: GetRequestUri(System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  parent: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient
  langs:
  - csharp
  - vb
  name: GetRequestUri(String, IDictionary<String, String>)
  nameWithType: EurekaHttpClient.GetRequestUri(String, IDictionary<String, String>)
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetRequestUri(System.String, System.Collections.Generic.IDictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetRequestUri
    path: ../Steeltoe/src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
    startLine: 768
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.Transport
  syntax:
    content: protected virtual Uri GetRequestUri(string baseUri, IDictionary<string, string> queryValues = null)
    parameters:
    - id: baseUri
      type: System.String
    - id: queryValues
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    return:
      type: System.Uri
    content.vb: Protected Overridable Function GetRequestUri(baseUri As String, queryValues As IDictionary(Of String, String) = Nothing) As Uri
  overload: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetRequestUri*
  nameWithType.vb: EurekaHttpClient.GetRequestUri(String, IDictionary(Of String, String))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetRequestUri(System.String, System.Collections.Generic.IDictionary(Of System.String, System.String))
  name.vb: GetRequestUri(String, IDictionary(Of String, String))
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.Initialize(System.Collections.Generic.IDictionary{System.String,System.String},ILoggerFactory)
  commentId: M:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.Initialize(System.Collections.Generic.IDictionary{System.String,System.String},ILoggerFactory)
  id: Initialize(System.Collections.Generic.IDictionary{System.String,System.String},ILoggerFactory)
  parent: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient
  langs:
  - csharp
  - vb
  name: Initialize(IDictionary<String, String>, ILoggerFactory)
  nameWithType: EurekaHttpClient.Initialize(IDictionary<String, String>, ILoggerFactory)
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.Initialize(System.Collections.Generic.IDictionary<System.String, System.String>, ILoggerFactory)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Initialize
    path: ../Steeltoe/src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
    startLine: 787
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.Transport
  syntax:
    content: protected void Initialize(IDictionary<string, string> headers, ILoggerFactory logFactory)
    parameters:
    - id: headers
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    - id: logFactory
      type: ILoggerFactory
    content.vb: Protected Sub Initialize(headers As IDictionary(Of String, String), logFactory As ILoggerFactory)
  overload: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.Initialize*
  nameWithType.vb: EurekaHttpClient.Initialize(IDictionary(Of String, String), ILoggerFactory)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.Initialize(System.Collections.Generic.IDictionary(Of System.String, System.String), ILoggerFactory)
  name.vb: Initialize(IDictionary(Of String, String), ILoggerFactory)
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.DoGetInstanceAsync(System.String)
  commentId: M:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.DoGetInstanceAsync(System.String)
  id: DoGetInstanceAsync(System.String)
  parent: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient
  langs:
  - csharp
  - vb
  name: DoGetInstanceAsync(String)
  nameWithType: EurekaHttpClient.DoGetInstanceAsync(String)
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.DoGetInstanceAsync(System.String)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DoGetInstanceAsync
    path: ../Steeltoe/src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
    startLine: 797
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.Transport
  syntax:
    content: protected virtual Task<EurekaHttpResponse<InstanceInfo>> DoGetInstanceAsync(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse{Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo}}
    content.vb: Protected Overridable Function DoGetInstanceAsync(path As String) As Task(Of EurekaHttpResponse(Of InstanceInfo))
  overload: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.DoGetInstanceAsync*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.DoGetApplicationsAsync(System.String,System.Collections.Generic.ISet{System.String})
  commentId: M:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.DoGetApplicationsAsync(System.String,System.Collections.Generic.ISet{System.String})
  id: DoGetApplicationsAsync(System.String,System.Collections.Generic.ISet{System.String})
  parent: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient
  langs:
  - csharp
  - vb
  name: DoGetApplicationsAsync(String, ISet<String>)
  nameWithType: EurekaHttpClient.DoGetApplicationsAsync(String, ISet<String>)
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.DoGetApplicationsAsync(System.String, System.Collections.Generic.ISet<System.String>)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DoGetApplicationsAsync
    path: ../Steeltoe/src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
    startLine: 861
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.Transport
  syntax:
    content: protected virtual Task<EurekaHttpResponse<Applications>> DoGetApplicationsAsync(string path, ISet<string> regions)
    parameters:
    - id: path
      type: System.String
    - id: regions
      type: System.Collections.Generic.ISet{System.String}
    return:
      type: System.Threading.Tasks.Task{Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse{Steeltoe.Discovery.Eureka.AppInfo.Applications}}
    content.vb: Protected Overridable Function DoGetApplicationsAsync(path As String, regions As ISet(Of String)) As Task(Of EurekaHttpResponse(Of Applications))
  overload: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.DoGetApplicationsAsync*
  nameWithType.vb: EurekaHttpClient.DoGetApplicationsAsync(String, ISet(Of String))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.DoGetApplicationsAsync(System.String, System.Collections.Generic.ISet(Of System.String))
  name.vb: DoGetApplicationsAsync(String, ISet(Of String))
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetHttpClient(Steeltoe.Discovery.Eureka.IEurekaClientConfig)
  commentId: M:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetHttpClient(Steeltoe.Discovery.Eureka.IEurekaClientConfig)
  id: GetHttpClient(Steeltoe.Discovery.Eureka.IEurekaClientConfig)
  parent: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient
  langs:
  - csharp
  - vb
  name: GetHttpClient(IEurekaClientConfig)
  nameWithType: EurekaHttpClient.GetHttpClient(IEurekaClientConfig)
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetHttpClient(Steeltoe.Discovery.Eureka.IEurekaClientConfig)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetHttpClient
    path: ../Steeltoe/src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
    startLine: 941
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.Transport
  syntax:
    content: protected virtual HttpClient GetHttpClient(IEurekaClientConfig config)
    parameters:
    - id: config
      type: Steeltoe.Discovery.Eureka.IEurekaClientConfig
    return:
      type: System.Net.Http.HttpClient
    content.vb: Protected Overridable Function GetHttpClient(config As IEurekaClientConfig) As HttpClient
  overload: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetHttpClient*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetRequestContent(System.Object)
  commentId: M:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetRequestContent(System.Object)
  id: GetRequestContent(System.Object)
  parent: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient
  langs:
  - csharp
  - vb
  name: GetRequestContent(Object)
  nameWithType: EurekaHttpClient.GetRequestContent(Object)
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetRequestContent(System.Object)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetRequestContent
    path: ../Steeltoe/src/Discovery/src/Eureka/Transport/EurekaHttpClient.cs
    startLine: 984
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.Transport
  syntax:
    content: protected virtual HttpContent GetRequestContent(object toSerialize)
    parameters:
    - id: toSerialize
      type: System.Object
    return:
      type: System.Net.Http.HttpContent
    content.vb: Protected Overridable Function GetRequestContent(toSerialize As Object) As HttpContent
  overload: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetRequestContent*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Steeltoe.Discovery.Eureka.Transport
  commentId: N:Steeltoe.Discovery.Eureka.Transport
  name: Steeltoe.Discovery.Eureka.Transport
  nameWithType: Steeltoe.Discovery.Eureka.Transport
  fullName: Steeltoe.Discovery.Eureka.Transport
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient
  commentId: T:Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient
  parent: Steeltoe.Discovery.Eureka.Transport
  name: IEurekaHttpClient
  nameWithType: IEurekaHttpClient
  fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Eureka.IEurekaClientConfig
  commentId: T:Steeltoe.Discovery.Eureka.IEurekaClientConfig
  parent: Steeltoe.Discovery.Eureka
  name: IEurekaClientConfig
  nameWithType: IEurekaClientConfig
  fullName: Steeltoe.Discovery.Eureka.IEurekaClientConfig
- uid: Steeltoe.Discovery.Eureka
  commentId: N:Steeltoe.Discovery.Eureka
  name: Steeltoe.Discovery.Eureka
  nameWithType: Steeltoe.Discovery.Eureka
  fullName: Steeltoe.Discovery.Eureka
- uid: IHttpClientHandlerProvider
  isExternal: true
  name: IHttpClientHandlerProvider
  nameWithType: IHttpClientHandlerProvider
  fullName: IHttpClientHandlerProvider
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.Config*
  commentId: Overload:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.Config
  name: Config
  nameWithType: EurekaHttpClient.Config
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.Config
- uid: System.Net.Http.HttpClient
  commentId: T:System.Net.Http.HttpClient
  parent: System.Net.Http
  isExternal: true
  name: HttpClient
  nameWithType: HttpClient
  fullName: System.Net.Http.HttpClient
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: ILogger
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: ILogger
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.#ctor*
  commentId: Overload:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.#ctor
  name: EurekaHttpClient
  nameWithType: EurekaHttpClient.EurekaHttpClient
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.EurekaHttpClient
- uid: IOptionsMonitor{Steeltoe.Discovery.Eureka.EurekaClientOptions}
  commentId: '!:IOptionsMonitor{Steeltoe.Discovery.Eureka.EurekaClientOptions}'
  definition: IOptionsMonitor`1
  name: IOptionsMonitor<EurekaClientOptions>
  nameWithType: IOptionsMonitor<EurekaClientOptions>
  fullName: IOptionsMonitor<Steeltoe.Discovery.Eureka.EurekaClientOptions>
  nameWithType.vb: IOptionsMonitor(Of EurekaClientOptions)
  fullName.vb: IOptionsMonitor(Of Steeltoe.Discovery.Eureka.EurekaClientOptions)
  name.vb: IOptionsMonitor(Of EurekaClientOptions)
  spec.csharp:
  - uid: IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: IOptionsMonitor
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Discovery.Eureka.EurekaClientOptions
    name: EurekaClientOptions
    nameWithType: EurekaClientOptions
    fullName: Steeltoe.Discovery.Eureka.EurekaClientOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: IOptionsMonitor
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Discovery.Eureka.EurekaClientOptions
    name: EurekaClientOptions
    nameWithType: EurekaClientOptions
    fullName: Steeltoe.Discovery.Eureka.EurekaClientOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: ILoggerFactory
  isExternal: true
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: ILoggerFactory
- uid: IOptionsMonitor`1
  isExternal: true
  name: IOptionsMonitor<>
  nameWithType: IOptionsMonitor<>
  fullName: IOptionsMonitor<>
  nameWithType.vb: IOptionsMonitor(Of )
  fullName.vb: IOptionsMonitor(Of )
  name.vb: IOptionsMonitor(Of )
  spec.csharp:
  - uid: IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: IOptionsMonitor
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: IOptionsMonitor
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.RegisterAsync*
  commentId: Overload:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.RegisterAsync
  name: RegisterAsync
  nameWithType: EurekaHttpClient.RegisterAsync
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.RegisterAsync
- uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.RegisterAsync(Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo)
  commentId: M:Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.RegisterAsync(Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo)
  parent: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient
  name: RegisterAsync(InstanceInfo)
  nameWithType: IEurekaHttpClient.RegisterAsync(InstanceInfo)
  fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.RegisterAsync(Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo)
  spec.csharp:
  - uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.RegisterAsync(Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo)
    name: RegisterAsync
    nameWithType: IEurekaHttpClient.RegisterAsync
    fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.RegisterAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
    name: InstanceInfo
    nameWithType: InstanceInfo
    fullName: Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.RegisterAsync(Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo)
    name: RegisterAsync
    nameWithType: IEurekaHttpClient.RegisterAsync
    fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.RegisterAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
    name: InstanceInfo
    nameWithType: InstanceInfo
    fullName: Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
  commentId: T:Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
  parent: Steeltoe.Discovery.Eureka.AppInfo
  name: InstanceInfo
  nameWithType: InstanceInfo
  fullName: Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
- uid: System.Threading.Tasks.Task{Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse}
  commentId: T:System.Threading.Tasks.Task{Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<EurekaHttpResponse>
  nameWithType: Task<EurekaHttpResponse>
  fullName: System.Threading.Tasks.Task<Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse>
  nameWithType.vb: Task(Of EurekaHttpResponse)
  fullName.vb: System.Threading.Tasks.Task(Of Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse)
  name.vb: Task(Of EurekaHttpResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse
    name: EurekaHttpResponse
    nameWithType: EurekaHttpResponse
    fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse
    name: EurekaHttpResponse
    nameWithType: EurekaHttpResponse
    fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Eureka.AppInfo
  commentId: N:Steeltoe.Discovery.Eureka.AppInfo
  name: Steeltoe.Discovery.Eureka.AppInfo
  nameWithType: Steeltoe.Discovery.Eureka.AppInfo
  fullName: Steeltoe.Discovery.Eureka.AppInfo
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.SendHeartBeatAsync*
  commentId: Overload:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.SendHeartBeatAsync
  name: SendHeartBeatAsync
  nameWithType: EurekaHttpClient.SendHeartBeatAsync
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.SendHeartBeatAsync
- uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.SendHeartBeatAsync(System.String,System.String,Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo,Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus)
  commentId: M:Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.SendHeartBeatAsync(System.String,System.String,Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo,Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus)
  parent: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient
  isExternal: true
  name: SendHeartBeatAsync(String, String, InstanceInfo, InstanceStatus)
  nameWithType: IEurekaHttpClient.SendHeartBeatAsync(String, String, InstanceInfo, InstanceStatus)
  fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.SendHeartBeatAsync(System.String, System.String, Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo, Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus)
  spec.csharp:
  - uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.SendHeartBeatAsync(System.String,System.String,Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo,Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus)
    name: SendHeartBeatAsync
    nameWithType: IEurekaHttpClient.SendHeartBeatAsync
    fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.SendHeartBeatAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
    name: InstanceInfo
    nameWithType: InstanceInfo
    fullName: Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus
    name: InstanceStatus
    nameWithType: InstanceStatus
    fullName: Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.SendHeartBeatAsync(System.String,System.String,Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo,Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus)
    name: SendHeartBeatAsync
    nameWithType: IEurekaHttpClient.SendHeartBeatAsync
    fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.SendHeartBeatAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
    name: InstanceInfo
    nameWithType: InstanceInfo
    fullName: Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus
    name: InstanceStatus
    nameWithType: InstanceStatus
    fullName: Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus
  commentId: T:Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus
  parent: Steeltoe.Discovery.Eureka.AppInfo
  name: InstanceStatus
  nameWithType: InstanceStatus
  fullName: Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus
- uid: System.Threading.Tasks.Task{Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse{Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo}}
  commentId: T:System.Threading.Tasks.Task{Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse{Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<EurekaHttpResponse<InstanceInfo>>
  nameWithType: Task<EurekaHttpResponse<InstanceInfo>>
  fullName: System.Threading.Tasks.Task<Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse<Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo>>
  nameWithType.vb: Task(Of EurekaHttpResponse(Of InstanceInfo))
  fullName.vb: System.Threading.Tasks.Task(Of Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse(Of Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo))
  name.vb: Task(Of EurekaHttpResponse(Of InstanceInfo))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse`1
    name: EurekaHttpResponse
    nameWithType: EurekaHttpResponse
    fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
    name: InstanceInfo
    nameWithType: InstanceInfo
    fullName: Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse`1
    name: EurekaHttpResponse
    nameWithType: EurekaHttpResponse
    fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
    name: InstanceInfo
    nameWithType: InstanceInfo
    fullName: Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetApplicationsAsync*
  commentId: Overload:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetApplicationsAsync
  name: GetApplicationsAsync
  nameWithType: EurekaHttpClient.GetApplicationsAsync
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetApplicationsAsync
- uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetApplicationsAsync(System.Collections.Generic.ISet{System.String})
  commentId: M:Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetApplicationsAsync(System.Collections.Generic.ISet{System.String})
  parent: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient
  isExternal: true
  name: GetApplicationsAsync(ISet<String>)
  nameWithType: IEurekaHttpClient.GetApplicationsAsync(ISet<String>)
  fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetApplicationsAsync(System.Collections.Generic.ISet<System.String>)
  nameWithType.vb: IEurekaHttpClient.GetApplicationsAsync(ISet(Of String))
  fullName.vb: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetApplicationsAsync(System.Collections.Generic.ISet(Of System.String))
  name.vb: GetApplicationsAsync(ISet(Of String))
  spec.csharp:
  - uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetApplicationsAsync(System.Collections.Generic.ISet{System.String})
    name: GetApplicationsAsync
    nameWithType: IEurekaHttpClient.GetApplicationsAsync
    fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetApplicationsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetApplicationsAsync(System.Collections.Generic.ISet{System.String})
    name: GetApplicationsAsync
    nameWithType: IEurekaHttpClient.GetApplicationsAsync
    fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetApplicationsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ISet{System.String}
  commentId: T:System.Collections.Generic.ISet{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ISet`1
  name: ISet<String>
  nameWithType: ISet<String>
  fullName: System.Collections.Generic.ISet<System.String>
  nameWithType.vb: ISet(Of String)
  fullName.vb: System.Collections.Generic.ISet(Of System.String)
  name.vb: ISet(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse{Steeltoe.Discovery.Eureka.AppInfo.Applications}}
  commentId: T:System.Threading.Tasks.Task{Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse{Steeltoe.Discovery.Eureka.AppInfo.Applications}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<EurekaHttpResponse<Applications>>
  nameWithType: Task<EurekaHttpResponse<Applications>>
  fullName: System.Threading.Tasks.Task<Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse<Steeltoe.Discovery.Eureka.AppInfo.Applications>>
  nameWithType.vb: Task(Of EurekaHttpResponse(Of Applications))
  fullName.vb: System.Threading.Tasks.Task(Of Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse(Of Steeltoe.Discovery.Eureka.AppInfo.Applications))
  name.vb: Task(Of EurekaHttpResponse(Of Applications))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse`1
    name: EurekaHttpResponse
    nameWithType: EurekaHttpResponse
    fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Discovery.Eureka.AppInfo.Applications
    name: Applications
    nameWithType: Applications
    fullName: Steeltoe.Discovery.Eureka.AppInfo.Applications
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse`1
    name: EurekaHttpResponse
    nameWithType: EurekaHttpResponse
    fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Discovery.Eureka.AppInfo.Applications
    name: Applications
    nameWithType: Applications
    fullName: Steeltoe.Discovery.Eureka.AppInfo.Applications
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ISet`1
  commentId: T:System.Collections.Generic.ISet`1
  isExternal: true
  name: ISet<T>
  nameWithType: ISet<T>
  fullName: System.Collections.Generic.ISet<T>
  nameWithType.vb: ISet(Of T)
  fullName.vb: System.Collections.Generic.ISet(Of T)
  name.vb: ISet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetDeltaAsync*
  commentId: Overload:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetDeltaAsync
  name: GetDeltaAsync
  nameWithType: EurekaHttpClient.GetDeltaAsync
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetDeltaAsync
- uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetDeltaAsync(System.Collections.Generic.ISet{System.String})
  commentId: M:Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetDeltaAsync(System.Collections.Generic.ISet{System.String})
  parent: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient
  isExternal: true
  name: GetDeltaAsync(ISet<String>)
  nameWithType: IEurekaHttpClient.GetDeltaAsync(ISet<String>)
  fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetDeltaAsync(System.Collections.Generic.ISet<System.String>)
  nameWithType.vb: IEurekaHttpClient.GetDeltaAsync(ISet(Of String))
  fullName.vb: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetDeltaAsync(System.Collections.Generic.ISet(Of System.String))
  name.vb: GetDeltaAsync(ISet(Of String))
  spec.csharp:
  - uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetDeltaAsync(System.Collections.Generic.ISet{System.String})
    name: GetDeltaAsync
    nameWithType: IEurekaHttpClient.GetDeltaAsync
    fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetDeltaAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetDeltaAsync(System.Collections.Generic.ISet{System.String})
    name: GetDeltaAsync
    nameWithType: IEurekaHttpClient.GetDeltaAsync
    fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetDeltaAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetVipAsync*
  commentId: Overload:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetVipAsync
  name: GetVipAsync
  nameWithType: EurekaHttpClient.GetVipAsync
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetVipAsync
- uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetVipAsync(System.String,System.Collections.Generic.ISet{System.String})
  commentId: M:Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetVipAsync(System.String,System.Collections.Generic.ISet{System.String})
  parent: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient
  isExternal: true
  name: GetVipAsync(String, ISet<String>)
  nameWithType: IEurekaHttpClient.GetVipAsync(String, ISet<String>)
  fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetVipAsync(System.String, System.Collections.Generic.ISet<System.String>)
  nameWithType.vb: IEurekaHttpClient.GetVipAsync(String, ISet(Of String))
  fullName.vb: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetVipAsync(System.String, System.Collections.Generic.ISet(Of System.String))
  name.vb: GetVipAsync(String, ISet(Of String))
  spec.csharp:
  - uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetVipAsync(System.String,System.Collections.Generic.ISet{System.String})
    name: GetVipAsync
    nameWithType: IEurekaHttpClient.GetVipAsync
    fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetVipAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetVipAsync(System.String,System.Collections.Generic.ISet{System.String})
    name: GetVipAsync
    nameWithType: IEurekaHttpClient.GetVipAsync
    fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetVipAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetSecureVipAsync*
  commentId: Overload:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetSecureVipAsync
  name: GetSecureVipAsync
  nameWithType: EurekaHttpClient.GetSecureVipAsync
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetSecureVipAsync
- uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetSecureVipAsync(System.String,System.Collections.Generic.ISet{System.String})
  commentId: M:Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetSecureVipAsync(System.String,System.Collections.Generic.ISet{System.String})
  parent: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient
  isExternal: true
  name: GetSecureVipAsync(String, ISet<String>)
  nameWithType: IEurekaHttpClient.GetSecureVipAsync(String, ISet<String>)
  fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetSecureVipAsync(System.String, System.Collections.Generic.ISet<System.String>)
  nameWithType.vb: IEurekaHttpClient.GetSecureVipAsync(String, ISet(Of String))
  fullName.vb: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetSecureVipAsync(System.String, System.Collections.Generic.ISet(Of System.String))
  name.vb: GetSecureVipAsync(String, ISet(Of String))
  spec.csharp:
  - uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetSecureVipAsync(System.String,System.Collections.Generic.ISet{System.String})
    name: GetSecureVipAsync
    nameWithType: IEurekaHttpClient.GetSecureVipAsync
    fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetSecureVipAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetSecureVipAsync(System.String,System.Collections.Generic.ISet{System.String})
    name: GetSecureVipAsync
    nameWithType: IEurekaHttpClient.GetSecureVipAsync
    fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetSecureVipAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetApplicationAsync*
  commentId: Overload:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetApplicationAsync
  name: GetApplicationAsync
  nameWithType: EurekaHttpClient.GetApplicationAsync
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetApplicationAsync
- uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetApplicationAsync(System.String)
  commentId: M:Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetApplicationAsync(System.String)
  parent: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient
  isExternal: true
  name: GetApplicationAsync(String)
  nameWithType: IEurekaHttpClient.GetApplicationAsync(String)
  fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetApplicationAsync(System.String)
  spec.csharp:
  - uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetApplicationAsync(System.String)
    name: GetApplicationAsync
    nameWithType: IEurekaHttpClient.GetApplicationAsync
    fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetApplicationAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetApplicationAsync(System.String)
    name: GetApplicationAsync
    nameWithType: IEurekaHttpClient.GetApplicationAsync
    fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetApplicationAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse{Steeltoe.Discovery.Eureka.AppInfo.Application}}
  commentId: T:System.Threading.Tasks.Task{Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse{Steeltoe.Discovery.Eureka.AppInfo.Application}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<EurekaHttpResponse<Application>>
  nameWithType: Task<EurekaHttpResponse<Application>>
  fullName: System.Threading.Tasks.Task<Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse<Steeltoe.Discovery.Eureka.AppInfo.Application>>
  nameWithType.vb: Task(Of EurekaHttpResponse(Of Application))
  fullName.vb: System.Threading.Tasks.Task(Of Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse(Of Steeltoe.Discovery.Eureka.AppInfo.Application))
  name.vb: Task(Of EurekaHttpResponse(Of Application))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse`1
    name: EurekaHttpResponse
    nameWithType: EurekaHttpResponse
    fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Discovery.Eureka.AppInfo.Application
    name: Application
    nameWithType: Application
    fullName: Steeltoe.Discovery.Eureka.AppInfo.Application
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse`1
    name: EurekaHttpResponse
    nameWithType: EurekaHttpResponse
    fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Discovery.Eureka.AppInfo.Application
    name: Application
    nameWithType: Application
    fullName: Steeltoe.Discovery.Eureka.AppInfo.Application
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetInstanceAsync*
  commentId: Overload:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetInstanceAsync
  name: GetInstanceAsync
  nameWithType: EurekaHttpClient.GetInstanceAsync
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetInstanceAsync
- uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetInstanceAsync(System.String)
  commentId: M:Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetInstanceAsync(System.String)
  parent: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient
  isExternal: true
  name: GetInstanceAsync(String)
  nameWithType: IEurekaHttpClient.GetInstanceAsync(String)
  fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetInstanceAsync(System.String)
  spec.csharp:
  - uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetInstanceAsync(System.String)
    name: GetInstanceAsync
    nameWithType: IEurekaHttpClient.GetInstanceAsync
    fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetInstanceAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetInstanceAsync(System.String)
    name: GetInstanceAsync
    nameWithType: IEurekaHttpClient.GetInstanceAsync
    fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetInstanceAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetInstanceAsync(System.String,System.String)
  commentId: M:Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetInstanceAsync(System.String,System.String)
  parent: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient
  isExternal: true
  name: GetInstanceAsync(String, String)
  nameWithType: IEurekaHttpClient.GetInstanceAsync(String, String)
  fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetInstanceAsync(System.String, System.String)
  spec.csharp:
  - uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetInstanceAsync(System.String,System.String)
    name: GetInstanceAsync
    nameWithType: IEurekaHttpClient.GetInstanceAsync
    fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetInstanceAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetInstanceAsync(System.String,System.String)
    name: GetInstanceAsync
    nameWithType: IEurekaHttpClient.GetInstanceAsync
    fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.GetInstanceAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.CancelAsync*
  commentId: Overload:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.CancelAsync
  name: CancelAsync
  nameWithType: EurekaHttpClient.CancelAsync
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.CancelAsync
- uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.CancelAsync(System.String,System.String)
  commentId: M:Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.CancelAsync(System.String,System.String)
  parent: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient
  isExternal: true
  name: CancelAsync(String, String)
  nameWithType: IEurekaHttpClient.CancelAsync(String, String)
  fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.CancelAsync(System.String, System.String)
  spec.csharp:
  - uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.CancelAsync(System.String,System.String)
    name: CancelAsync
    nameWithType: IEurekaHttpClient.CancelAsync
    fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.CancelAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.CancelAsync(System.String,System.String)
    name: CancelAsync
    nameWithType: IEurekaHttpClient.CancelAsync
    fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.CancelAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.DeleteStatusOverrideAsync*
  commentId: Overload:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.DeleteStatusOverrideAsync
  name: DeleteStatusOverrideAsync
  nameWithType: EurekaHttpClient.DeleteStatusOverrideAsync
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.DeleteStatusOverrideAsync
- uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.DeleteStatusOverrideAsync(System.String,System.String,Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo)
  commentId: M:Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.DeleteStatusOverrideAsync(System.String,System.String,Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo)
  parent: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient
  isExternal: true
  name: DeleteStatusOverrideAsync(String, String, InstanceInfo)
  nameWithType: IEurekaHttpClient.DeleteStatusOverrideAsync(String, String, InstanceInfo)
  fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.DeleteStatusOverrideAsync(System.String, System.String, Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo)
  spec.csharp:
  - uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.DeleteStatusOverrideAsync(System.String,System.String,Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo)
    name: DeleteStatusOverrideAsync
    nameWithType: IEurekaHttpClient.DeleteStatusOverrideAsync
    fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.DeleteStatusOverrideAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
    name: InstanceInfo
    nameWithType: InstanceInfo
    fullName: Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.DeleteStatusOverrideAsync(System.String,System.String,Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo)
    name: DeleteStatusOverrideAsync
    nameWithType: IEurekaHttpClient.DeleteStatusOverrideAsync
    fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.DeleteStatusOverrideAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
    name: InstanceInfo
    nameWithType: InstanceInfo
    fullName: Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.StatusUpdateAsync*
  commentId: Overload:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.StatusUpdateAsync
  name: StatusUpdateAsync
  nameWithType: EurekaHttpClient.StatusUpdateAsync
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.StatusUpdateAsync
- uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.StatusUpdateAsync(System.String,System.String,Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus,Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo)
  commentId: M:Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.StatusUpdateAsync(System.String,System.String,Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus,Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo)
  parent: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient
  isExternal: true
  name: StatusUpdateAsync(String, String, InstanceStatus, InstanceInfo)
  nameWithType: IEurekaHttpClient.StatusUpdateAsync(String, String, InstanceStatus, InstanceInfo)
  fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.StatusUpdateAsync(System.String, System.String, Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus, Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo)
  spec.csharp:
  - uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.StatusUpdateAsync(System.String,System.String,Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus,Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo)
    name: StatusUpdateAsync
    nameWithType: IEurekaHttpClient.StatusUpdateAsync
    fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.StatusUpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus
    name: InstanceStatus
    nameWithType: InstanceStatus
    fullName: Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
    name: InstanceInfo
    nameWithType: InstanceInfo
    fullName: Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.StatusUpdateAsync(System.String,System.String,Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus,Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo)
    name: StatusUpdateAsync
    nameWithType: IEurekaHttpClient.StatusUpdateAsync
    fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.StatusUpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus
    name: InstanceStatus
    nameWithType: InstanceStatus
    fullName: Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
    name: InstanceInfo
    nameWithType: InstanceInfo
    fullName: Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.Shutdown*
  commentId: Overload:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.Shutdown
  name: Shutdown
  nameWithType: EurekaHttpClient.Shutdown
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.Shutdown
- uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.Shutdown
  commentId: M:Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.Shutdown
  parent: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient
  name: Shutdown()
  nameWithType: IEurekaHttpClient.Shutdown()
  fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.Shutdown()
  spec.csharp:
  - uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.Shutdown
    name: Shutdown
    nameWithType: IEurekaHttpClient.Shutdown
    fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.Shutdown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.Shutdown
    name: Shutdown
    nameWithType: IEurekaHttpClient.Shutdown
    fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient.Shutdown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.MakeServiceUrls*
  commentId: Overload:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.MakeServiceUrls
  name: MakeServiceUrls
  nameWithType: EurekaHttpClient.MakeServiceUrls
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.MakeServiceUrls
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.MakeServiceUrl*
  commentId: Overload:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.MakeServiceUrl
  name: MakeServiceUrl
  nameWithType: EurekaHttpClient.MakeServiceUrl
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.MakeServiceUrl
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetRequestMessage*
  commentId: Overload:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetRequestMessage
  name: GetRequestMessage
  nameWithType: EurekaHttpClient.GetRequestMessage
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetRequestMessage
- uid: System.Net.Http.HttpMethod
  commentId: T:System.Net.Http.HttpMethod
  parent: System.Net.Http
  isExternal: true
  name: HttpMethod
  nameWithType: HttpMethod
  fullName: System.Net.Http.HttpMethod
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Net.Http.HttpRequestMessage
  commentId: T:System.Net.Http.HttpRequestMessage
  parent: System.Net.Http
  isExternal: true
  name: HttpRequestMessage
  nameWithType: HttpRequestMessage
  fullName: System.Net.Http.HttpRequestMessage
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetRequestUri*
  commentId: Overload:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetRequestUri
  name: GetRequestUri
  nameWithType: EurekaHttpClient.GetRequestUri
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetRequestUri
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.Initialize*
  commentId: Overload:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.Initialize
  name: Initialize
  nameWithType: EurekaHttpClient.Initialize
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.Initialize
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.DoGetInstanceAsync*
  commentId: Overload:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.DoGetInstanceAsync
  name: DoGetInstanceAsync
  nameWithType: EurekaHttpClient.DoGetInstanceAsync
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.DoGetInstanceAsync
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.DoGetApplicationsAsync*
  commentId: Overload:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.DoGetApplicationsAsync
  name: DoGetApplicationsAsync
  nameWithType: EurekaHttpClient.DoGetApplicationsAsync
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.DoGetApplicationsAsync
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetHttpClient*
  commentId: Overload:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetHttpClient
  name: GetHttpClient
  nameWithType: EurekaHttpClient.GetHttpClient
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetHttpClient
- uid: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetRequestContent*
  commentId: Overload:Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetRequestContent
  name: GetRequestContent
  nameWithType: EurekaHttpClient.GetRequestContent
  fullName: Steeltoe.Discovery.Eureka.Transport.EurekaHttpClient.GetRequestContent
- uid: System.Net.Http.HttpContent
  commentId: T:System.Net.Http.HttpContent
  parent: System.Net.Http
  isExternal: true
  name: HttpContent
  nameWithType: HttpContent
  fullName: System.Net.Http.HttpContent
