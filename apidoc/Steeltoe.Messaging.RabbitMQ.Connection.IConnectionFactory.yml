### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
  commentId: T:Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
  id: IConnectionFactory
  parent: Steeltoe.Messaging.RabbitMQ.Connection
  children:
  - Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.AddConnectionListener(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionListener)
  - Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.ClearConnectionListeners
  - Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.CreateConnection
  - Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.Destroy
  - Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.Host
  - Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.IsPublisherConfirms
  - Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.IsPublisherReturns
  - Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.IsSimplePublisherConfirms
  - Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.Port
  - Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.PublisherConnectionFactory
  - Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.RemoveConnectionListener(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionListener)
  - Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.Username
  - Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.VirtualHost
  langs:
  - csharp
  - vb
  name: IConnectionFactory
  nameWithType: IConnectionFactory
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
  type: Interface
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/IConnectionFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IConnectionFactory
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/IConnectionFactory.cs
    startLine: 9
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: 'public interface IConnectionFactory : IDisposable, IServiceNameAware'
    content.vb: >-
      Public Interface IConnectionFactory

          Inherits IDisposable, IServiceNameAware
  inheritedMembers:
  - System.IDisposable.Dispose
  - Steeltoe.Common.Services.IServiceNameAware.ServiceName
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.Host
  commentId: P:Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.Host
  id: Host
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
  langs:
  - csharp
  - vb
  name: Host
  nameWithType: IConnectionFactory.Host
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.Host
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/IConnectionFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Host
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/IConnectionFactory.cs
    startLine: 14
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  summary: "\nGets the host name for the connection factory\n"
  example: []
  syntax:
    content: string Host { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Host As String
  overload: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.Host*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.Port
  commentId: P:Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.Port
  id: Port
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
  langs:
  - csharp
  - vb
  name: Port
  nameWithType: IConnectionFactory.Port
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.Port
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/IConnectionFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Port
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/IConnectionFactory.cs
    startLine: 19
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  summary: "\nGets the port number for this connection factory\n"
  example: []
  syntax:
    content: int Port { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property Port As Integer
  overload: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.Port*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.VirtualHost
  commentId: P:Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.VirtualHost
  id: VirtualHost
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
  langs:
  - csharp
  - vb
  name: VirtualHost
  nameWithType: IConnectionFactory.VirtualHost
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.VirtualHost
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/IConnectionFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: VirtualHost
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/IConnectionFactory.cs
    startLine: 24
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  summary: "\nGets the virtual host name for the connection factory\n"
  example: []
  syntax:
    content: string VirtualHost { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property VirtualHost As String
  overload: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.VirtualHost*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.Username
  commentId: P:Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.Username
  id: Username
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
  langs:
  - csharp
  - vb
  name: Username
  nameWithType: IConnectionFactory.Username
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.Username
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/IConnectionFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Username
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/IConnectionFactory.cs
    startLine: 29
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  summary: "\nGets the user name for the connection factory\n"
  example: []
  syntax:
    content: string Username { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Username As String
  overload: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.Username*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.PublisherConnectionFactory
  commentId: P:Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.PublisherConnectionFactory
  id: PublisherConnectionFactory
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
  langs:
  - csharp
  - vb
  name: PublisherConnectionFactory
  nameWithType: IConnectionFactory.PublisherConnectionFactory
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.PublisherConnectionFactory
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/IConnectionFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: PublisherConnectionFactory
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/IConnectionFactory.cs
    startLine: 34
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  summary: "\nGets the publisher connection factory that will be used;\n"
  example: []
  syntax:
    content: IConnectionFactory PublisherConnectionFactory { get; }
    parameters: []
    return:
      type: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
    content.vb: ReadOnly Property PublisherConnectionFactory As IConnectionFactory
  overload: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.PublisherConnectionFactory*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.IsSimplePublisherConfirms
  commentId: P:Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.IsSimplePublisherConfirms
  id: IsSimplePublisherConfirms
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
  langs:
  - csharp
  - vb
  name: IsSimplePublisherConfirms
  nameWithType: IConnectionFactory.IsSimplePublisherConfirms
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.IsSimplePublisherConfirms
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/IConnectionFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsSimplePublisherConfirms
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/IConnectionFactory.cs
    startLine: 39
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  summary: "\nGets a value indicating whether if simple publisher confirms are enabled\n"
  example: []
  syntax:
    content: bool IsSimplePublisherConfirms { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsSimplePublisherConfirms As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.IsSimplePublisherConfirms*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.IsPublisherConfirms
  commentId: P:Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.IsPublisherConfirms
  id: IsPublisherConfirms
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
  langs:
  - csharp
  - vb
  name: IsPublisherConfirms
  nameWithType: IConnectionFactory.IsPublisherConfirms
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.IsPublisherConfirms
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/IConnectionFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsPublisherConfirms
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/IConnectionFactory.cs
    startLine: 44
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  summary: "\nGets a value indicating whether if publisher confirms are enabled\n"
  example: []
  syntax:
    content: bool IsPublisherConfirms { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsPublisherConfirms As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.IsPublisherConfirms*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.IsPublisherReturns
  commentId: P:Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.IsPublisherReturns
  id: IsPublisherReturns
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
  langs:
  - csharp
  - vb
  name: IsPublisherReturns
  nameWithType: IConnectionFactory.IsPublisherReturns
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.IsPublisherReturns
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/IConnectionFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsPublisherReturns
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/IConnectionFactory.cs
    startLine: 49
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  summary: "\nGets a value indicating whether if publisher returns are enabled\n"
  example: []
  syntax:
    content: bool IsPublisherReturns { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsPublisherReturns As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.IsPublisherReturns*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.AddConnectionListener(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionListener)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.AddConnectionListener(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionListener)
  id: AddConnectionListener(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionListener)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
  langs:
  - csharp
  - vb
  name: AddConnectionListener(IConnectionListener)
  nameWithType: IConnectionFactory.AddConnectionListener(IConnectionListener)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.AddConnectionListener(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionListener)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/IConnectionFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddConnectionListener
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/IConnectionFactory.cs
    startLine: 55
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  summary: "\nAdd a connection listener to this factory\n"
  example: []
  syntax:
    content: void AddConnectionListener(IConnectionListener connectionListener)
    parameters:
    - id: connectionListener
      type: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionListener
      description: the listener to add
    content.vb: Sub AddConnectionListener(connectionListener As IConnectionListener)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.AddConnectionListener*
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.RemoveConnectionListener(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionListener)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.RemoveConnectionListener(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionListener)
  id: RemoveConnectionListener(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionListener)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
  langs:
  - csharp
  - vb
  name: RemoveConnectionListener(IConnectionListener)
  nameWithType: IConnectionFactory.RemoveConnectionListener(IConnectionListener)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.RemoveConnectionListener(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionListener)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/IConnectionFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RemoveConnectionListener
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/IConnectionFactory.cs
    startLine: 62
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  summary: "\nRemove a connection facotry from this factory\n"
  example: []
  syntax:
    content: bool RemoveConnectionListener(IConnectionListener connectionListener)
    parameters:
    - id: connectionListener
      type: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionListener
      description: the listener to remove
    return:
      type: System.Boolean
      description: true if removed
    content.vb: Function RemoveConnectionListener(connectionListener As IConnectionListener) As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.RemoveConnectionListener*
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.ClearConnectionListeners
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.ClearConnectionListeners
  id: ClearConnectionListeners
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
  langs:
  - csharp
  - vb
  name: ClearConnectionListeners()
  nameWithType: IConnectionFactory.ClearConnectionListeners()
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.ClearConnectionListeners()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/IConnectionFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ClearConnectionListeners
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/IConnectionFactory.cs
    startLine: 67
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  summary: "\nRemove all connection listeners\n"
  example: []
  syntax:
    content: void ClearConnectionListeners()
    content.vb: Sub ClearConnectionListeners
  overload: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.ClearConnectionListeners*
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.CreateConnection
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.CreateConnection
  id: CreateConnection
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
  langs:
  - csharp
  - vb
  name: CreateConnection()
  nameWithType: IConnectionFactory.CreateConnection()
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.CreateConnection()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/IConnectionFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CreateConnection
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/IConnectionFactory.cs
    startLine: 73
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  summary: "\nCreate a connection\n"
  example: []
  syntax:
    content: IConnection CreateConnection()
    return:
      type: Steeltoe.Messaging.RabbitMQ.Connection.IConnection
      description: the connection if successful
    content.vb: Function CreateConnection As IConnection
  overload: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.CreateConnection*
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.Destroy
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.Destroy
  id: Destroy
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
  langs:
  - csharp
  - vb
  name: Destroy()
  nameWithType: IConnectionFactory.Destroy()
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.Destroy()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/IConnectionFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Destroy
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/IConnectionFactory.cs
    startLine: 79
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  summary: "\nClose underlying shared connection. The factory is still able to create new connections\nafter this call\n"
  example: []
  syntax:
    content: void Destroy()
    content.vb: Sub Destroy
  overload: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.Destroy*
references:
- uid: Steeltoe.Messaging.RabbitMQ.Connection
  commentId: N:Steeltoe.Messaging.RabbitMQ.Connection
  name: Steeltoe.Messaging.RabbitMQ.Connection
  nameWithType: Steeltoe.Messaging.RabbitMQ.Connection
  fullName: Steeltoe.Messaging.RabbitMQ.Connection
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Services.IServiceNameAware.ServiceName
  commentId: P:Steeltoe.Common.Services.IServiceNameAware.ServiceName
  parent: Steeltoe.Common.Services.IServiceNameAware
  name: ServiceName
  nameWithType: IServiceNameAware.ServiceName
  fullName: Steeltoe.Common.Services.IServiceNameAware.ServiceName
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Steeltoe.Common.Services.IServiceNameAware
  commentId: T:Steeltoe.Common.Services.IServiceNameAware
  parent: Steeltoe.Common.Services
  name: IServiceNameAware
  nameWithType: IServiceNameAware
  fullName: Steeltoe.Common.Services.IServiceNameAware
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Common.Services
  commentId: N:Steeltoe.Common.Services
  name: Steeltoe.Common.Services
  nameWithType: Steeltoe.Common.Services
  fullName: Steeltoe.Common.Services
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.Host*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.Host
  name: Host
  nameWithType: IConnectionFactory.Host
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.Host
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.Port*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.Port
  name: Port
  nameWithType: IConnectionFactory.Port
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.Port
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.VirtualHost*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.VirtualHost
  name: VirtualHost
  nameWithType: IConnectionFactory.VirtualHost
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.VirtualHost
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.Username*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.Username
  name: Username
  nameWithType: IConnectionFactory.Username
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.Username
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.PublisherConnectionFactory*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.PublisherConnectionFactory
  name: PublisherConnectionFactory
  nameWithType: IConnectionFactory.PublisherConnectionFactory
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.PublisherConnectionFactory
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
  commentId: T:Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
  parent: Steeltoe.Messaging.RabbitMQ.Connection
  name: IConnectionFactory
  nameWithType: IConnectionFactory
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.IsSimplePublisherConfirms*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.IsSimplePublisherConfirms
  name: IsSimplePublisherConfirms
  nameWithType: IConnectionFactory.IsSimplePublisherConfirms
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.IsSimplePublisherConfirms
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.IsPublisherConfirms*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.IsPublisherConfirms
  name: IsPublisherConfirms
  nameWithType: IConnectionFactory.IsPublisherConfirms
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.IsPublisherConfirms
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.IsPublisherReturns*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.IsPublisherReturns
  name: IsPublisherReturns
  nameWithType: IConnectionFactory.IsPublisherReturns
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.IsPublisherReturns
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.AddConnectionListener*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.AddConnectionListener
  name: AddConnectionListener
  nameWithType: IConnectionFactory.AddConnectionListener
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.AddConnectionListener
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionListener
  commentId: T:Steeltoe.Messaging.RabbitMQ.Connection.IConnectionListener
  parent: Steeltoe.Messaging.RabbitMQ.Connection
  name: IConnectionListener
  nameWithType: IConnectionListener
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionListener
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.RemoveConnectionListener*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.RemoveConnectionListener
  name: RemoveConnectionListener
  nameWithType: IConnectionFactory.RemoveConnectionListener
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.RemoveConnectionListener
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.ClearConnectionListeners*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.ClearConnectionListeners
  name: ClearConnectionListeners
  nameWithType: IConnectionFactory.ClearConnectionListeners
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.ClearConnectionListeners
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.CreateConnection*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.CreateConnection
  name: CreateConnection
  nameWithType: IConnectionFactory.CreateConnection
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.CreateConnection
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnection
  commentId: T:Steeltoe.Messaging.RabbitMQ.Connection.IConnection
  parent: Steeltoe.Messaging.RabbitMQ.Connection
  name: IConnection
  nameWithType: IConnection
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnection
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.Destroy*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.Destroy
  name: Destroy
  nameWithType: IConnectionFactory.Destroy
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory.Destroy
