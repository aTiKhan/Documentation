### YamlMime:ManagedReference
items:
- uid: Steeltoe.Discovery.Eureka.AppInfo.Application
  commentId: T:Steeltoe.Discovery.Eureka.AppInfo.Application
  id: Application
  parent: Steeltoe.Discovery.Eureka.AppInfo
  children:
  - Steeltoe.Discovery.Eureka.AppInfo.Application.Count
  - Steeltoe.Discovery.Eureka.AppInfo.Application.GetInstance(System.String)
  - Steeltoe.Discovery.Eureka.AppInfo.Application.Instances
  - Steeltoe.Discovery.Eureka.AppInfo.Application.Name
  - Steeltoe.Discovery.Eureka.AppInfo.Application.ToString
  langs:
  - csharp
  - vb
  name: Application
  nameWithType: Application
  fullName: Steeltoe.Discovery.Eureka.AppInfo.Application
  type: Class
  source:
    remote:
      path: src/Discovery/src/Eureka/AppInfo/Application.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Application
    path: ../Steeltoe/src/Discovery/src/Eureka/AppInfo/Application.cs
    startLine: 11
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.AppInfo
  syntax:
    content: public class Application
    content.vb: Public Class Application
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Discovery.Eureka.AppInfo.Application.Name
  commentId: P:Steeltoe.Discovery.Eureka.AppInfo.Application.Name
  id: Name
  parent: Steeltoe.Discovery.Eureka.AppInfo.Application
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Application.Name
  fullName: Steeltoe.Discovery.Eureka.AppInfo.Application.Name
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/AppInfo/Application.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Name
    path: ../Steeltoe/src/Discovery/src/Eureka/AppInfo/Application.cs
    startLine: 13
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.AppInfo
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: Steeltoe.Discovery.Eureka.AppInfo.Application.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Discovery.Eureka.AppInfo.Application.Count
  commentId: P:Steeltoe.Discovery.Eureka.AppInfo.Application.Count
  id: Count
  parent: Steeltoe.Discovery.Eureka.AppInfo.Application
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: Application.Count
  fullName: Steeltoe.Discovery.Eureka.AppInfo.Application.Count
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/AppInfo/Application.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Count
    path: ../Steeltoe/src/Discovery/src/Eureka/AppInfo/Application.cs
    startLine: 15
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.AppInfo
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: Steeltoe.Discovery.Eureka.AppInfo.Application.Count*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Discovery.Eureka.AppInfo.Application.Instances
  commentId: P:Steeltoe.Discovery.Eureka.AppInfo.Application.Instances
  id: Instances
  parent: Steeltoe.Discovery.Eureka.AppInfo.Application
  langs:
  - csharp
  - vb
  name: Instances
  nameWithType: Application.Instances
  fullName: Steeltoe.Discovery.Eureka.AppInfo.Application.Instances
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/AppInfo/Application.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Instances
    path: ../Steeltoe/src/Discovery/src/Eureka/AppInfo/Application.cs
    startLine: 17
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.AppInfo
  syntax:
    content: public IList<InstanceInfo> Instances { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo}
    content.vb: Public ReadOnly Property Instances As IList(Of InstanceInfo)
  overload: Steeltoe.Discovery.Eureka.AppInfo.Application.Instances*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Discovery.Eureka.AppInfo.Application.GetInstance(System.String)
  commentId: M:Steeltoe.Discovery.Eureka.AppInfo.Application.GetInstance(System.String)
  id: GetInstance(System.String)
  parent: Steeltoe.Discovery.Eureka.AppInfo.Application
  langs:
  - csharp
  - vb
  name: GetInstance(String)
  nameWithType: Application.GetInstance(String)
  fullName: Steeltoe.Discovery.Eureka.AppInfo.Application.GetInstance(System.String)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Eureka/AppInfo/Application.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetInstance
    path: ../Steeltoe/src/Discovery/src/Eureka/AppInfo/Application.cs
    startLine: 19
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.AppInfo
  syntax:
    content: public InstanceInfo GetInstance(string instanceId)
    parameters:
    - id: instanceId
      type: System.String
    return:
      type: Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
    content.vb: Public Function GetInstance(instanceId As String) As InstanceInfo
  overload: Steeltoe.Discovery.Eureka.AppInfo.Application.GetInstance*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Eureka.AppInfo.Application.ToString
  commentId: M:Steeltoe.Discovery.Eureka.AppInfo.Application.ToString
  id: ToString
  parent: Steeltoe.Discovery.Eureka.AppInfo.Application
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Application.ToString()
  fullName: Steeltoe.Discovery.Eureka.AppInfo.Application.ToString()
  type: Method
  source:
    remote:
      path: src/Discovery/src/Eureka/AppInfo/Application.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ToString
    path: ../Steeltoe/src/Discovery/src/Eureka/AppInfo/Application.cs
    startLine: 25
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.AppInfo
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Steeltoe.Discovery.Eureka.AppInfo.Application.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Steeltoe.Discovery.Eureka.AppInfo
  commentId: N:Steeltoe.Discovery.Eureka.AppInfo
  name: Steeltoe.Discovery.Eureka.AppInfo
  nameWithType: Steeltoe.Discovery.Eureka.AppInfo
  fullName: Steeltoe.Discovery.Eureka.AppInfo
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Discovery.Eureka.AppInfo.Application.Name*
  commentId: Overload:Steeltoe.Discovery.Eureka.AppInfo.Application.Name
  name: Name
  nameWithType: Application.Name
  fullName: Steeltoe.Discovery.Eureka.AppInfo.Application.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Discovery.Eureka.AppInfo.Application.Count*
  commentId: Overload:Steeltoe.Discovery.Eureka.AppInfo.Application.Count
  name: Count
  nameWithType: Application.Count
  fullName: Steeltoe.Discovery.Eureka.AppInfo.Application.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Steeltoe.Discovery.Eureka.AppInfo.Application.Instances*
  commentId: Overload:Steeltoe.Discovery.Eureka.AppInfo.Application.Instances
  name: Instances
  nameWithType: Application.Instances
  fullName: Steeltoe.Discovery.Eureka.AppInfo.Application.Instances
- uid: System.Collections.Generic.IList{Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo}
  commentId: T:System.Collections.Generic.IList{Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<InstanceInfo>
  nameWithType: IList<InstanceInfo>
  fullName: System.Collections.Generic.IList<Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo>
  nameWithType.vb: IList(Of InstanceInfo)
  fullName.vb: System.Collections.Generic.IList(Of Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo)
  name.vb: IList(Of InstanceInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
    name: InstanceInfo
    nameWithType: InstanceInfo
    fullName: Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
    name: InstanceInfo
    nameWithType: InstanceInfo
    fullName: Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Discovery.Eureka.AppInfo.Application.GetInstance*
  commentId: Overload:Steeltoe.Discovery.Eureka.AppInfo.Application.GetInstance
  name: GetInstance
  nameWithType: Application.GetInstance
  fullName: Steeltoe.Discovery.Eureka.AppInfo.Application.GetInstance
- uid: Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
  commentId: T:Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
  parent: Steeltoe.Discovery.Eureka.AppInfo
  name: InstanceInfo
  nameWithType: InstanceInfo
  fullName: Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Eureka.AppInfo.Application.ToString*
  commentId: Overload:Steeltoe.Discovery.Eureka.AppInfo.Application.ToString
  name: ToString
  nameWithType: Application.ToString
  fullName: Steeltoe.Discovery.Eureka.AppInfo.Application.ToString
