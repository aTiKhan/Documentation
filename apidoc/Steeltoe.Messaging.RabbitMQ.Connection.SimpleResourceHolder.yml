### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder
  commentId: T:Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder
  id: SimpleResourceHolder
  parent: Steeltoe.Messaging.RabbitMQ.Connection
  children:
  - Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Bind(System.Object,System.Object,Microsoft.Extensions.Logging.ILogger)
  - Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Clear
  - Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Get(System.Object,Microsoft.Extensions.Logging.ILogger)
  - Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.GetResources
  - Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Has(System.Object,Microsoft.Extensions.Logging.ILogger)
  - Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Pop(System.Object,Microsoft.Extensions.Logging.ILogger)
  - Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Push(System.Object,System.Object,Microsoft.Extensions.Logging.ILogger)
  - Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Unbind(System.Object,Microsoft.Extensions.Logging.ILogger)
  - Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.UnbindIfPossible(System.Object,Microsoft.Extensions.Logging.ILogger)
  langs:
  - csharp
  - vb
  name: SimpleResourceHolder
  nameWithType: SimpleResourceHolder
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/SimpleResourceHolder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SimpleResourceHolder
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/SimpleResourceHolder.cs
    startLine: 12
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public static class SimpleResourceHolder
    content.vb: Public Module SimpleResourceHolder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.GetResources
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.GetResources
  id: GetResources
  parent: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder
  langs:
  - csharp
  - vb
  name: GetResources()
  nameWithType: SimpleResourceHolder.GetResources()
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.GetResources()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/SimpleResourceHolder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetResources
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/SimpleResourceHolder.cs
    startLine: 24
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public static IDictionary<object, object> GetResources()
    return:
      type: System.Collections.Generic.IDictionary{System.Object,System.Object}
    content.vb: Public Shared Function GetResources As IDictionary(Of Object, Object)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.GetResources*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Has(System.Object,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Has(System.Object,Microsoft.Extensions.Logging.ILogger)
  id: Has(System.Object,Microsoft.Extensions.Logging.ILogger)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder
  langs:
  - csharp
  - vb
  name: Has(Object, ILogger)
  nameWithType: SimpleResourceHolder.Has(Object, ILogger)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Has(System.Object, Microsoft.Extensions.Logging.ILogger)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/SimpleResourceHolder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Has
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/SimpleResourceHolder.cs
    startLine: 35
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public static bool Has(object key, ILogger logger = null)
    parameters:
    - id: key
      type: System.Object
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    return:
      type: System.Boolean
    content.vb: Public Shared Function Has(key As Object, logger As ILogger = Nothing) As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Has*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Get(System.Object,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Get(System.Object,Microsoft.Extensions.Logging.ILogger)
  id: Get(System.Object,Microsoft.Extensions.Logging.ILogger)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder
  langs:
  - csharp
  - vb
  name: Get(Object, ILogger)
  nameWithType: SimpleResourceHolder.Get(Object, ILogger)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Get(System.Object, Microsoft.Extensions.Logging.ILogger)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/SimpleResourceHolder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Get
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/SimpleResourceHolder.cs
    startLine: 41
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public static object Get(object key, ILogger logger = null)
    parameters:
    - id: key
      type: System.Object
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    return:
      type: System.Object
    content.vb: Public Shared Function Get(key As Object, logger As ILogger = Nothing) As Object
  overload: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Get*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Bind(System.Object,System.Object,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Bind(System.Object,System.Object,Microsoft.Extensions.Logging.ILogger)
  id: Bind(System.Object,System.Object,Microsoft.Extensions.Logging.ILogger)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder
  langs:
  - csharp
  - vb
  name: Bind(Object, Object, ILogger)
  nameWithType: SimpleResourceHolder.Bind(Object, Object, ILogger)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Bind(System.Object, System.Object, Microsoft.Extensions.Logging.ILogger)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/SimpleResourceHolder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Bind
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/SimpleResourceHolder.cs
    startLine: 52
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public static void Bind(object key, object value, ILogger logger = null)
    parameters:
    - id: key
      type: System.Object
    - id: value
      type: System.Object
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Public Shared Sub Bind(key As Object, value As Object, logger As ILogger = Nothing)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Bind*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Push(System.Object,System.Object,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Push(System.Object,System.Object,Microsoft.Extensions.Logging.ILogger)
  id: Push(System.Object,System.Object,Microsoft.Extensions.Logging.ILogger)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder
  langs:
  - csharp
  - vb
  name: Push(Object, Object, ILogger)
  nameWithType: SimpleResourceHolder.Push(Object, Object, ILogger)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Push(System.Object, System.Object, Microsoft.Extensions.Logging.ILogger)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/SimpleResourceHolder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Push
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/SimpleResourceHolder.cs
    startLine: 78
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public static void Push(object key, object value, ILogger logger = null)
    parameters:
    - id: key
      type: System.Object
    - id: value
      type: System.Object
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Public Shared Sub Push(key As Object, value As Object, logger As ILogger = Nothing)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Push*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Pop(System.Object,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Pop(System.Object,Microsoft.Extensions.Logging.ILogger)
  id: Pop(System.Object,Microsoft.Extensions.Logging.ILogger)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder
  langs:
  - csharp
  - vb
  name: Pop(Object, ILogger)
  nameWithType: SimpleResourceHolder.Pop(Object, ILogger)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Pop(System.Object, Microsoft.Extensions.Logging.ILogger)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/SimpleResourceHolder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Pop
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/SimpleResourceHolder.cs
    startLine: 106
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public static object Pop(object key, ILogger logger = null)
    parameters:
    - id: key
      type: System.Object
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    return:
      type: System.Object
    content.vb: Public Shared Function Pop(key As Object, logger As ILogger = Nothing) As Object
  overload: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Pop*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Unbind(System.Object,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Unbind(System.Object,Microsoft.Extensions.Logging.ILogger)
  id: Unbind(System.Object,Microsoft.Extensions.Logging.ILogger)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder
  langs:
  - csharp
  - vb
  name: Unbind(Object, ILogger)
  nameWithType: SimpleResourceHolder.Unbind(Object, ILogger)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Unbind(System.Object, Microsoft.Extensions.Logging.ILogger)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/SimpleResourceHolder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Unbind
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/SimpleResourceHolder.cs
    startLine: 131
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public static object Unbind(object key, ILogger logger = null)
    parameters:
    - id: key
      type: System.Object
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    return:
      type: System.Object
    content.vb: Public Shared Function Unbind(key As Object, logger As ILogger = Nothing) As Object
  overload: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Unbind*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.UnbindIfPossible(System.Object,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.UnbindIfPossible(System.Object,Microsoft.Extensions.Logging.ILogger)
  id: UnbindIfPossible(System.Object,Microsoft.Extensions.Logging.ILogger)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder
  langs:
  - csharp
  - vb
  name: UnbindIfPossible(Object, ILogger)
  nameWithType: SimpleResourceHolder.UnbindIfPossible(Object, ILogger)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.UnbindIfPossible(System.Object, Microsoft.Extensions.Logging.ILogger)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/SimpleResourceHolder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: UnbindIfPossible
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/SimpleResourceHolder.cs
    startLine: 142
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public static object UnbindIfPossible(object key, ILogger logger = null)
    parameters:
    - id: key
      type: System.Object
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    return:
      type: System.Object
    content.vb: Public Shared Function UnbindIfPossible(key As Object, logger As ILogger = Nothing) As Object
  overload: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.UnbindIfPossible*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Clear
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Clear
  id: Clear
  parent: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: SimpleResourceHolder.Clear()
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Clear()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/SimpleResourceHolder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Clear
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/SimpleResourceHolder.cs
    startLine: 166
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public static void Clear()
    content.vb: Public Shared Sub Clear
  overload: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Clear*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Steeltoe.Messaging.RabbitMQ.Connection
  commentId: N:Steeltoe.Messaging.RabbitMQ.Connection
  name: Steeltoe.Messaging.RabbitMQ.Connection
  nameWithType: Steeltoe.Messaging.RabbitMQ.Connection
  fullName: Steeltoe.Messaging.RabbitMQ.Connection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.GetResources*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.GetResources
  name: GetResources
  nameWithType: SimpleResourceHolder.GetResources
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.GetResources
- uid: System.Collections.Generic.IDictionary{System.Object,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.Object,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<Object, Object>
  nameWithType: IDictionary<Object, Object>
  fullName: System.Collections.Generic.IDictionary<System.Object, System.Object>
  nameWithType.vb: IDictionary(Of Object, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.Object, System.Object)
  name.vb: IDictionary(Of Object, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Has*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Has
  name: Has
  nameWithType: SimpleResourceHolder.Has
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Has
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Get*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Get
  name: Get
  nameWithType: SimpleResourceHolder.Get
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Get
- uid: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Bind*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Bind
  name: Bind
  nameWithType: SimpleResourceHolder.Bind
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Bind
- uid: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Push*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Push
  name: Push
  nameWithType: SimpleResourceHolder.Push
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Push
- uid: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Pop*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Pop
  name: Pop
  nameWithType: SimpleResourceHolder.Pop
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Pop
- uid: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Unbind*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Unbind
  name: Unbind
  nameWithType: SimpleResourceHolder.Unbind
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Unbind
- uid: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.UnbindIfPossible*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.UnbindIfPossible
  name: UnbindIfPossible
  nameWithType: SimpleResourceHolder.UnbindIfPossible
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.UnbindIfPossible
- uid: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Clear*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Clear
  name: Clear
  nameWithType: SimpleResourceHolder.Clear
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.SimpleResourceHolder.Clear
