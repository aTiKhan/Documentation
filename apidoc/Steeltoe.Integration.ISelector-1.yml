### YamlMime:ManagedReference
items:
- uid: Steeltoe.Integration.ISelector`1
  commentId: T:Steeltoe.Integration.ISelector`1
  id: ISelector`1
  parent: Steeltoe.Integration
  children:
  - Steeltoe.Integration.ISelector`1.Accept(`0)
  langs:
  - csharp
  - vb
  name: ISelector<T>
  nameWithType: ISelector<T>
  fullName: Steeltoe.Integration.ISelector<T>
  type: Interface
  source:
    remote:
      path: src/Integration/src/Abstractions/ISelector.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ISelector
    path: ../Steeltoe/src/Integration/src/Abstractions/ISelector.cs
    startLine: 10
  assemblies:
  - Steeltoe.Integration.Abstractions
  namespace: Steeltoe.Integration
  summary: "\nTODO: See if this can be internal\n"
  example: []
  syntax:
    content: public interface ISelector<in T>
    typeParameters:
    - id: T
      description: input tye
    content.vb: Public Interface ISelector(Of In T)
  nameWithType.vb: ISelector(Of T)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Steeltoe.Integration.ISelector(Of T)
  name.vb: ISelector(Of T)
- uid: Steeltoe.Integration.ISelector`1.Accept(`0)
  commentId: M:Steeltoe.Integration.ISelector`1.Accept(`0)
  id: Accept(`0)
  parent: Steeltoe.Integration.ISelector`1
  langs:
  - csharp
  - vb
  name: Accept(T)
  nameWithType: ISelector<T>.Accept(T)
  fullName: Steeltoe.Integration.ISelector<T>.Accept(T)
  type: Method
  source:
    remote:
      path: src/Integration/src/Abstractions/ISelector.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Accept
    path: ../Steeltoe/src/Integration/src/Abstractions/ISelector.cs
    startLine: 12
  assemblies:
  - Steeltoe.Integration.Abstractions
  namespace: Steeltoe.Integration
  syntax:
    content: bool Accept(T source)
    parameters:
    - id: source
      type: '{T}'
    return:
      type: System.Boolean
    content.vb: Function Accept(source As T) As Boolean
  overload: Steeltoe.Integration.ISelector`1.Accept*
  nameWithType.vb: ISelector(Of T).Accept(T)
  fullName.vb: Steeltoe.Integration.ISelector(Of T).Accept(T)
references:
- uid: Steeltoe.Integration
  commentId: N:Steeltoe.Integration
  name: Steeltoe.Integration
  nameWithType: Steeltoe.Integration
  fullName: Steeltoe.Integration
- uid: Steeltoe.Integration.ISelector`1.Accept*
  commentId: Overload:Steeltoe.Integration.ISelector`1.Accept
  name: Accept
  nameWithType: ISelector<T>.Accept
  fullName: Steeltoe.Integration.ISelector<T>.Accept
  nameWithType.vb: ISelector(Of T).Accept
  fullName.vb: Steeltoe.Integration.ISelector(Of T).Accept
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
