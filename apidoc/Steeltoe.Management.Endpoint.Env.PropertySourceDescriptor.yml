### YamlMime:ManagedReference
items:
- uid: Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor
  commentId: T:Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor
  id: PropertySourceDescriptor
  parent: Steeltoe.Management.Endpoint.Env
  children:
  - Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor})
  - Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor.Name
  - Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor.Properties
  langs:
  - csharp
  - vb
  name: PropertySourceDescriptor
  nameWithType: PropertySourceDescriptor
  fullName: Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor
  type: Class
  source:
    remote:
      path: src/Management/src/EndpointBase/Env/PropertySourceDescriptor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: PropertySourceDescriptor
    path: ../Steeltoe/src/Management/src/EndpointBase/Env/PropertySourceDescriptor.cs
    startLine: 9
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Env
  syntax:
    content: public class PropertySourceDescriptor
    content.vb: Public Class PropertySourceDescriptor
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor})
  commentId: M:Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor})
  id: '#ctor(System.String,System.Collections.Generic.IDictionary{System.String,Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor})'
  parent: Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor
  langs:
  - csharp
  - vb
  name: PropertySourceDescriptor(String, IDictionary<String, PropertyValueDescriptor>)
  nameWithType: PropertySourceDescriptor.PropertySourceDescriptor(String, IDictionary<String, PropertyValueDescriptor>)
  fullName: Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor.PropertySourceDescriptor(System.String, System.Collections.Generic.IDictionary<System.String, Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor>)
  type: Constructor
  source:
    remote:
      path: src/Management/src/EndpointBase/Env/PropertySourceDescriptor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Management/src/EndpointBase/Env/PropertySourceDescriptor.cs
    startLine: 11
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Env
  syntax:
    content: public PropertySourceDescriptor(string name, IDictionary<string, PropertyValueDescriptor> properties)
    parameters:
    - id: name
      type: System.String
    - id: properties
      type: System.Collections.Generic.IDictionary{System.String,Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor}
    content.vb: Public Sub New(name As String, properties As IDictionary(Of String, PropertyValueDescriptor))
  overload: Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor.#ctor*
  nameWithType.vb: PropertySourceDescriptor.PropertySourceDescriptor(String, IDictionary(Of String, PropertyValueDescriptor))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor.PropertySourceDescriptor(System.String, System.Collections.Generic.IDictionary(Of System.String, Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor))
  name.vb: PropertySourceDescriptor(String, IDictionary(Of String, PropertyValueDescriptor))
- uid: Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor.Name
  commentId: P:Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor.Name
  id: Name
  parent: Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: PropertySourceDescriptor.Name
  fullName: Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor.Name
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointBase/Env/PropertySourceDescriptor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Name
    path: ../Steeltoe/src/Management/src/EndpointBase/Env/PropertySourceDescriptor.cs
    startLine: 17
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Env
  syntax:
    content: >-
      [JsonPropertyName("name")]

      public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("name")>

      Public ReadOnly Property Name As String
  overload: Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor.Name*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: name
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor.Properties
  commentId: P:Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor.Properties
  id: Properties
  parent: Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: PropertySourceDescriptor.Properties
  fullName: Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor.Properties
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointBase/Env/PropertySourceDescriptor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Properties
    path: ../Steeltoe/src/Management/src/EndpointBase/Env/PropertySourceDescriptor.cs
    startLine: 20
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Env
  syntax:
    content: >-
      [JsonPropertyName("properties")]

      public IDictionary<string, PropertyValueDescriptor> Properties { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor}
    content.vb: >-
      <JsonPropertyName("properties")>

      Public ReadOnly Property Properties As IDictionary(Of String, PropertyValueDescriptor)
  overload: Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor.Properties*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: properties
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Steeltoe.Management.Endpoint.Env
  commentId: N:Steeltoe.Management.Endpoint.Env
  name: Steeltoe.Management.Endpoint.Env
  nameWithType: Steeltoe.Management.Endpoint.Env
  fullName: Steeltoe.Management.Endpoint.Env
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor.#ctor*
  commentId: Overload:Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor.#ctor
  name: PropertySourceDescriptor
  nameWithType: PropertySourceDescriptor.PropertySourceDescriptor
  fullName: Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor.PropertySourceDescriptor
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor}
  commentId: T:System.Collections.Generic.IDictionary{System.String,Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, PropertyValueDescriptor>
  nameWithType: IDictionary<String, PropertyValueDescriptor>
  fullName: System.Collections.Generic.IDictionary<System.String, Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor>
  nameWithType.vb: IDictionary(Of String, PropertyValueDescriptor)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor)
  name.vb: IDictionary(Of String, PropertyValueDescriptor)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor
    name: PropertyValueDescriptor
    nameWithType: PropertyValueDescriptor
    fullName: Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor
    name: PropertyValueDescriptor
    nameWithType: PropertyValueDescriptor
    fullName: Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor.Name*
  commentId: Overload:Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor.Name
  name: Name
  nameWithType: PropertySourceDescriptor.Name
  fullName: Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor.Name
- uid: Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor.Properties*
  commentId: Overload:Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor.Properties
  name: Properties
  nameWithType: PropertySourceDescriptor.Properties
  fullName: Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor.Properties
