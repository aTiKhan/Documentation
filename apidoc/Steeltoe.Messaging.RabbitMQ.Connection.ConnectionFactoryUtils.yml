### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils
  commentId: T:Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils
  id: ConnectionFactoryUtils
  parent: Steeltoe.Messaging.RabbitMQ.Connection
  children:
  - Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.BindResourceToTransaction(Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder,Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,System.Boolean)
  - Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.CreateConnection(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,System.Boolean)
  - Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.GetTransactionalResourceHolder(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,System.Boolean)
  - Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.GetTransactionalResourceHolder(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,System.Boolean,System.Boolean)
  - Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.IsChannelTransactional(RabbitMQ.Client.IModel,Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory)
  - Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.RegisterDeliveryTag(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,RabbitMQ.Client.IModel,System.UInt64)
  - Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.ReleaseResources(Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder)
  langs:
  - csharp
  - vb
  name: ConnectionFactoryUtils
  nameWithType: ConnectionFactoryUtils
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/ConnectionFactoryUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConnectionFactoryUtils
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/ConnectionFactoryUtils.cs
    startLine: 11
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public static class ConnectionFactoryUtils
    content.vb: Public Module ConnectionFactoryUtils
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.GetTransactionalResourceHolder(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,System.Boolean,System.Boolean)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.GetTransactionalResourceHolder(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,System.Boolean,System.Boolean)
  id: GetTransactionalResourceHolder(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,System.Boolean,System.Boolean)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils
  langs:
  - csharp
  - vb
  name: GetTransactionalResourceHolder(IConnectionFactory, Boolean, Boolean)
  nameWithType: ConnectionFactoryUtils.GetTransactionalResourceHolder(IConnectionFactory, Boolean, Boolean)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.GetTransactionalResourceHolder(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/ConnectionFactoryUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetTransactionalResourceHolder
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/ConnectionFactoryUtils.cs
    startLine: 13
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public static RabbitResourceHolder GetTransactionalResourceHolder(IConnectionFactory connectionFactory, bool synchedLocalTransactionAllowed, bool publisherConnectionIfPossible)
    parameters:
    - id: connectionFactory
      type: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
    - id: synchedLocalTransactionAllowed
      type: System.Boolean
    - id: publisherConnectionIfPossible
      type: System.Boolean
    return:
      type: Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder
    content.vb: Public Shared Function GetTransactionalResourceHolder(connectionFactory As IConnectionFactory, synchedLocalTransactionAllowed As Boolean, publisherConnectionIfPossible As Boolean) As RabbitResourceHolder
  overload: Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.GetTransactionalResourceHolder*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.GetTransactionalResourceHolder(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,System.Boolean)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.GetTransactionalResourceHolder(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,System.Boolean)
  id: GetTransactionalResourceHolder(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,System.Boolean)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils
  langs:
  - csharp
  - vb
  name: GetTransactionalResourceHolder(IConnectionFactory, Boolean)
  nameWithType: ConnectionFactoryUtils.GetTransactionalResourceHolder(IConnectionFactory, Boolean)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.GetTransactionalResourceHolder(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/ConnectionFactoryUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetTransactionalResourceHolder
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/ConnectionFactoryUtils.cs
    startLine: 18
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public static RabbitResourceHolder GetTransactionalResourceHolder(IConnectionFactory connectionFactory, bool synchedLocalTransactionAllowed)
    parameters:
    - id: connectionFactory
      type: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
    - id: synchedLocalTransactionAllowed
      type: System.Boolean
    return:
      type: Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder
    content.vb: Public Shared Function GetTransactionalResourceHolder(connectionFactory As IConnectionFactory, synchedLocalTransactionAllowed As Boolean) As RabbitResourceHolder
  overload: Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.GetTransactionalResourceHolder*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.IsChannelTransactional(RabbitMQ.Client.IModel,Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.IsChannelTransactional(RabbitMQ.Client.IModel,Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory)
  id: IsChannelTransactional(RabbitMQ.Client.IModel,Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils
  langs:
  - csharp
  - vb
  name: IsChannelTransactional(IModel, IConnectionFactory)
  nameWithType: ConnectionFactoryUtils.IsChannelTransactional(IModel, IConnectionFactory)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.IsChannelTransactional(RabbitMQ.Client.IModel, Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/ConnectionFactoryUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsChannelTransactional
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/ConnectionFactoryUtils.cs
    startLine: 23
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public static bool IsChannelTransactional(IModel channel, IConnectionFactory connectionFactory)
    parameters:
    - id: channel
      type: RabbitMQ.Client.IModel
    - id: connectionFactory
      type: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsChannelTransactional(channel As IModel, connectionFactory As IConnectionFactory) As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.IsChannelTransactional*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.ReleaseResources(Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.ReleaseResources(Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder)
  id: ReleaseResources(Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils
  langs:
  - csharp
  - vb
  name: ReleaseResources(RabbitResourceHolder)
  nameWithType: ConnectionFactoryUtils.ReleaseResources(RabbitResourceHolder)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.ReleaseResources(Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/ConnectionFactoryUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReleaseResources
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/ConnectionFactoryUtils.cs
    startLine: 34
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public static void ReleaseResources(RabbitResourceHolder resourceHolder)
    parameters:
    - id: resourceHolder
      type: Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder
    content.vb: Public Shared Sub ReleaseResources(resourceHolder As RabbitResourceHolder)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.ReleaseResources*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.BindResourceToTransaction(Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder,Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,System.Boolean)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.BindResourceToTransaction(Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder,Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,System.Boolean)
  id: BindResourceToTransaction(Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder,Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,System.Boolean)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils
  langs:
  - csharp
  - vb
  name: BindResourceToTransaction(RabbitResourceHolder, IConnectionFactory, Boolean)
  nameWithType: ConnectionFactoryUtils.BindResourceToTransaction(RabbitResourceHolder, IConnectionFactory, Boolean)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.BindResourceToTransaction(Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder, Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/ConnectionFactoryUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: BindResourceToTransaction
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/ConnectionFactoryUtils.cs
    startLine: 45
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public static RabbitResourceHolder BindResourceToTransaction(RabbitResourceHolder resourceHolder, IConnectionFactory connectionFactory, bool synched)
    parameters:
    - id: resourceHolder
      type: Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder
    - id: connectionFactory
      type: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
    - id: synched
      type: System.Boolean
    return:
      type: Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder
    content.vb: Public Shared Function BindResourceToTransaction(resourceHolder As RabbitResourceHolder, connectionFactory As IConnectionFactory, synched As Boolean) As RabbitResourceHolder
  overload: Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.BindResourceToTransaction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.CreateConnection(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,System.Boolean)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.CreateConnection(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,System.Boolean)
  id: CreateConnection(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,System.Boolean)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils
  langs:
  - csharp
  - vb
  name: CreateConnection(IConnectionFactory, Boolean)
  nameWithType: ConnectionFactoryUtils.CreateConnection(IConnectionFactory, Boolean)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.CreateConnection(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/ConnectionFactoryUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CreateConnection
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/ConnectionFactoryUtils.cs
    startLine: 62
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public static IConnection CreateConnection(IConnectionFactory connectionFactory, bool publisherConnectionIfPossible)
    parameters:
    - id: connectionFactory
      type: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
    - id: publisherConnectionIfPossible
      type: System.Boolean
    return:
      type: Steeltoe.Messaging.RabbitMQ.Connection.IConnection
    content.vb: Public Shared Function CreateConnection(connectionFactory As IConnectionFactory, publisherConnectionIfPossible As Boolean) As IConnection
  overload: Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.CreateConnection*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.RegisterDeliveryTag(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,RabbitMQ.Client.IModel,System.UInt64)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.RegisterDeliveryTag(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,RabbitMQ.Client.IModel,System.UInt64)
  id: RegisterDeliveryTag(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,RabbitMQ.Client.IModel,System.UInt64)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils
  langs:
  - csharp
  - vb
  name: RegisterDeliveryTag(IConnectionFactory, IModel, UInt64)
  nameWithType: ConnectionFactoryUtils.RegisterDeliveryTag(IConnectionFactory, IModel, UInt64)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.RegisterDeliveryTag(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory, RabbitMQ.Client.IModel, System.UInt64)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/ConnectionFactoryUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RegisterDeliveryTag
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/ConnectionFactoryUtils.cs
    startLine: 76
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public static void RegisterDeliveryTag(IConnectionFactory connectionFactory, IModel channel, ulong tag)
    parameters:
    - id: connectionFactory
      type: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
    - id: channel
      type: RabbitMQ.Client.IModel
    - id: tag
      type: System.UInt64
    content.vb: Public Shared Sub RegisterDeliveryTag(connectionFactory As IConnectionFactory, channel As IModel, tag As ULong)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.RegisterDeliveryTag*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Steeltoe.Messaging.RabbitMQ.Connection
  commentId: N:Steeltoe.Messaging.RabbitMQ.Connection
  name: Steeltoe.Messaging.RabbitMQ.Connection
  nameWithType: Steeltoe.Messaging.RabbitMQ.Connection
  fullName: Steeltoe.Messaging.RabbitMQ.Connection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.GetTransactionalResourceHolder*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.GetTransactionalResourceHolder
  name: GetTransactionalResourceHolder
  nameWithType: ConnectionFactoryUtils.GetTransactionalResourceHolder
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.GetTransactionalResourceHolder
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
  commentId: T:Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
  parent: Steeltoe.Messaging.RabbitMQ.Connection
  name: IConnectionFactory
  nameWithType: IConnectionFactory
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder
  commentId: T:Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder
  parent: Steeltoe.Messaging.RabbitMQ.Connection
  name: RabbitResourceHolder
  nameWithType: RabbitResourceHolder
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder
- uid: Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.IsChannelTransactional*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.IsChannelTransactional
  name: IsChannelTransactional
  nameWithType: ConnectionFactoryUtils.IsChannelTransactional
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.IsChannelTransactional
- uid: RabbitMQ.Client.IModel
  commentId: T:RabbitMQ.Client.IModel
  parent: RabbitMQ.Client
  isExternal: true
  name: IModel
  nameWithType: IModel
  fullName: RabbitMQ.Client.IModel
- uid: RabbitMQ.Client
  commentId: N:RabbitMQ.Client
  isExternal: true
  name: RabbitMQ.Client
  nameWithType: RabbitMQ.Client
  fullName: RabbitMQ.Client
- uid: Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.ReleaseResources*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.ReleaseResources
  name: ReleaseResources
  nameWithType: ConnectionFactoryUtils.ReleaseResources
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.ReleaseResources
- uid: Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.BindResourceToTransaction*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.BindResourceToTransaction
  name: BindResourceToTransaction
  nameWithType: ConnectionFactoryUtils.BindResourceToTransaction
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.BindResourceToTransaction
- uid: Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.CreateConnection*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.CreateConnection
  name: CreateConnection
  nameWithType: ConnectionFactoryUtils.CreateConnection
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.CreateConnection
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnection
  commentId: T:Steeltoe.Messaging.RabbitMQ.Connection.IConnection
  parent: Steeltoe.Messaging.RabbitMQ.Connection
  name: IConnection
  nameWithType: IConnection
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnection
- uid: Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.RegisterDeliveryTag*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.RegisterDeliveryTag
  name: RegisterDeliveryTag
  nameWithType: ConnectionFactoryUtils.RegisterDeliveryTag
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.ConnectionFactoryUtils.RegisterDeliveryTag
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
