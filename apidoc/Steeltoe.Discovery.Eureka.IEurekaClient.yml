### YamlMime:ManagedReference
items:
- uid: Steeltoe.Discovery.Eureka.IEurekaClient
  commentId: T:Steeltoe.Discovery.Eureka.IEurekaClient
  id: IEurekaClient
  parent: Steeltoe.Discovery.Eureka
  children:
  - Steeltoe.Discovery.Eureka.IEurekaClient.GetInstancesByVipAddress(System.String,System.Boolean)
  - Steeltoe.Discovery.Eureka.IEurekaClient.ShutdownAsync
  langs:
  - csharp
  - vb
  name: IEurekaClient
  nameWithType: IEurekaClient
  fullName: Steeltoe.Discovery.Eureka.IEurekaClient
  type: Interface
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IEurekaClient
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaClient.cs
    startLine: 10
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: 'public interface IEurekaClient : ILookupService'
    content.vb: >-
      Public Interface IEurekaClient

          Inherits ILookupService
  inheritedMembers:
  - Steeltoe.Discovery.Eureka.ILookupService.Applications
  - Steeltoe.Discovery.Eureka.ILookupService.GetApplication(System.String)
  - Steeltoe.Discovery.Eureka.ILookupService.GetInstanceById(System.String)
  - Steeltoe.Discovery.Eureka.ILookupService.GetNextServerFromEureka(System.String,System.Boolean)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Steeltoe.Discovery.Eureka.IEurekaClient.GetInstancesByVipAddress(System.String,System.Boolean)
  commentId: M:Steeltoe.Discovery.Eureka.IEurekaClient.GetInstancesByVipAddress(System.String,System.Boolean)
  id: GetInstancesByVipAddress(System.String,System.Boolean)
  parent: Steeltoe.Discovery.Eureka.IEurekaClient
  langs:
  - csharp
  - vb
  name: GetInstancesByVipAddress(String, Boolean)
  nameWithType: IEurekaClient.GetInstancesByVipAddress(String, Boolean)
  fullName: Steeltoe.Discovery.Eureka.IEurekaClient.GetInstancesByVipAddress(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetInstancesByVipAddress
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaClient.cs
    startLine: 12
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: IList<InstanceInfo> GetInstancesByVipAddress(string vipAddress, bool secure)
    parameters:
    - id: vipAddress
      type: System.String
    - id: secure
      type: System.Boolean
    return:
      type: System.Collections.Generic.IList{Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo}
    content.vb: Function GetInstancesByVipAddress(vipAddress As String, secure As Boolean) As IList(Of InstanceInfo)
  overload: Steeltoe.Discovery.Eureka.IEurekaClient.GetInstancesByVipAddress*
- uid: Steeltoe.Discovery.Eureka.IEurekaClient.ShutdownAsync
  commentId: M:Steeltoe.Discovery.Eureka.IEurekaClient.ShutdownAsync
  id: ShutdownAsync
  parent: Steeltoe.Discovery.Eureka.IEurekaClient
  langs:
  - csharp
  - vb
  name: ShutdownAsync()
  nameWithType: IEurekaClient.ShutdownAsync()
  fullName: Steeltoe.Discovery.Eureka.IEurekaClient.ShutdownAsync()
  type: Method
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaClient.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ShutdownAsync
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaClient.cs
    startLine: 14
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: Task ShutdownAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function ShutdownAsync As Task
  overload: Steeltoe.Discovery.Eureka.IEurekaClient.ShutdownAsync*
references:
- uid: Steeltoe.Discovery.Eureka
  commentId: N:Steeltoe.Discovery.Eureka
  name: Steeltoe.Discovery.Eureka
  nameWithType: Steeltoe.Discovery.Eureka
  fullName: Steeltoe.Discovery.Eureka
- uid: Steeltoe.Discovery.Eureka.ILookupService.Applications
  commentId: P:Steeltoe.Discovery.Eureka.ILookupService.Applications
  parent: Steeltoe.Discovery.Eureka.ILookupService
  name: Applications
  nameWithType: ILookupService.Applications
  fullName: Steeltoe.Discovery.Eureka.ILookupService.Applications
- uid: Steeltoe.Discovery.Eureka.ILookupService.GetApplication(System.String)
  commentId: M:Steeltoe.Discovery.Eureka.ILookupService.GetApplication(System.String)
  parent: Steeltoe.Discovery.Eureka.ILookupService
  isExternal: true
  name: GetApplication(String)
  nameWithType: ILookupService.GetApplication(String)
  fullName: Steeltoe.Discovery.Eureka.ILookupService.GetApplication(System.String)
  spec.csharp:
  - uid: Steeltoe.Discovery.Eureka.ILookupService.GetApplication(System.String)
    name: GetApplication
    nameWithType: ILookupService.GetApplication
    fullName: Steeltoe.Discovery.Eureka.ILookupService.GetApplication
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Discovery.Eureka.ILookupService.GetApplication(System.String)
    name: GetApplication
    nameWithType: ILookupService.GetApplication
    fullName: Steeltoe.Discovery.Eureka.ILookupService.GetApplication
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Eureka.ILookupService.GetInstanceById(System.String)
  commentId: M:Steeltoe.Discovery.Eureka.ILookupService.GetInstanceById(System.String)
  parent: Steeltoe.Discovery.Eureka.ILookupService
  isExternal: true
  name: GetInstanceById(String)
  nameWithType: ILookupService.GetInstanceById(String)
  fullName: Steeltoe.Discovery.Eureka.ILookupService.GetInstanceById(System.String)
  spec.csharp:
  - uid: Steeltoe.Discovery.Eureka.ILookupService.GetInstanceById(System.String)
    name: GetInstanceById
    nameWithType: ILookupService.GetInstanceById
    fullName: Steeltoe.Discovery.Eureka.ILookupService.GetInstanceById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Discovery.Eureka.ILookupService.GetInstanceById(System.String)
    name: GetInstanceById
    nameWithType: ILookupService.GetInstanceById
    fullName: Steeltoe.Discovery.Eureka.ILookupService.GetInstanceById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Eureka.ILookupService.GetNextServerFromEureka(System.String,System.Boolean)
  commentId: M:Steeltoe.Discovery.Eureka.ILookupService.GetNextServerFromEureka(System.String,System.Boolean)
  parent: Steeltoe.Discovery.Eureka.ILookupService
  isExternal: true
  name: GetNextServerFromEureka(String, Boolean)
  nameWithType: ILookupService.GetNextServerFromEureka(String, Boolean)
  fullName: Steeltoe.Discovery.Eureka.ILookupService.GetNextServerFromEureka(System.String, System.Boolean)
  spec.csharp:
  - uid: Steeltoe.Discovery.Eureka.ILookupService.GetNextServerFromEureka(System.String,System.Boolean)
    name: GetNextServerFromEureka
    nameWithType: ILookupService.GetNextServerFromEureka
    fullName: Steeltoe.Discovery.Eureka.ILookupService.GetNextServerFromEureka
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Discovery.Eureka.ILookupService.GetNextServerFromEureka(System.String,System.Boolean)
    name: GetNextServerFromEureka
    nameWithType: ILookupService.GetNextServerFromEureka
    fullName: Steeltoe.Discovery.Eureka.ILookupService.GetNextServerFromEureka
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Eureka.ILookupService
  commentId: T:Steeltoe.Discovery.Eureka.ILookupService
  parent: Steeltoe.Discovery.Eureka
  name: ILookupService
  nameWithType: ILookupService
  fullName: Steeltoe.Discovery.Eureka.ILookupService
- uid: Steeltoe.Discovery.Eureka.IEurekaClient.GetInstancesByVipAddress*
  commentId: Overload:Steeltoe.Discovery.Eureka.IEurekaClient.GetInstancesByVipAddress
  name: GetInstancesByVipAddress
  nameWithType: IEurekaClient.GetInstancesByVipAddress
  fullName: Steeltoe.Discovery.Eureka.IEurekaClient.GetInstancesByVipAddress
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IList{Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo}
  commentId: T:System.Collections.Generic.IList{Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<InstanceInfo>
  nameWithType: IList<InstanceInfo>
  fullName: System.Collections.Generic.IList<Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo>
  nameWithType.vb: IList(Of InstanceInfo)
  fullName.vb: System.Collections.Generic.IList(Of Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo)
  name.vb: IList(Of InstanceInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
    name: InstanceInfo
    nameWithType: InstanceInfo
    fullName: Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
    name: InstanceInfo
    nameWithType: InstanceInfo
    fullName: Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Discovery.Eureka.IEurekaClient.ShutdownAsync*
  commentId: Overload:Steeltoe.Discovery.Eureka.IEurekaClient.ShutdownAsync
  name: ShutdownAsync
  nameWithType: IEurekaClient.ShutdownAsync
  fullName: Steeltoe.Discovery.Eureka.IEurekaClient.ShutdownAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
