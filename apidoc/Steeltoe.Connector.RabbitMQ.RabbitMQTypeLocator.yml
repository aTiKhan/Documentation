### YamlMime:ManagedReference
items:
- uid: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator
  commentId: T:Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator
  id: RabbitMQTypeLocator
  parent: Steeltoe.Connector.RabbitMQ
  children:
  - Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.Assemblies
  - Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.CloseConnectionMethod
  - Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.ConnectionFactory
  - Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.ConnectionImplementationTypeNames
  - Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.ConnectionInterfaceTypeNames
  - Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.CreateConnectionMethod
  - Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.IConnection
  - Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.IConnectionFactory
  langs:
  - csharp
  - vb
  name: RabbitMQTypeLocator
  nameWithType: RabbitMQTypeLocator
  fullName: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator
  type: Class
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/RabbitMQ/RabbitMQTypeLocator.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RabbitMQTypeLocator
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/RabbitMQ/RabbitMQTypeLocator.cs
    startLine: 13
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.RabbitMQ
  summary: "\nAssemblies and types used for interacting with RabbitMQ\n"
  example: []
  syntax:
    content: public static class RabbitMQTypeLocator
    content.vb: Public Module RabbitMQTypeLocator
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.Assemblies
  commentId: P:Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.Assemblies
  id: Assemblies
  parent: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator
  langs:
  - csharp
  - vb
  name: Assemblies
  nameWithType: RabbitMQTypeLocator.Assemblies
  fullName: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.Assemblies
  type: Property
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/RabbitMQ/RabbitMQTypeLocator.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Assemblies
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/RabbitMQ/RabbitMQTypeLocator.cs
    startLine: 18
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.RabbitMQ
  summary: "\nGets a list of supported RabbitMQ assemblies\n"
  example: []
  syntax:
    content: public static string[] Assemblies { get; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Shared ReadOnly Property Assemblies As String()
  overload: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.Assemblies*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.ConnectionInterfaceTypeNames
  commentId: P:Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.ConnectionInterfaceTypeNames
  id: ConnectionInterfaceTypeNames
  parent: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator
  langs:
  - csharp
  - vb
  name: ConnectionInterfaceTypeNames
  nameWithType: RabbitMQTypeLocator.ConnectionInterfaceTypeNames
  fullName: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.ConnectionInterfaceTypeNames
  type: Property
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/RabbitMQ/RabbitMQTypeLocator.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConnectionInterfaceTypeNames
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/RabbitMQ/RabbitMQTypeLocator.cs
    startLine: 23
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.RabbitMQ
  summary: "\nGets a list of RabbitMQ Interface types\n"
  example: []
  syntax:
    content: public static string[] ConnectionInterfaceTypeNames { get; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Shared ReadOnly Property ConnectionInterfaceTypeNames As String()
  overload: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.ConnectionInterfaceTypeNames*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.ConnectionImplementationTypeNames
  commentId: P:Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.ConnectionImplementationTypeNames
  id: ConnectionImplementationTypeNames
  parent: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator
  langs:
  - csharp
  - vb
  name: ConnectionImplementationTypeNames
  nameWithType: RabbitMQTypeLocator.ConnectionImplementationTypeNames
  fullName: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.ConnectionImplementationTypeNames
  type: Property
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/RabbitMQ/RabbitMQTypeLocator.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConnectionImplementationTypeNames
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/RabbitMQ/RabbitMQTypeLocator.cs
    startLine: 28
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.RabbitMQ
  summary: "\nGets a list of RabbitMQ Implementation types\n"
  example: []
  syntax:
    content: public static string[] ConnectionImplementationTypeNames { get; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Shared ReadOnly Property ConnectionImplementationTypeNames As String()
  overload: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.ConnectionImplementationTypeNames*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.IConnectionFactory
  commentId: P:Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.IConnectionFactory
  id: IConnectionFactory
  parent: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator
  langs:
  - csharp
  - vb
  name: IConnectionFactory
  nameWithType: RabbitMQTypeLocator.IConnectionFactory
  fullName: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.IConnectionFactory
  type: Property
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/RabbitMQ/RabbitMQTypeLocator.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IConnectionFactory
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/RabbitMQ/RabbitMQTypeLocator.cs
    startLine: 34
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.RabbitMQ
  summary: "\nGets IConnectionFactory from a RabbitMQ Library\n"
  example: []
  syntax:
    content: public static Type IConnectionFactory { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public Shared ReadOnly Property IConnectionFactory As Type
  overload: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.IConnectionFactory*
  exceptions:
  - type: Steeltoe.Connector.ConnectorException
    commentId: T:Steeltoe.Connector.ConnectorException
    description: When type is not found
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.ConnectionFactory
  commentId: P:Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.ConnectionFactory
  id: ConnectionFactory
  parent: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator
  langs:
  - csharp
  - vb
  name: ConnectionFactory
  nameWithType: RabbitMQTypeLocator.ConnectionFactory
  fullName: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.ConnectionFactory
  type: Property
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/RabbitMQ/RabbitMQTypeLocator.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConnectionFactory
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/RabbitMQ/RabbitMQTypeLocator.cs
    startLine: 40
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.RabbitMQ
  summary: "\nGets ConnectionFactory from a RabbitMQ Library\n"
  example: []
  syntax:
    content: public static Type ConnectionFactory { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public Shared ReadOnly Property ConnectionFactory As Type
  overload: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.ConnectionFactory*
  exceptions:
  - type: Steeltoe.Connector.ConnectorException
    commentId: T:Steeltoe.Connector.ConnectorException
    description: When type is not found
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.IConnection
  commentId: P:Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.IConnection
  id: IConnection
  parent: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator
  langs:
  - csharp
  - vb
  name: IConnection
  nameWithType: RabbitMQTypeLocator.IConnection
  fullName: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.IConnection
  type: Property
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/RabbitMQ/RabbitMQTypeLocator.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IConnection
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/RabbitMQ/RabbitMQTypeLocator.cs
    startLine: 45
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.RabbitMQ
  summary: "\nGets IConnection from RabbitMQ Library\n"
  example: []
  syntax:
    content: public static Type IConnection { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public Shared ReadOnly Property IConnection As Type
  overload: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.IConnection*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.CreateConnectionMethod
  commentId: P:Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.CreateConnectionMethod
  id: CreateConnectionMethod
  parent: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator
  langs:
  - csharp
  - vb
  name: CreateConnectionMethod
  nameWithType: RabbitMQTypeLocator.CreateConnectionMethod
  fullName: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.CreateConnectionMethod
  type: Property
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/RabbitMQ/RabbitMQTypeLocator.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CreateConnectionMethod
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/RabbitMQ/RabbitMQTypeLocator.cs
    startLine: 50
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.RabbitMQ
  summary: "\nGets the CreateConnection method of ConnectionFactory\n"
  example: []
  syntax:
    content: public static MethodInfo CreateConnectionMethod { get; }
    parameters: []
    return:
      type: System.Reflection.MethodInfo
    content.vb: Public Shared ReadOnly Property CreateConnectionMethod As MethodInfo
  overload: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.CreateConnectionMethod*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.CloseConnectionMethod
  commentId: P:Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.CloseConnectionMethod
  id: CloseConnectionMethod
  parent: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator
  langs:
  - csharp
  - vb
  name: CloseConnectionMethod
  nameWithType: RabbitMQTypeLocator.CloseConnectionMethod
  fullName: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.CloseConnectionMethod
  type: Property
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/RabbitMQ/RabbitMQTypeLocator.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CloseConnectionMethod
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/RabbitMQ/RabbitMQTypeLocator.cs
    startLine: 55
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.RabbitMQ
  summary: "\nGets the Close method for IConnection\n"
  example: []
  syntax:
    content: public static MethodInfo CloseConnectionMethod { get; }
    parameters: []
    return:
      type: System.Reflection.MethodInfo
    content.vb: Public Shared ReadOnly Property CloseConnectionMethod As MethodInfo
  overload: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.CloseConnectionMethod*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Steeltoe.Connector.RabbitMQ
  commentId: N:Steeltoe.Connector.RabbitMQ
  name: Steeltoe.Connector.RabbitMQ
  nameWithType: Steeltoe.Connector.RabbitMQ
  fullName: Steeltoe.Connector.RabbitMQ
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.Assemblies*
  commentId: Overload:Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.Assemblies
  name: Assemblies
  nameWithType: RabbitMQTypeLocator.Assemblies
  fullName: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.Assemblies
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.ConnectionInterfaceTypeNames*
  commentId: Overload:Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.ConnectionInterfaceTypeNames
  name: ConnectionInterfaceTypeNames
  nameWithType: RabbitMQTypeLocator.ConnectionInterfaceTypeNames
  fullName: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.ConnectionInterfaceTypeNames
- uid: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.ConnectionImplementationTypeNames*
  commentId: Overload:Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.ConnectionImplementationTypeNames
  name: ConnectionImplementationTypeNames
  nameWithType: RabbitMQTypeLocator.ConnectionImplementationTypeNames
  fullName: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.ConnectionImplementationTypeNames
- uid: Steeltoe.Connector.ConnectorException
  commentId: T:Steeltoe.Connector.ConnectorException
  name: ConnectorException
  nameWithType: ConnectorException
  fullName: Steeltoe.Connector.ConnectorException
- uid: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.IConnectionFactory*
  commentId: Overload:Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.IConnectionFactory
  name: IConnectionFactory
  nameWithType: RabbitMQTypeLocator.IConnectionFactory
  fullName: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.IConnectionFactory
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.ConnectionFactory*
  commentId: Overload:Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.ConnectionFactory
  name: ConnectionFactory
  nameWithType: RabbitMQTypeLocator.ConnectionFactory
  fullName: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.ConnectionFactory
- uid: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.IConnection*
  commentId: Overload:Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.IConnection
  name: IConnection
  nameWithType: RabbitMQTypeLocator.IConnection
  fullName: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.IConnection
- uid: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.CreateConnectionMethod*
  commentId: Overload:Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.CreateConnectionMethod
  name: CreateConnectionMethod
  nameWithType: RabbitMQTypeLocator.CreateConnectionMethod
  fullName: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.CreateConnectionMethod
- uid: System.Reflection.MethodInfo
  commentId: T:System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.CloseConnectionMethod*
  commentId: Overload:Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.CloseConnectionMethod
  name: CloseConnectionMethod
  nameWithType: RabbitMQTypeLocator.CloseConnectionMethod
  fullName: Steeltoe.Connector.RabbitMQ.RabbitMQTypeLocator.CloseConnectionMethod
