### YamlMime:ManagedReference
items:
- uid: Steeltoe.Discovery.Kubernetes.Discovery.Metadata
  commentId: T:Steeltoe.Discovery.Kubernetes.Discovery.Metadata
  id: Metadata
  parent: Steeltoe.Discovery.Kubernetes.Discovery
  children:
  - Steeltoe.Discovery.Kubernetes.Discovery.Metadata.AddAnnotations
  - Steeltoe.Discovery.Kubernetes.Discovery.Metadata.AddLabels
  - Steeltoe.Discovery.Kubernetes.Discovery.Metadata.AddPorts
  - Steeltoe.Discovery.Kubernetes.Discovery.Metadata.AnnotationsPrefix
  - Steeltoe.Discovery.Kubernetes.Discovery.Metadata.LabelsPrefix
  - Steeltoe.Discovery.Kubernetes.Discovery.Metadata.PortsPrefix
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: Metadata
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.Metadata
  type: Class
  source:
    remote:
      path: src/Discovery/src/Kubernetes/Discovery/Metadata.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Metadata
    path: ../Steeltoe/src/Discovery/src/Kubernetes/Discovery/Metadata.cs
    startLine: 6
  assemblies:
  - Steeltoe.Discovery.Kubernetes
  namespace: Steeltoe.Discovery.Kubernetes.Discovery
  syntax:
    content: public class Metadata
    content.vb: Public Class Metadata
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Discovery.Kubernetes.Discovery.Metadata.AddLabels
  commentId: P:Steeltoe.Discovery.Kubernetes.Discovery.Metadata.AddLabels
  id: AddLabels
  parent: Steeltoe.Discovery.Kubernetes.Discovery.Metadata
  langs:
  - csharp
  - vb
  name: AddLabels
  nameWithType: Metadata.AddLabels
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.Metadata.AddLabels
  type: Property
  source:
    remote:
      path: src/Discovery/src/Kubernetes/Discovery/Metadata.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddLabels
    path: ../Steeltoe/src/Discovery/src/Kubernetes/Discovery/Metadata.cs
    startLine: 11
  assemblies:
  - Steeltoe.Discovery.Kubernetes
  namespace: Steeltoe.Discovery.Kubernetes.Discovery
  summary: "\nGets or sets a value indicating whether Kubernetes labels of the services will be included\n"
  example: []
  syntax:
    content: public bool AddLabels { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AddLabels As Boolean
  overload: Steeltoe.Discovery.Kubernetes.Discovery.Metadata.AddLabels*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Kubernetes.Discovery.Metadata.LabelsPrefix
  commentId: P:Steeltoe.Discovery.Kubernetes.Discovery.Metadata.LabelsPrefix
  id: LabelsPrefix
  parent: Steeltoe.Discovery.Kubernetes.Discovery.Metadata
  langs:
  - csharp
  - vb
  name: LabelsPrefix
  nameWithType: Metadata.LabelsPrefix
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.Metadata.LabelsPrefix
  type: Property
  source:
    remote:
      path: src/Discovery/src/Kubernetes/Discovery/Metadata.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: LabelsPrefix
    path: ../Steeltoe/src/Discovery/src/Kubernetes/Discovery/Metadata.cs
    startLine: 16
  assemblies:
  - Steeltoe.Discovery.Kubernetes
  namespace: Steeltoe.Discovery.Kubernetes.Discovery
  summary: "\nGets or sets a value to use as a prefix for the keys in Metadata hashtable\n"
  example: []
  syntax:
    content: public string LabelsPrefix { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property LabelsPrefix As String
  overload: Steeltoe.Discovery.Kubernetes.Discovery.Metadata.LabelsPrefix*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Kubernetes.Discovery.Metadata.AddAnnotations
  commentId: P:Steeltoe.Discovery.Kubernetes.Discovery.Metadata.AddAnnotations
  id: AddAnnotations
  parent: Steeltoe.Discovery.Kubernetes.Discovery.Metadata
  langs:
  - csharp
  - vb
  name: AddAnnotations
  nameWithType: Metadata.AddAnnotations
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.Metadata.AddAnnotations
  type: Property
  source:
    remote:
      path: src/Discovery/src/Kubernetes/Discovery/Metadata.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddAnnotations
    path: ../Steeltoe/src/Discovery/src/Kubernetes/Discovery/Metadata.cs
    startLine: 21
  assemblies:
  - Steeltoe.Discovery.Kubernetes
  namespace: Steeltoe.Discovery.Kubernetes.Discovery
  summary: "\nGets or sets a value indicating whether the Kubernetes annotations of the services will be included\n"
  example: []
  syntax:
    content: public bool AddAnnotations { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AddAnnotations As Boolean
  overload: Steeltoe.Discovery.Kubernetes.Discovery.Metadata.AddAnnotations*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Kubernetes.Discovery.Metadata.AnnotationsPrefix
  commentId: P:Steeltoe.Discovery.Kubernetes.Discovery.Metadata.AnnotationsPrefix
  id: AnnotationsPrefix
  parent: Steeltoe.Discovery.Kubernetes.Discovery.Metadata
  langs:
  - csharp
  - vb
  name: AnnotationsPrefix
  nameWithType: Metadata.AnnotationsPrefix
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.Metadata.AnnotationsPrefix
  type: Property
  source:
    remote:
      path: src/Discovery/src/Kubernetes/Discovery/Metadata.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AnnotationsPrefix
    path: ../Steeltoe/src/Discovery/src/Kubernetes/Discovery/Metadata.cs
    startLine: 26
  assemblies:
  - Steeltoe.Discovery.Kubernetes
  namespace: Steeltoe.Discovery.Kubernetes.Discovery
  summary: "\nGets or sets a value to use as a prefix to the key names in the metadata hashtable\n"
  example: []
  syntax:
    content: public string AnnotationsPrefix { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AnnotationsPrefix As String
  overload: Steeltoe.Discovery.Kubernetes.Discovery.Metadata.AnnotationsPrefix*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Kubernetes.Discovery.Metadata.AddPorts
  commentId: P:Steeltoe.Discovery.Kubernetes.Discovery.Metadata.AddPorts
  id: AddPorts
  parent: Steeltoe.Discovery.Kubernetes.Discovery.Metadata
  langs:
  - csharp
  - vb
  name: AddPorts
  nameWithType: Metadata.AddPorts
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.Metadata.AddPorts
  type: Property
  source:
    remote:
      path: src/Discovery/src/Kubernetes/Discovery/Metadata.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddPorts
    path: ../Steeltoe/src/Discovery/src/Kubernetes/Discovery/Metadata.cs
    startLine: 31
  assemblies:
  - Steeltoe.Discovery.Kubernetes
  namespace: Steeltoe.Discovery.Kubernetes.Discovery
  summary: "\nGets or sets a value indicating whether named Kubernetes service ports will be included\n"
  example: []
  syntax:
    content: public bool AddPorts { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AddPorts As Boolean
  overload: Steeltoe.Discovery.Kubernetes.Discovery.Metadata.AddPorts*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Kubernetes.Discovery.Metadata.PortsPrefix
  commentId: P:Steeltoe.Discovery.Kubernetes.Discovery.Metadata.PortsPrefix
  id: PortsPrefix
  parent: Steeltoe.Discovery.Kubernetes.Discovery.Metadata
  langs:
  - csharp
  - vb
  name: PortsPrefix
  nameWithType: Metadata.PortsPrefix
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.Metadata.PortsPrefix
  type: Property
  source:
    remote:
      path: src/Discovery/src/Kubernetes/Discovery/Metadata.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: PortsPrefix
    path: ../Steeltoe/src/Discovery/src/Kubernetes/Discovery/Metadata.cs
    startLine: 36
  assemblies:
  - Steeltoe.Discovery.Kubernetes
  namespace: Steeltoe.Discovery.Kubernetes.Discovery
  summary: "\nGets or sets a value to use as a prefix to the keys on metadata entries for ports\n"
  example: []
  syntax:
    content: public string PortsPrefix { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PortsPrefix As String
  overload: Steeltoe.Discovery.Kubernetes.Discovery.Metadata.PortsPrefix*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Discovery.Kubernetes.Discovery
  commentId: N:Steeltoe.Discovery.Kubernetes.Discovery
  name: Steeltoe.Discovery.Kubernetes.Discovery
  nameWithType: Steeltoe.Discovery.Kubernetes.Discovery
  fullName: Steeltoe.Discovery.Kubernetes.Discovery
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Discovery.Kubernetes.Discovery.Metadata.AddLabels*
  commentId: Overload:Steeltoe.Discovery.Kubernetes.Discovery.Metadata.AddLabels
  name: AddLabels
  nameWithType: Metadata.AddLabels
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.Metadata.AddLabels
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Discovery.Kubernetes.Discovery.Metadata.LabelsPrefix*
  commentId: Overload:Steeltoe.Discovery.Kubernetes.Discovery.Metadata.LabelsPrefix
  name: LabelsPrefix
  nameWithType: Metadata.LabelsPrefix
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.Metadata.LabelsPrefix
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Discovery.Kubernetes.Discovery.Metadata.AddAnnotations*
  commentId: Overload:Steeltoe.Discovery.Kubernetes.Discovery.Metadata.AddAnnotations
  name: AddAnnotations
  nameWithType: Metadata.AddAnnotations
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.Metadata.AddAnnotations
- uid: Steeltoe.Discovery.Kubernetes.Discovery.Metadata.AnnotationsPrefix*
  commentId: Overload:Steeltoe.Discovery.Kubernetes.Discovery.Metadata.AnnotationsPrefix
  name: AnnotationsPrefix
  nameWithType: Metadata.AnnotationsPrefix
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.Metadata.AnnotationsPrefix
- uid: Steeltoe.Discovery.Kubernetes.Discovery.Metadata.AddPorts*
  commentId: Overload:Steeltoe.Discovery.Kubernetes.Discovery.Metadata.AddPorts
  name: AddPorts
  nameWithType: Metadata.AddPorts
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.Metadata.AddPorts
- uid: Steeltoe.Discovery.Kubernetes.Discovery.Metadata.PortsPrefix*
  commentId: Overload:Steeltoe.Discovery.Kubernetes.Discovery.Metadata.PortsPrefix
  name: PortsPrefix
  nameWithType: Metadata.PortsPrefix
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.Metadata.PortsPrefix
