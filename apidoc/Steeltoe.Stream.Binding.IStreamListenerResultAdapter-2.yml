### YamlMime:ManagedReference
items:
- uid: Steeltoe.Stream.Binding.IStreamListenerResultAdapter`2
  commentId: T:Steeltoe.Stream.Binding.IStreamListenerResultAdapter`2
  id: IStreamListenerResultAdapter`2
  parent: Steeltoe.Stream.Binding
  children:
  - Steeltoe.Stream.Binding.IStreamListenerResultAdapter`2.Adapt(`0,`1)
  langs:
  - csharp
  - vb
  name: IStreamListenerResultAdapter<R, B>
  nameWithType: IStreamListenerResultAdapter<R, B>
  fullName: Steeltoe.Stream.Binding.IStreamListenerResultAdapter<R, B>
  type: Interface
  source:
    remote:
      path: src/Stream/src/StreamBase/Binding/IStreamListenerResultAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IStreamListenerResultAdapter
    path: ../Steeltoe/src/Stream/src/StreamBase/Binding/IStreamListenerResultAdapter.cs
    startLine: 15
  assemblies:
  - Steeltoe.Stream.StreamBase
  namespace: Steeltoe.Stream.Binding
  syntax:
    content: 'public interface IStreamListenerResultAdapter<in R, in B> : IStreamListenerResultAdapter'
    typeParameters:
    - id: R
    - id: B
    content.vb: >-
      Public Interface IStreamListenerResultAdapter(Of In R, In B)

          Inherits IStreamListenerResultAdapter
  inheritedMembers:
  - Steeltoe.Stream.Binding.IStreamListenerResultAdapter.Supports(System.Type,System.Type)
  - Steeltoe.Stream.Binding.IStreamListenerResultAdapter.Adapt(System.Object,System.Object)
  nameWithType.vb: IStreamListenerResultAdapter(Of R, B)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Steeltoe.Stream.Binding.IStreamListenerResultAdapter(Of R, B)
  name.vb: IStreamListenerResultAdapter(Of R, B)
- uid: Steeltoe.Stream.Binding.IStreamListenerResultAdapter`2.Adapt(`0,`1)
  commentId: M:Steeltoe.Stream.Binding.IStreamListenerResultAdapter`2.Adapt(`0,`1)
  id: Adapt(`0,`1)
  parent: Steeltoe.Stream.Binding.IStreamListenerResultAdapter`2
  langs:
  - csharp
  - vb
  name: Adapt(R, B)
  nameWithType: IStreamListenerResultAdapter<R, B>.Adapt(R, B)
  fullName: Steeltoe.Stream.Binding.IStreamListenerResultAdapter<R, B>.Adapt(R, B)
  type: Method
  source:
    remote:
      path: src/Stream/src/StreamBase/Binding/IStreamListenerResultAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Adapt
    path: ../Steeltoe/src/Stream/src/StreamBase/Binding/IStreamListenerResultAdapter.cs
    startLine: 17
  assemblies:
  - Steeltoe.Stream.StreamBase
  namespace: Steeltoe.Stream.Binding
  syntax:
    content: IDisposable Adapt(R streamListenerResult, B bindingTarget)
    parameters:
    - id: streamListenerResult
      type: '{R}'
    - id: bindingTarget
      type: '{B}'
    return:
      type: System.IDisposable
    content.vb: Function Adapt(streamListenerResult As R, bindingTarget As B) As IDisposable
  overload: Steeltoe.Stream.Binding.IStreamListenerResultAdapter`2.Adapt*
  nameWithType.vb: IStreamListenerResultAdapter(Of R, B).Adapt(R, B)
  fullName.vb: Steeltoe.Stream.Binding.IStreamListenerResultAdapter(Of R, B).Adapt(R, B)
references:
- uid: Steeltoe.Stream.Binding
  commentId: N:Steeltoe.Stream.Binding
  name: Steeltoe.Stream.Binding
  nameWithType: Steeltoe.Stream.Binding
  fullName: Steeltoe.Stream.Binding
- uid: Steeltoe.Stream.Binding.IStreamListenerResultAdapter.Supports(System.Type,System.Type)
  commentId: M:Steeltoe.Stream.Binding.IStreamListenerResultAdapter.Supports(System.Type,System.Type)
  parent: Steeltoe.Stream.Binding.IStreamListenerResultAdapter
  isExternal: true
  name: Supports(Type, Type)
  nameWithType: IStreamListenerResultAdapter.Supports(Type, Type)
  fullName: Steeltoe.Stream.Binding.IStreamListenerResultAdapter.Supports(System.Type, System.Type)
  spec.csharp:
  - uid: Steeltoe.Stream.Binding.IStreamListenerResultAdapter.Supports(System.Type,System.Type)
    name: Supports
    nameWithType: IStreamListenerResultAdapter.Supports
    fullName: Steeltoe.Stream.Binding.IStreamListenerResultAdapter.Supports
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Stream.Binding.IStreamListenerResultAdapter.Supports(System.Type,System.Type)
    name: Supports
    nameWithType: IStreamListenerResultAdapter.Supports
    fullName: Steeltoe.Stream.Binding.IStreamListenerResultAdapter.Supports
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Stream.Binding.IStreamListenerResultAdapter.Adapt(System.Object,System.Object)
  commentId: M:Steeltoe.Stream.Binding.IStreamListenerResultAdapter.Adapt(System.Object,System.Object)
  parent: Steeltoe.Stream.Binding.IStreamListenerResultAdapter
  isExternal: true
  name: Adapt(Object, Object)
  nameWithType: IStreamListenerResultAdapter.Adapt(Object, Object)
  fullName: Steeltoe.Stream.Binding.IStreamListenerResultAdapter.Adapt(System.Object, System.Object)
  spec.csharp:
  - uid: Steeltoe.Stream.Binding.IStreamListenerResultAdapter.Adapt(System.Object,System.Object)
    name: Adapt
    nameWithType: IStreamListenerResultAdapter.Adapt
    fullName: Steeltoe.Stream.Binding.IStreamListenerResultAdapter.Adapt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Stream.Binding.IStreamListenerResultAdapter.Adapt(System.Object,System.Object)
    name: Adapt
    nameWithType: IStreamListenerResultAdapter.Adapt
    fullName: Steeltoe.Stream.Binding.IStreamListenerResultAdapter.Adapt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Stream.Binding.IStreamListenerResultAdapter
  commentId: T:Steeltoe.Stream.Binding.IStreamListenerResultAdapter
  parent: Steeltoe.Stream.Binding
  name: IStreamListenerResultAdapter
  nameWithType: IStreamListenerResultAdapter
  fullName: Steeltoe.Stream.Binding.IStreamListenerResultAdapter
- uid: Steeltoe.Stream.Binding.IStreamListenerResultAdapter`2.Adapt*
  commentId: Overload:Steeltoe.Stream.Binding.IStreamListenerResultAdapter`2.Adapt
  name: Adapt
  nameWithType: IStreamListenerResultAdapter<R, B>.Adapt
  fullName: Steeltoe.Stream.Binding.IStreamListenerResultAdapter<R, B>.Adapt
  nameWithType.vb: IStreamListenerResultAdapter(Of R, B).Adapt
  fullName.vb: Steeltoe.Stream.Binding.IStreamListenerResultAdapter(Of R, B).Adapt
- uid: '{R}'
  commentId: '!:R'
  definition: R
  name: R
  nameWithType: R
  fullName: R
- uid: '{B}'
  commentId: '!:B'
  definition: B
  name: B
  nameWithType: B
  fullName: B
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: R
  name: R
  nameWithType: R
  fullName: R
- uid: B
  name: B
  nameWithType: B
  fullName: B
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
