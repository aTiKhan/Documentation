### YamlMime:ManagedReference
items:
- uid: Steeltoe.Connector.Services.ServiceInfoFactory
  commentId: T:Steeltoe.Connector.Services.ServiceInfoFactory
  id: ServiceInfoFactory
  parent: Steeltoe.Connector.Services
  children:
  - Steeltoe.Connector.Services.ServiceInfoFactory.#ctor(Steeltoe.Connector.Services.Tags,System.Collections.Generic.IEnumerable{System.String})
  - Steeltoe.Connector.Services.ServiceInfoFactory.#ctor(Steeltoe.Connector.Services.Tags,System.String)
  - Steeltoe.Connector.Services.ServiceInfoFactory.Accepts(Service)
  - Steeltoe.Connector.Services.ServiceInfoFactory.Create(Service)
  - Steeltoe.Connector.Services.ServiceInfoFactory.DefaultUriScheme
  - Steeltoe.Connector.Services.ServiceInfoFactory.GetAccessTokenUriFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  - Steeltoe.Connector.Services.ServiceInfoFactory.GetBoolFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.String)
  - Steeltoe.Connector.Services.ServiceInfoFactory.GetClientIdFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  - Steeltoe.Connector.Services.ServiceInfoFactory.GetClientSecretFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  - Steeltoe.Connector.Services.ServiceInfoFactory.GetHostFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  - Steeltoe.Connector.Services.ServiceInfoFactory.GetIntFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.Collections.Generic.List{System.String})
  - Steeltoe.Connector.Services.ServiceInfoFactory.GetIntFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.String)
  - Steeltoe.Connector.Services.ServiceInfoFactory.GetListFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.String)
  - Steeltoe.Connector.Services.ServiceInfoFactory.GetPasswordFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  - Steeltoe.Connector.Services.ServiceInfoFactory.GetPortFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  - Steeltoe.Connector.Services.ServiceInfoFactory.GetStringFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.Collections.Generic.List{System.String})
  - Steeltoe.Connector.Services.ServiceInfoFactory.GetStringFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.String)
  - Steeltoe.Connector.Services.ServiceInfoFactory.GetTlsPortFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  - Steeltoe.Connector.Services.ServiceInfoFactory.GetUriFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  - Steeltoe.Connector.Services.ServiceInfoFactory.GetUsernameFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  - Steeltoe.Connector.Services.ServiceInfoFactory.LabelStartsWithTag(Service)
  - Steeltoe.Connector.Services.ServiceInfoFactory.ServiceInfoTags
  - Steeltoe.Connector.Services.ServiceInfoFactory.TagsMatch(Service)
  - Steeltoe.Connector.Services.ServiceInfoFactory.UriKeyMatchesScheme(Service)
  - Steeltoe.Connector.Services.ServiceInfoFactory.UriKeys
  - Steeltoe.Connector.Services.ServiceInfoFactory.UriMatchesScheme(Service)
  - Steeltoe.Connector.Services.ServiceInfoFactory.UriSchemes
  langs:
  - csharp
  - vb
  name: ServiceInfoFactory
  nameWithType: ServiceInfoFactory
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory
  type: Class
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ServiceInfoFactory
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
    startLine: 11
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Services
  syntax:
    content: 'public abstract class ServiceInfoFactory : IServiceInfoFactory'
    content.vb: >-
      Public MustInherit Class ServiceInfoFactory

          Implements IServiceInfoFactory
  inheritance:
  - System.Object
  derivedClasses:
  - Steeltoe.Connector.Services.CosmosDbServiceInfoFactory
  - Steeltoe.Connector.Services.EurekaServiceInfoFactory
  - Steeltoe.Connector.Services.HystrixRabbitMQServiceInfoFactory
  - Steeltoe.Connector.Services.MongoDbServiceInfoFactory
  - Steeltoe.Connector.Services.RabbitMQServiceInfoFactory
  - Steeltoe.Connector.Services.RedisServiceInfoFactory
  - Steeltoe.Connector.Services.RelationalServiceInfoFactory
  - Steeltoe.Connector.Services.SqlServerServiceInfoFactory
  - Steeltoe.Connector.Services.SsoServiceInfoFactory
  implements:
  - Steeltoe.Connector.Services.IServiceInfoFactory
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.#ctor(Steeltoe.Connector.Services.Tags,System.String)
  commentId: M:Steeltoe.Connector.Services.ServiceInfoFactory.#ctor(Steeltoe.Connector.Services.Tags,System.String)
  id: '#ctor(Steeltoe.Connector.Services.Tags,System.String)'
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  langs:
  - csharp
  - vb
  name: ServiceInfoFactory(Tags, String)
  nameWithType: ServiceInfoFactory.ServiceInfoFactory(Tags, String)
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.ServiceInfoFactory(Steeltoe.Connector.Services.Tags, System.String)
  type: Constructor
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
    startLine: 18
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Services
  syntax:
    content: protected ServiceInfoFactory(Tags tags, string scheme)
    parameters:
    - id: tags
      type: Steeltoe.Connector.Services.Tags
    - id: scheme
      type: System.String
    content.vb: Protected Sub New(tags As Tags, scheme As String)
  overload: Steeltoe.Connector.Services.ServiceInfoFactory.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.#ctor(Steeltoe.Connector.Services.Tags,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Steeltoe.Connector.Services.ServiceInfoFactory.#ctor(Steeltoe.Connector.Services.Tags,System.Collections.Generic.IEnumerable{System.String})
  id: '#ctor(Steeltoe.Connector.Services.Tags,System.Collections.Generic.IEnumerable{System.String})'
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  langs:
  - csharp
  - vb
  name: ServiceInfoFactory(Tags, IEnumerable<String>)
  nameWithType: ServiceInfoFactory.ServiceInfoFactory(Tags, IEnumerable<String>)
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.ServiceInfoFactory(Steeltoe.Connector.Services.Tags, System.Collections.Generic.IEnumerable<System.String>)
  type: Constructor
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
    startLine: 27
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Services
  syntax:
    content: protected ServiceInfoFactory(Tags tags, IEnumerable<string> schemes)
    parameters:
    - id: tags
      type: Steeltoe.Connector.Services.Tags
    - id: schemes
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Protected Sub New(tags As Tags, schemes As IEnumerable(Of String))
  overload: Steeltoe.Connector.Services.ServiceInfoFactory.#ctor*
  nameWithType.vb: ServiceInfoFactory.ServiceInfoFactory(Tags, IEnumerable(Of String))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Steeltoe.Connector.Services.ServiceInfoFactory.ServiceInfoFactory(Steeltoe.Connector.Services.Tags, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: ServiceInfoFactory(Tags, IEnumerable(Of String))
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.DefaultUriScheme
  commentId: P:Steeltoe.Connector.Services.ServiceInfoFactory.DefaultUriScheme
  id: DefaultUriScheme
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  langs:
  - csharp
  - vb
  name: DefaultUriScheme
  nameWithType: ServiceInfoFactory.DefaultUriScheme
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.DefaultUriScheme
  type: Property
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DefaultUriScheme
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
    startLine: 41
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Services
  syntax:
    content: public virtual string DefaultUriScheme { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property DefaultUriScheme As String
  overload: Steeltoe.Connector.Services.ServiceInfoFactory.DefaultUriScheme*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.Accepts(Service)
  commentId: M:Steeltoe.Connector.Services.ServiceInfoFactory.Accepts(Service)
  id: Accepts(Service)
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  langs:
  - csharp
  - vb
  name: Accepts(Service)
  nameWithType: ServiceInfoFactory.Accepts(Service)
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.Accepts(Service)
  type: Method
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Accepts
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
    startLine: 43
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Services
  syntax:
    content: public virtual bool Accepts(Service binding)
    parameters:
    - id: binding
      type: Service
    return:
      type: System.Boolean
    content.vb: Public Overridable Function Accepts(binding As Service) As Boolean
  overload: Steeltoe.Connector.Services.ServiceInfoFactory.Accepts*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.Create(Service)
  commentId: M:Steeltoe.Connector.Services.ServiceInfoFactory.Create(Service)
  id: Create(Service)
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  langs:
  - csharp
  - vb
  name: Create(Service)
  nameWithType: ServiceInfoFactory.Create(Service)
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.Create(Service)
  type: Method
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Create
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
    startLine: 49
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Services
  syntax:
    content: public abstract IServiceInfo Create(Service binding)
    parameters:
    - id: binding
      type: Service
    return:
      type: Steeltoe.Connector.Services.IServiceInfo
    content.vb: Public MustOverride Function Create(binding As Service) As IServiceInfo
  overload: Steeltoe.Connector.Services.ServiceInfoFactory.Create*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.ServiceInfoTags
  commentId: P:Steeltoe.Connector.Services.ServiceInfoFactory.ServiceInfoTags
  id: ServiceInfoTags
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  langs:
  - csharp
  - vb
  name: ServiceInfoTags
  nameWithType: ServiceInfoFactory.ServiceInfoTags
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.ServiceInfoTags
  type: Property
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ServiceInfoTags
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
    startLine: 51
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Services
  syntax:
    content: protected Tags ServiceInfoTags { get; set; }
    parameters: []
    return:
      type: Steeltoe.Connector.Services.Tags
    content.vb: Protected Property ServiceInfoTags As Tags
  overload: Steeltoe.Connector.Services.ServiceInfoFactory.ServiceInfoTags*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.UriKeys
  commentId: P:Steeltoe.Connector.Services.ServiceInfoFactory.UriKeys
  id: UriKeys
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  langs:
  - csharp
  - vb
  name: UriKeys
  nameWithType: ServiceInfoFactory.UriKeys
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.UriKeys
  type: Property
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: UriKeys
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
    startLine: 53
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Services
  syntax:
    content: protected List<string> UriKeys { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Protected Property UriKeys As List(Of String)
  overload: Steeltoe.Connector.Services.ServiceInfoFactory.UriKeys*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.UriSchemes
  commentId: P:Steeltoe.Connector.Services.ServiceInfoFactory.UriSchemes
  id: UriSchemes
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  langs:
  - csharp
  - vb
  name: UriSchemes
  nameWithType: ServiceInfoFactory.UriSchemes
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.UriSchemes
  type: Property
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: UriSchemes
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
    startLine: 55
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Services
  syntax:
    content: protected IEnumerable<string> UriSchemes { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Protected Property UriSchemes As IEnumerable(Of String)
  overload: Steeltoe.Connector.Services.ServiceInfoFactory.UriSchemes*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.TagsMatch(Service)
  commentId: M:Steeltoe.Connector.Services.ServiceInfoFactory.TagsMatch(Service)
  id: TagsMatch(Service)
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  langs:
  - csharp
  - vb
  name: TagsMatch(Service)
  nameWithType: ServiceInfoFactory.TagsMatch(Service)
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.TagsMatch(Service)
  type: Method
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: TagsMatch
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
    startLine: 57
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Services
  syntax:
    content: protected virtual bool TagsMatch(Service binding)
    parameters:
    - id: binding
      type: Service
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function TagsMatch(binding As Service) As Boolean
  overload: Steeltoe.Connector.Services.ServiceInfoFactory.TagsMatch*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.LabelStartsWithTag(Service)
  commentId: M:Steeltoe.Connector.Services.ServiceInfoFactory.LabelStartsWithTag(Service)
  id: LabelStartsWithTag(Service)
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  langs:
  - csharp
  - vb
  name: LabelStartsWithTag(Service)
  nameWithType: ServiceInfoFactory.LabelStartsWithTag(Service)
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.LabelStartsWithTag(Service)
  type: Method
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: LabelStartsWithTag
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
    startLine: 59
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Services
  syntax:
    content: protected virtual bool LabelStartsWithTag(Service binding)
    parameters:
    - id: binding
      type: Service
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function LabelStartsWithTag(binding As Service) As Boolean
  overload: Steeltoe.Connector.Services.ServiceInfoFactory.LabelStartsWithTag*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.UriMatchesScheme(Service)
  commentId: M:Steeltoe.Connector.Services.ServiceInfoFactory.UriMatchesScheme(Service)
  id: UriMatchesScheme(Service)
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  langs:
  - csharp
  - vb
  name: UriMatchesScheme(Service)
  nameWithType: ServiceInfoFactory.UriMatchesScheme(Service)
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.UriMatchesScheme(Service)
  type: Method
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: UriMatchesScheme
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
    startLine: 61
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Services
  syntax:
    content: protected virtual bool UriMatchesScheme(Service binding)
    parameters:
    - id: binding
      type: Service
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function UriMatchesScheme(binding As Service) As Boolean
  overload: Steeltoe.Connector.Services.ServiceInfoFactory.UriMatchesScheme*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.UriKeyMatchesScheme(Service)
  commentId: M:Steeltoe.Connector.Services.ServiceInfoFactory.UriKeyMatchesScheme(Service)
  id: UriKeyMatchesScheme(Service)
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  langs:
  - csharp
  - vb
  name: UriKeyMatchesScheme(Service)
  nameWithType: ServiceInfoFactory.UriKeyMatchesScheme(Service)
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.UriKeyMatchesScheme(Service)
  type: Method
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: UriKeyMatchesScheme
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
    startLine: 89
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Services
  syntax:
    content: protected virtual bool UriKeyMatchesScheme(Service binding)
    parameters:
    - id: binding
      type: Service
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function UriKeyMatchesScheme(binding As Service) As Boolean
  overload: Steeltoe.Connector.Services.ServiceInfoFactory.UriKeyMatchesScheme*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetUsernameFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  commentId: M:Steeltoe.Connector.Services.ServiceInfoFactory.GetUsernameFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  id: GetUsernameFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  langs:
  - csharp
  - vb
  name: GetUsernameFromCredentials(Dictionary<String, Credential>)
  nameWithType: ServiceInfoFactory.GetUsernameFromCredentials(Dictionary<String, Credential>)
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetUsernameFromCredentials(System.Collections.Generic.Dictionary<System.String, Credential>)
  type: Method
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetUsernameFromCredentials
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
    startLine: 113
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Services
  syntax:
    content: protected virtual string GetUsernameFromCredentials(Dictionary<string, Credential> credentials)
    parameters:
    - id: credentials
      type: System.Collections.Generic.Dictionary{System.String,Credential}
    return:
      type: System.String
    content.vb: Protected Overridable Function GetUsernameFromCredentials(credentials As Dictionary(Of String, Credential)) As String
  overload: Steeltoe.Connector.Services.ServiceInfoFactory.GetUsernameFromCredentials*
  nameWithType.vb: ServiceInfoFactory.GetUsernameFromCredentials(Dictionary(Of String, Credential))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Steeltoe.Connector.Services.ServiceInfoFactory.GetUsernameFromCredentials(System.Collections.Generic.Dictionary(Of System.String, Credential))
  name.vb: GetUsernameFromCredentials(Dictionary(Of String, Credential))
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetPasswordFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  commentId: M:Steeltoe.Connector.Services.ServiceInfoFactory.GetPasswordFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  id: GetPasswordFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  langs:
  - csharp
  - vb
  name: GetPasswordFromCredentials(Dictionary<String, Credential>)
  nameWithType: ServiceInfoFactory.GetPasswordFromCredentials(Dictionary<String, Credential>)
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetPasswordFromCredentials(System.Collections.Generic.Dictionary<System.String, Credential>)
  type: Method
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetPasswordFromCredentials
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
    startLine: 116
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Services
  syntax:
    content: protected virtual string GetPasswordFromCredentials(Dictionary<string, Credential> credentials)
    parameters:
    - id: credentials
      type: System.Collections.Generic.Dictionary{System.String,Credential}
    return:
      type: System.String
    content.vb: Protected Overridable Function GetPasswordFromCredentials(credentials As Dictionary(Of String, Credential)) As String
  overload: Steeltoe.Connector.Services.ServiceInfoFactory.GetPasswordFromCredentials*
  nameWithType.vb: ServiceInfoFactory.GetPasswordFromCredentials(Dictionary(Of String, Credential))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Steeltoe.Connector.Services.ServiceInfoFactory.GetPasswordFromCredentials(System.Collections.Generic.Dictionary(Of System.String, Credential))
  name.vb: GetPasswordFromCredentials(Dictionary(Of String, Credential))
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetPortFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  commentId: M:Steeltoe.Connector.Services.ServiceInfoFactory.GetPortFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  id: GetPortFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  langs:
  - csharp
  - vb
  name: GetPortFromCredentials(Dictionary<String, Credential>)
  nameWithType: ServiceInfoFactory.GetPortFromCredentials(Dictionary<String, Credential>)
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetPortFromCredentials(System.Collections.Generic.Dictionary<System.String, Credential>)
  type: Method
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetPortFromCredentials
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
    startLine: 119
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Services
  syntax:
    content: protected virtual int GetPortFromCredentials(Dictionary<string, Credential> credentials)
    parameters:
    - id: credentials
      type: System.Collections.Generic.Dictionary{System.String,Credential}
    return:
      type: System.Int32
    content.vb: Protected Overridable Function GetPortFromCredentials(credentials As Dictionary(Of String, Credential)) As Integer
  overload: Steeltoe.Connector.Services.ServiceInfoFactory.GetPortFromCredentials*
  nameWithType.vb: ServiceInfoFactory.GetPortFromCredentials(Dictionary(Of String, Credential))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Steeltoe.Connector.Services.ServiceInfoFactory.GetPortFromCredentials(System.Collections.Generic.Dictionary(Of System.String, Credential))
  name.vb: GetPortFromCredentials(Dictionary(Of String, Credential))
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetTlsPortFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  commentId: M:Steeltoe.Connector.Services.ServiceInfoFactory.GetTlsPortFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  id: GetTlsPortFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  langs:
  - csharp
  - vb
  name: GetTlsPortFromCredentials(Dictionary<String, Credential>)
  nameWithType: ServiceInfoFactory.GetTlsPortFromCredentials(Dictionary<String, Credential>)
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetTlsPortFromCredentials(System.Collections.Generic.Dictionary<System.String, Credential>)
  type: Method
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetTlsPortFromCredentials
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
    startLine: 122
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Services
  syntax:
    content: protected virtual int GetTlsPortFromCredentials(Dictionary<string, Credential> credentials)
    parameters:
    - id: credentials
      type: System.Collections.Generic.Dictionary{System.String,Credential}
    return:
      type: System.Int32
    content.vb: Protected Overridable Function GetTlsPortFromCredentials(credentials As Dictionary(Of String, Credential)) As Integer
  overload: Steeltoe.Connector.Services.ServiceInfoFactory.GetTlsPortFromCredentials*
  nameWithType.vb: ServiceInfoFactory.GetTlsPortFromCredentials(Dictionary(Of String, Credential))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Steeltoe.Connector.Services.ServiceInfoFactory.GetTlsPortFromCredentials(System.Collections.Generic.Dictionary(Of System.String, Credential))
  name.vb: GetTlsPortFromCredentials(Dictionary(Of String, Credential))
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetHostFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  commentId: M:Steeltoe.Connector.Services.ServiceInfoFactory.GetHostFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  id: GetHostFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  langs:
  - csharp
  - vb
  name: GetHostFromCredentials(Dictionary<String, Credential>)
  nameWithType: ServiceInfoFactory.GetHostFromCredentials(Dictionary<String, Credential>)
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetHostFromCredentials(System.Collections.Generic.Dictionary<System.String, Credential>)
  type: Method
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetHostFromCredentials
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
    startLine: 125
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Services
  syntax:
    content: protected virtual string GetHostFromCredentials(Dictionary<string, Credential> credentials)
    parameters:
    - id: credentials
      type: System.Collections.Generic.Dictionary{System.String,Credential}
    return:
      type: System.String
    content.vb: Protected Overridable Function GetHostFromCredentials(credentials As Dictionary(Of String, Credential)) As String
  overload: Steeltoe.Connector.Services.ServiceInfoFactory.GetHostFromCredentials*
  nameWithType.vb: ServiceInfoFactory.GetHostFromCredentials(Dictionary(Of String, Credential))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Steeltoe.Connector.Services.ServiceInfoFactory.GetHostFromCredentials(System.Collections.Generic.Dictionary(Of System.String, Credential))
  name.vb: GetHostFromCredentials(Dictionary(Of String, Credential))
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetUriFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  commentId: M:Steeltoe.Connector.Services.ServiceInfoFactory.GetUriFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  id: GetUriFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  langs:
  - csharp
  - vb
  name: GetUriFromCredentials(Dictionary<String, Credential>)
  nameWithType: ServiceInfoFactory.GetUriFromCredentials(Dictionary<String, Credential>)
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetUriFromCredentials(System.Collections.Generic.Dictionary<System.String, Credential>)
  type: Method
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetUriFromCredentials
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
    startLine: 128
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Services
  syntax:
    content: protected virtual string GetUriFromCredentials(Dictionary<string, Credential> credentials)
    parameters:
    - id: credentials
      type: System.Collections.Generic.Dictionary{System.String,Credential}
    return:
      type: System.String
    content.vb: Protected Overridable Function GetUriFromCredentials(credentials As Dictionary(Of String, Credential)) As String
  overload: Steeltoe.Connector.Services.ServiceInfoFactory.GetUriFromCredentials*
  nameWithType.vb: ServiceInfoFactory.GetUriFromCredentials(Dictionary(Of String, Credential))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Steeltoe.Connector.Services.ServiceInfoFactory.GetUriFromCredentials(System.Collections.Generic.Dictionary(Of System.String, Credential))
  name.vb: GetUriFromCredentials(Dictionary(Of String, Credential))
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetClientIdFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  commentId: M:Steeltoe.Connector.Services.ServiceInfoFactory.GetClientIdFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  id: GetClientIdFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  langs:
  - csharp
  - vb
  name: GetClientIdFromCredentials(Dictionary<String, Credential>)
  nameWithType: ServiceInfoFactory.GetClientIdFromCredentials(Dictionary<String, Credential>)
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetClientIdFromCredentials(System.Collections.Generic.Dictionary<System.String, Credential>)
  type: Method
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetClientIdFromCredentials
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
    startLine: 131
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Services
  syntax:
    content: protected virtual string GetClientIdFromCredentials(Dictionary<string, Credential> credentials)
    parameters:
    - id: credentials
      type: System.Collections.Generic.Dictionary{System.String,Credential}
    return:
      type: System.String
    content.vb: Protected Overridable Function GetClientIdFromCredentials(credentials As Dictionary(Of String, Credential)) As String
  overload: Steeltoe.Connector.Services.ServiceInfoFactory.GetClientIdFromCredentials*
  nameWithType.vb: ServiceInfoFactory.GetClientIdFromCredentials(Dictionary(Of String, Credential))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Steeltoe.Connector.Services.ServiceInfoFactory.GetClientIdFromCredentials(System.Collections.Generic.Dictionary(Of System.String, Credential))
  name.vb: GetClientIdFromCredentials(Dictionary(Of String, Credential))
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetClientSecretFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  commentId: M:Steeltoe.Connector.Services.ServiceInfoFactory.GetClientSecretFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  id: GetClientSecretFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  langs:
  - csharp
  - vb
  name: GetClientSecretFromCredentials(Dictionary<String, Credential>)
  nameWithType: ServiceInfoFactory.GetClientSecretFromCredentials(Dictionary<String, Credential>)
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetClientSecretFromCredentials(System.Collections.Generic.Dictionary<System.String, Credential>)
  type: Method
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetClientSecretFromCredentials
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
    startLine: 134
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Services
  syntax:
    content: protected virtual string GetClientSecretFromCredentials(Dictionary<string, Credential> credentials)
    parameters:
    - id: credentials
      type: System.Collections.Generic.Dictionary{System.String,Credential}
    return:
      type: System.String
    content.vb: Protected Overridable Function GetClientSecretFromCredentials(credentials As Dictionary(Of String, Credential)) As String
  overload: Steeltoe.Connector.Services.ServiceInfoFactory.GetClientSecretFromCredentials*
  nameWithType.vb: ServiceInfoFactory.GetClientSecretFromCredentials(Dictionary(Of String, Credential))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Steeltoe.Connector.Services.ServiceInfoFactory.GetClientSecretFromCredentials(System.Collections.Generic.Dictionary(Of System.String, Credential))
  name.vb: GetClientSecretFromCredentials(Dictionary(Of String, Credential))
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetAccessTokenUriFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  commentId: M:Steeltoe.Connector.Services.ServiceInfoFactory.GetAccessTokenUriFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  id: GetAccessTokenUriFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  langs:
  - csharp
  - vb
  name: GetAccessTokenUriFromCredentials(Dictionary<String, Credential>)
  nameWithType: ServiceInfoFactory.GetAccessTokenUriFromCredentials(Dictionary<String, Credential>)
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetAccessTokenUriFromCredentials(System.Collections.Generic.Dictionary<System.String, Credential>)
  type: Method
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetAccessTokenUriFromCredentials
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
    startLine: 137
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Services
  syntax:
    content: protected virtual string GetAccessTokenUriFromCredentials(Dictionary<string, Credential> credentials)
    parameters:
    - id: credentials
      type: System.Collections.Generic.Dictionary{System.String,Credential}
    return:
      type: System.String
    content.vb: Protected Overridable Function GetAccessTokenUriFromCredentials(credentials As Dictionary(Of String, Credential)) As String
  overload: Steeltoe.Connector.Services.ServiceInfoFactory.GetAccessTokenUriFromCredentials*
  nameWithType.vb: ServiceInfoFactory.GetAccessTokenUriFromCredentials(Dictionary(Of String, Credential))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Steeltoe.Connector.Services.ServiceInfoFactory.GetAccessTokenUriFromCredentials(System.Collections.Generic.Dictionary(Of System.String, Credential))
  name.vb: GetAccessTokenUriFromCredentials(Dictionary(Of String, Credential))
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetStringFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.String)
  commentId: M:Steeltoe.Connector.Services.ServiceInfoFactory.GetStringFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.String)
  id: GetStringFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.String)
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  langs:
  - csharp
  - vb
  name: GetStringFromCredentials(Dictionary<String, Credential>, String)
  nameWithType: ServiceInfoFactory.GetStringFromCredentials(Dictionary<String, Credential>, String)
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetStringFromCredentials(System.Collections.Generic.Dictionary<System.String, Credential>, System.String)
  type: Method
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetStringFromCredentials
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
    startLine: 140
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Services
  syntax:
    content: protected virtual string GetStringFromCredentials(Dictionary<string, Credential> credentials, string key)
    parameters:
    - id: credentials
      type: System.Collections.Generic.Dictionary{System.String,Credential}
    - id: key
      type: System.String
    return:
      type: System.String
    content.vb: Protected Overridable Function GetStringFromCredentials(credentials As Dictionary(Of String, Credential), key As String) As String
  overload: Steeltoe.Connector.Services.ServiceInfoFactory.GetStringFromCredentials*
  nameWithType.vb: ServiceInfoFactory.GetStringFromCredentials(Dictionary(Of String, Credential), String)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Steeltoe.Connector.Services.ServiceInfoFactory.GetStringFromCredentials(System.Collections.Generic.Dictionary(Of System.String, Credential), System.String)
  name.vb: GetStringFromCredentials(Dictionary(Of String, Credential), String)
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetStringFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.Collections.Generic.List{System.String})
  commentId: M:Steeltoe.Connector.Services.ServiceInfoFactory.GetStringFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.Collections.Generic.List{System.String})
  id: GetStringFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.Collections.Generic.List{System.String})
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  langs:
  - csharp
  - vb
  name: GetStringFromCredentials(Dictionary<String, Credential>, List<String>)
  nameWithType: ServiceInfoFactory.GetStringFromCredentials(Dictionary<String, Credential>, List<String>)
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetStringFromCredentials(System.Collections.Generic.Dictionary<System.String, Credential>, System.Collections.Generic.List<System.String>)
  type: Method
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetStringFromCredentials
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
    startLine: 143
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Services
  syntax:
    content: protected virtual string GetStringFromCredentials(Dictionary<string, Credential> credentials, List<string> keys)
    parameters:
    - id: credentials
      type: System.Collections.Generic.Dictionary{System.String,Credential}
    - id: keys
      type: System.Collections.Generic.List{System.String}
    return:
      type: System.String
    content.vb: Protected Overridable Function GetStringFromCredentials(credentials As Dictionary(Of String, Credential), keys As List(Of String)) As String
  overload: Steeltoe.Connector.Services.ServiceInfoFactory.GetStringFromCredentials*
  nameWithType.vb: ServiceInfoFactory.GetStringFromCredentials(Dictionary(Of String, Credential), List(Of String))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Steeltoe.Connector.Services.ServiceInfoFactory.GetStringFromCredentials(System.Collections.Generic.Dictionary(Of System.String, Credential), System.Collections.Generic.List(Of System.String))
  name.vb: GetStringFromCredentials(Dictionary(Of String, Credential), List(Of String))
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetBoolFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.String)
  commentId: M:Steeltoe.Connector.Services.ServiceInfoFactory.GetBoolFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.String)
  id: GetBoolFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.String)
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  langs:
  - csharp
  - vb
  name: GetBoolFromCredentials(Dictionary<String, Credential>, String)
  nameWithType: ServiceInfoFactory.GetBoolFromCredentials(Dictionary<String, Credential>, String)
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetBoolFromCredentials(System.Collections.Generic.Dictionary<System.String, Credential>, System.String)
  type: Method
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetBoolFromCredentials
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
    startLine: 159
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Services
  syntax:
    content: protected virtual bool GetBoolFromCredentials(Dictionary<string, Credential> credentials, string key)
    parameters:
    - id: credentials
      type: System.Collections.Generic.Dictionary{System.String,Credential}
    - id: key
      type: System.String
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function GetBoolFromCredentials(credentials As Dictionary(Of String, Credential), key As String) As Boolean
  overload: Steeltoe.Connector.Services.ServiceInfoFactory.GetBoolFromCredentials*
  nameWithType.vb: ServiceInfoFactory.GetBoolFromCredentials(Dictionary(Of String, Credential), String)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Steeltoe.Connector.Services.ServiceInfoFactory.GetBoolFromCredentials(System.Collections.Generic.Dictionary(Of System.String, Credential), System.String)
  name.vb: GetBoolFromCredentials(Dictionary(Of String, Credential), String)
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetIntFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.String)
  commentId: M:Steeltoe.Connector.Services.ServiceInfoFactory.GetIntFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.String)
  id: GetIntFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.String)
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  langs:
  - csharp
  - vb
  name: GetIntFromCredentials(Dictionary<String, Credential>, String)
  nameWithType: ServiceInfoFactory.GetIntFromCredentials(Dictionary<String, Credential>, String)
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetIntFromCredentials(System.Collections.Generic.Dictionary<System.String, Credential>, System.String)
  type: Method
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetIntFromCredentials
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
    startLine: 170
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Services
  syntax:
    content: protected virtual int GetIntFromCredentials(Dictionary<string, Credential> credentials, string key)
    parameters:
    - id: credentials
      type: System.Collections.Generic.Dictionary{System.String,Credential}
    - id: key
      type: System.String
    return:
      type: System.Int32
    content.vb: Protected Overridable Function GetIntFromCredentials(credentials As Dictionary(Of String, Credential), key As String) As Integer
  overload: Steeltoe.Connector.Services.ServiceInfoFactory.GetIntFromCredentials*
  nameWithType.vb: ServiceInfoFactory.GetIntFromCredentials(Dictionary(Of String, Credential), String)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Steeltoe.Connector.Services.ServiceInfoFactory.GetIntFromCredentials(System.Collections.Generic.Dictionary(Of System.String, Credential), System.String)
  name.vb: GetIntFromCredentials(Dictionary(Of String, Credential), String)
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetIntFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.Collections.Generic.List{System.String})
  commentId: M:Steeltoe.Connector.Services.ServiceInfoFactory.GetIntFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.Collections.Generic.List{System.String})
  id: GetIntFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.Collections.Generic.List{System.String})
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  langs:
  - csharp
  - vb
  name: GetIntFromCredentials(Dictionary<String, Credential>, List<String>)
  nameWithType: ServiceInfoFactory.GetIntFromCredentials(Dictionary<String, Credential>, List<String>)
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetIntFromCredentials(System.Collections.Generic.Dictionary<System.String, Credential>, System.Collections.Generic.List<System.String>)
  type: Method
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetIntFromCredentials
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
    startLine: 175
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Services
  syntax:
    content: protected virtual int GetIntFromCredentials(Dictionary<string, Credential> credentials, List<string> keys)
    parameters:
    - id: credentials
      type: System.Collections.Generic.Dictionary{System.String,Credential}
    - id: keys
      type: System.Collections.Generic.List{System.String}
    return:
      type: System.Int32
    content.vb: Protected Overridable Function GetIntFromCredentials(credentials As Dictionary(Of String, Credential), keys As List(Of String)) As Integer
  overload: Steeltoe.Connector.Services.ServiceInfoFactory.GetIntFromCredentials*
  nameWithType.vb: ServiceInfoFactory.GetIntFromCredentials(Dictionary(Of String, Credential), List(Of String))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Steeltoe.Connector.Services.ServiceInfoFactory.GetIntFromCredentials(System.Collections.Generic.Dictionary(Of System.String, Credential), System.Collections.Generic.List(Of System.String))
  name.vb: GetIntFromCredentials(Dictionary(Of String, Credential), List(Of String))
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetListFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.String)
  commentId: M:Steeltoe.Connector.Services.ServiceInfoFactory.GetListFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.String)
  id: GetListFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.String)
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  langs:
  - csharp
  - vb
  name: GetListFromCredentials(Dictionary<String, Credential>, String)
  nameWithType: ServiceInfoFactory.GetListFromCredentials(Dictionary<String, Credential>, String)
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetListFromCredentials(System.Collections.Generic.Dictionary<System.String, Credential>, System.String)
  type: Method
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetListFromCredentials
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Services/ServiceInfoFactory.cs
    startLine: 193
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Services
  syntax:
    content: protected virtual List<string> GetListFromCredentials(Dictionary<string, Credential> credentials, string key)
    parameters:
    - id: credentials
      type: System.Collections.Generic.Dictionary{System.String,Credential}
    - id: key
      type: System.String
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Protected Overridable Function GetListFromCredentials(credentials As Dictionary(Of String, Credential), key As String) As List(Of String)
  overload: Steeltoe.Connector.Services.ServiceInfoFactory.GetListFromCredentials*
  nameWithType.vb: ServiceInfoFactory.GetListFromCredentials(Dictionary(Of String, Credential), String)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Steeltoe.Connector.Services.ServiceInfoFactory.GetListFromCredentials(System.Collections.Generic.Dictionary(Of System.String, Credential), System.String)
  name.vb: GetListFromCredentials(Dictionary(Of String, Credential), String)
references:
- uid: Steeltoe.Connector.Services
  commentId: N:Steeltoe.Connector.Services
  name: Steeltoe.Connector.Services
  nameWithType: Steeltoe.Connector.Services
  fullName: Steeltoe.Connector.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Connector.Services.IServiceInfoFactory
  commentId: T:Steeltoe.Connector.Services.IServiceInfoFactory
  parent: Steeltoe.Connector.Services
  name: IServiceInfoFactory
  nameWithType: IServiceInfoFactory
  fullName: Steeltoe.Connector.Services.IServiceInfoFactory
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.#ctor*
  commentId: Overload:Steeltoe.Connector.Services.ServiceInfoFactory.#ctor
  name: ServiceInfoFactory
  nameWithType: ServiceInfoFactory.ServiceInfoFactory
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.ServiceInfoFactory
- uid: Steeltoe.Connector.Services.Tags
  commentId: T:Steeltoe.Connector.Services.Tags
  parent: Steeltoe.Connector.Services
  name: Tags
  nameWithType: Tags
  fullName: Steeltoe.Connector.Services.Tags
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.DefaultUriScheme*
  commentId: Overload:Steeltoe.Connector.Services.ServiceInfoFactory.DefaultUriScheme
  name: DefaultUriScheme
  nameWithType: ServiceInfoFactory.DefaultUriScheme
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.DefaultUriScheme
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.Accepts*
  commentId: Overload:Steeltoe.Connector.Services.ServiceInfoFactory.Accepts
  name: Accepts
  nameWithType: ServiceInfoFactory.Accepts
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.Accepts
- uid: Service
  isExternal: true
  name: Service
  nameWithType: Service
  fullName: Service
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.Create*
  commentId: Overload:Steeltoe.Connector.Services.ServiceInfoFactory.Create
  name: Create
  nameWithType: ServiceInfoFactory.Create
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.Create
- uid: Steeltoe.Connector.Services.IServiceInfo
  commentId: T:Steeltoe.Connector.Services.IServiceInfo
  parent: Steeltoe.Connector.Services
  name: IServiceInfo
  nameWithType: IServiceInfo
  fullName: Steeltoe.Connector.Services.IServiceInfo
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.ServiceInfoTags*
  commentId: Overload:Steeltoe.Connector.Services.ServiceInfoFactory.ServiceInfoTags
  name: ServiceInfoTags
  nameWithType: ServiceInfoFactory.ServiceInfoTags
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.ServiceInfoTags
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.UriKeys*
  commentId: Overload:Steeltoe.Connector.Services.ServiceInfoFactory.UriKeys
  name: UriKeys
  nameWithType: ServiceInfoFactory.UriKeys
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.UriKeys
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.UriSchemes*
  commentId: Overload:Steeltoe.Connector.Services.ServiceInfoFactory.UriSchemes
  name: UriSchemes
  nameWithType: ServiceInfoFactory.UriSchemes
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.UriSchemes
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.TagsMatch*
  commentId: Overload:Steeltoe.Connector.Services.ServiceInfoFactory.TagsMatch
  name: TagsMatch
  nameWithType: ServiceInfoFactory.TagsMatch
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.TagsMatch
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.LabelStartsWithTag*
  commentId: Overload:Steeltoe.Connector.Services.ServiceInfoFactory.LabelStartsWithTag
  name: LabelStartsWithTag
  nameWithType: ServiceInfoFactory.LabelStartsWithTag
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.LabelStartsWithTag
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.UriMatchesScheme*
  commentId: Overload:Steeltoe.Connector.Services.ServiceInfoFactory.UriMatchesScheme
  name: UriMatchesScheme
  nameWithType: ServiceInfoFactory.UriMatchesScheme
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.UriMatchesScheme
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.UriKeyMatchesScheme*
  commentId: Overload:Steeltoe.Connector.Services.ServiceInfoFactory.UriKeyMatchesScheme
  name: UriKeyMatchesScheme
  nameWithType: ServiceInfoFactory.UriKeyMatchesScheme
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.UriKeyMatchesScheme
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetUsernameFromCredentials*
  commentId: Overload:Steeltoe.Connector.Services.ServiceInfoFactory.GetUsernameFromCredentials
  name: GetUsernameFromCredentials
  nameWithType: ServiceInfoFactory.GetUsernameFromCredentials
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetUsernameFromCredentials
- uid: System.Collections.Generic.Dictionary{System.String,Credential}
  commentId: T:System.Collections.Generic.Dictionary{System.String,Credential}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Credential>
  nameWithType: Dictionary<String, Credential>
  fullName: System.Collections.Generic.Dictionary<System.String, Credential>
  nameWithType.vb: Dictionary(Of String, Credential)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Credential)
  name.vb: Dictionary(Of String, Credential)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Credential
    name: Credential
    nameWithType: Credential
    fullName: Credential
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Credential
    name: Credential
    nameWithType: Credential
    fullName: Credential
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetPasswordFromCredentials*
  commentId: Overload:Steeltoe.Connector.Services.ServiceInfoFactory.GetPasswordFromCredentials
  name: GetPasswordFromCredentials
  nameWithType: ServiceInfoFactory.GetPasswordFromCredentials
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetPasswordFromCredentials
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetPortFromCredentials*
  commentId: Overload:Steeltoe.Connector.Services.ServiceInfoFactory.GetPortFromCredentials
  name: GetPortFromCredentials
  nameWithType: ServiceInfoFactory.GetPortFromCredentials
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetPortFromCredentials
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetTlsPortFromCredentials*
  commentId: Overload:Steeltoe.Connector.Services.ServiceInfoFactory.GetTlsPortFromCredentials
  name: GetTlsPortFromCredentials
  nameWithType: ServiceInfoFactory.GetTlsPortFromCredentials
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetTlsPortFromCredentials
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetHostFromCredentials*
  commentId: Overload:Steeltoe.Connector.Services.ServiceInfoFactory.GetHostFromCredentials
  name: GetHostFromCredentials
  nameWithType: ServiceInfoFactory.GetHostFromCredentials
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetHostFromCredentials
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetUriFromCredentials*
  commentId: Overload:Steeltoe.Connector.Services.ServiceInfoFactory.GetUriFromCredentials
  name: GetUriFromCredentials
  nameWithType: ServiceInfoFactory.GetUriFromCredentials
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetUriFromCredentials
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetClientIdFromCredentials*
  commentId: Overload:Steeltoe.Connector.Services.ServiceInfoFactory.GetClientIdFromCredentials
  name: GetClientIdFromCredentials
  nameWithType: ServiceInfoFactory.GetClientIdFromCredentials
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetClientIdFromCredentials
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetClientSecretFromCredentials*
  commentId: Overload:Steeltoe.Connector.Services.ServiceInfoFactory.GetClientSecretFromCredentials
  name: GetClientSecretFromCredentials
  nameWithType: ServiceInfoFactory.GetClientSecretFromCredentials
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetClientSecretFromCredentials
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetAccessTokenUriFromCredentials*
  commentId: Overload:Steeltoe.Connector.Services.ServiceInfoFactory.GetAccessTokenUriFromCredentials
  name: GetAccessTokenUriFromCredentials
  nameWithType: ServiceInfoFactory.GetAccessTokenUriFromCredentials
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetAccessTokenUriFromCredentials
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetStringFromCredentials*
  commentId: Overload:Steeltoe.Connector.Services.ServiceInfoFactory.GetStringFromCredentials
  name: GetStringFromCredentials
  nameWithType: ServiceInfoFactory.GetStringFromCredentials
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetStringFromCredentials
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetBoolFromCredentials*
  commentId: Overload:Steeltoe.Connector.Services.ServiceInfoFactory.GetBoolFromCredentials
  name: GetBoolFromCredentials
  nameWithType: ServiceInfoFactory.GetBoolFromCredentials
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetBoolFromCredentials
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetIntFromCredentials*
  commentId: Overload:Steeltoe.Connector.Services.ServiceInfoFactory.GetIntFromCredentials
  name: GetIntFromCredentials
  nameWithType: ServiceInfoFactory.GetIntFromCredentials
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetIntFromCredentials
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetListFromCredentials*
  commentId: Overload:Steeltoe.Connector.Services.ServiceInfoFactory.GetListFromCredentials
  name: GetListFromCredentials
  nameWithType: ServiceInfoFactory.GetListFromCredentials
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetListFromCredentials
